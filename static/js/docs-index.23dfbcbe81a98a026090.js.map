{"version":3,"sources":["E:/workspaces/tab-group/src/components/tab/index.ts","E:/workspaces/tab-group/src/index.ts","E:/workspaces/tab-group/docs/index.mdx","E:/workspaces/tab-group/src/components/TabContentContext.ts","E:/workspaces/tab-group/src/components/TabGroup.tsx","E:/workspaces/tab-group/src/components/TabHeaderContext.ts","E:/workspaces/tab-group/src/components/TabListContext.ts","E:/workspaces/tab-group/src/components/commons/useTabList.ts","E:/workspaces/tab-group/src/components/commons/useTabId.ts","E:/workspaces/tab-group/src/components/commons/useTabRegister.ts","E:/workspaces/tab-group/src/components/tab-content/TabContentWrapper.tsx","E:/workspaces/tab-group/src/components/tab-content/TabPanelListWrapper.tsx","E:/workspaces/tab-group/src/components/tab-content/TabContent.tsx","E:/workspaces/tab-group/src/components/tab-content/index.ts","E:/workspaces/tab-group/src/constants.ts","E:/workspaces/tab-group/src/components/tab-header-item/TabHeaderItemWrapper.tsx","E:/workspaces/tab-group/src/components/tab-header-item/TabHeaderItem.tsx","E:/workspaces/tab-group/src/components/tab-header-item/index.ts","E:/workspaces/tab-group/src/helpers/usePreventTransitionWhenMount.ts","E:/workspaces/tab-group/src/components/tab-header/TabHeaderWrapper.tsx","E:/workspaces/tab-group/src/components/InkBar.tsx","E:/workspaces/tab-group/src/components/tab-header/InnerTabHeader.tsx","E:/workspaces/tab-group/src/components/tab-header/TabHeader.tsx","E:/workspaces/tab-group/src/components/tab-header/index.ts","E:/workspaces/tab-group/src/components/tab-panel/TabPanelWrapper.tsx","E:/workspaces/tab-group/src/components/tab-panel/TabPanel.tsx","E:/workspaces/tab-group/src/components/tab-panel/index.ts","E:/workspaces/tab-group/src/components/tab/useInTabHeader.ts","E:/workspaces/tab-group/src/components/tab/useInTabContent.ts","E:/workspaces/tab-group/src/components/tab/Tab.tsx","E:/workspaces/tab-group/src/helpers/useRefValue.ts","E:/workspaces/tab-group/src/helpers/uuid.ts"],"names":["Tab","TabGroup","name","layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","alt","src","__position","__code","__scope","this","useState","useCallback","Playground","Props","MdDelete","TabHeader","TabHeaderItem","TabContent","TabPanel","Button","title","disabled","tabHeaderExtraContent","primary","raised","style","margin","marginLeft","active","setActive","selectedIndex","onSelect","NextIcon","display","padding","color","borderless","handlePrevClick","handleNextClick","onClick","animateHeight","id","items","i","push","content","tabs","setTabs","map","tab","key","event","tabId","stopPropagation","newTabs","filter","handleTabRemove","index","Math","max","setSelectedIndex","isMDXComponent","TabContentContext","React","createContext","InnerTabGroup","className","children","dense","forceRenderTabPanel","cacheable","rest","classNames","extraContent","UnControlledTabGroup","defaultIndex","onSelectRef","useRefValue","handleTabSelect","tabIndex","prevSelectedIndex","onSelectProps","current","useRef","undefined","TabHeaderContext","TabListContext","useTabList","renderCount","setRenderCount","isRenderredRef","tabsRef","sortedTabsRef","tabsPropsRef","useEffect","register","sortedTabs","currentIdx","indexOf","state","idx","length","unregister","tabIdx","splice","getTabs","getTabProps","useMemo","useTabId","uuid","useTabRegister","context","useContext","unregisterRef","TabContentWrapper","styled","div","TabPanelListWrapper","tabListContext","inTabContent","transform","tabContentRef","prevSelectedIndexRef","tabContent","prev","querySelector","height","prevHeight","getBoundingClientRect","overflow","isEnd","reset","transition","rafId","requestAnimationFrame","timeoutId","setTimeout","cancelAnimationFrame","clearTimeout","useAnimateHeight","Provider","value","ref","LEFT_KEY_CODE","TOP_KEY_CODE","RIGHT_KEY_CODE","BOTTOM_KEY_CODE","hoverCss","css","activeCss","theme","palette","disabledCss","text","TabHeaderItemWrapper","tabHeaderContext","isActive","rippleRef","useRipple","handleClick","handleKeyDown","keyCode","preventDefault","nextTab","getNextTabIndex","prevTab","getPrevTabIndex","data-testid","role","aria-disabled","aria-selected","onKeyDown","usePreventTransitionWhenMount","elementRef","element","borderCss","TabHeaderWrapper","topCss","InkBar","attrs","top","transitions","create","InnerTabHeader","tabListRef","inkBarRef","inkBar","tabList","activeTab","width","left","containerLeft","TabPanelWrapper","forceRenderContent","other","useIsActive","isNeedRendered","isCacheable","isNeedRenderedRef","useIsNeedRendered","tabContentContext","useIsCacheable","isForceRenderContent","useIsForceRenderContent","renderingChildren","activeChildren","useRenderingChildren","aria-hidden","aria-labelledby","useInTabHeader","useInTabContent","isInTabHeader","isInTabContent","count"],"mappings":"o3BAEeA,IAAf,E,o4CCeeC,QAAf,E,ySCAsBC,EAIS,WAJ/B,IAAsBA,EAKhBC,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,+BADR,+BAGA,yEACA,qBAAG,+BAAGC,WAAW,KAAQ,CACrB,KAAQ,6DACP,mBAAKC,IAAI,cAAcC,IAAI,6DAFhC,KAGF,+BAAGF,WAAW,KAAQ,CAChB,KAAQ,6DACP,mBAAKC,IAAI,YAAYC,IAAI,+DAC9B,iBAAQ,CACN,GAAM,4BADR,4BAGA,uBAAK,kCAAMF,WAAW,OAAU,CAC5B,UAAa,mBADZ,0CAIL,iBAAQ,CACN,GAAM,4BADR,4BAGA,yYACA,iBAAQ,CACN,GAAM,4BADR,4BAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,mXAeL,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,oNAAiIC,QAAS,CAC3KP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,cACb,YAAC,EAAD,CAAUA,QAAQ,YAChB,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,+BAGA,iBAAQ,CACN,GAAM,4BADR,4BAGA,iRACA,uDACA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,mBADZ,mDAIL,+BAAS,0BAAYA,WAAW,KAAvB,OAAT,uEACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uTAYL,iBAAQ,CACN,GAAM,gBADR,gBAGA,yEACA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,obAA6QC,QAAS,CACvTP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,cACb,YAAC,EAAD,CAAUA,QAAQ,YAChB,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMC,UAAQ,EAACnB,QAAQ,OAAlC,6BAGA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMC,UAAQ,EAACnB,QAAQ,OAAlC,6BAGA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,+BAGA,yEACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,uOAAoJC,QAAS,CAC9LP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,cACb,YAAC,EAAD,CAAUA,QAAQ,YAChB,YAAC,EAAD,CAAKkB,MAAM,gBAAMC,UAAQ,EAACnB,QAAQ,OAAlC,6BAGA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,+BAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,4EACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,4jBAAiTC,QAAS,CAC3VP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,cACb,YAAC,EAAD,CAAUA,QAAQ,YAChB,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OACvB,YAAC,EAAD,CAAUA,QAAQ,YAChB,YAAC,EAAD,CAAKkB,MAAM,0CAAYlB,QAAQ,OAA/B,qDACA,YAAC,EAAD,CAAKkB,MAAM,0CAAYlB,QAAQ,OAA/B,qDACA,YAAC,EAAD,CAAKkB,MAAM,0CAAYlB,QAAQ,OAA/B,uDAGJ,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,+BAGA,iBAAQ,CACN,GAAM,4BADR,4BAGA,6GACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,odAA6WC,QAAS,CACvZP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,cACb,YAAC,EAAD,CAAUoB,sBAAuB,uBAC3B,YAACH,EAAA,EAAD,CAAQI,SAAO,EAACC,QAAM,EAACC,MAAO,CAC5BC,OAAQ,GACPxB,QAAQ,UAFX,gBAKA,YAACiB,EAAA,EAAD,CAAQI,SAAO,EAACC,QAAM,EAACC,MAAO,CAC5BC,OAAQ,EACRC,WAAY,GACXzB,QAAQ,UAHX,iBAMMA,QAAQ,YAClB,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,+BAGA,iBAAQ,CACN,GAAM,8CADR,8CAGA,qBAAG,0BAAYC,WAAW,KAAvB,YAAH,qGACA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,w6CAA8VC,QAAS,CACxYP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,cACb,YAAC,EAAD,CAAUA,QAAQ,YAChB,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,0hBAGA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,kuBAKA,iBAAQ,CACN,GAAM,wCADR,wCAGA,qBAAG,0BAAYC,WAAW,KAAvB,aAAH,mFACA,8BACE,iBAAGA,WAAW,cAAd,qBAAkC,0BAAYA,WAAW,KAAvB,aAAlC,mFAA0G,0BAAYA,WAAW,KAAvB,iBAA1G,WAA0K,0BAAYA,WAAW,KAAvB,YAA1K,wBAEF,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,qgBAiBL,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,qSAA8QC,QAAS,CACxTP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,eACZ,WAAO,IAAD,EAC2BQ,mBAAS,GADpC,mBACMkB,EADN,KACcC,EADd,KAED,OAAO,YAAC,IAAD,CAAWC,cAAeF,EAAQG,SAAUF,EAAW3B,QAAQ,aAC5E,YAAC,IAAD,CAAekB,MAAM,gBAAMlB,QAAQ,kBACnC,YAAC,IAAD,CAAekB,MAAM,gBAAMlB,QAAQ,kBACnC,YAAC,IAAD,CAAekB,MAAM,gBAAMlB,QAAQ,sBAIjC,6SACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,8iBAAuhBC,QAAS,CACjkBP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,eACZ,WAAO,IAAD,EAC2BQ,mBAAS,GADpC,mBACMkB,EADN,KACcC,EADd,KAGKG,EAAW,kBAAM,mBAAKP,MAAO,CACjCQ,QAAS,eACTC,QAAS,mBACTC,MAAO,wBAHc,MAMvB,OAAO,YAAC,IAAD,CAAWL,cAAeF,EAAQG,SAAUF,EAAWO,YAAU,EAAClC,QAAQ,aACnF,YAAC,IAAD,CAAekB,MAAM,gBAAMlB,QAAQ,kBACnC,YAAC8B,EAAD,CAAU9B,QAAQ,aAClB,YAAC,IAAD,CAAekB,MAAM,gBAAMlB,QAAQ,kBACnC,YAAC8B,EAAD,CAAU9B,QAAQ,aAClB,YAAC,IAAD,CAAekB,MAAM,gBAAMlB,QAAQ,sBAIrC,iBAAQ,CACN,GAAM,oDADR,oDAGA,qBAAG,0BAAYC,WAAW,KAAvB,cAAH,+FACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,g3BAoCL,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,4rBAAioBC,QAAS,CAC3qBP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,eACZ,WAAO,IAAD,EAC2BQ,mBAAS,GADpC,mBACMkB,EADN,KACcC,EADd,KAEKQ,EAAkB1B,uBAAY,WACnB,IAAXiB,GAIJC,EAAUD,EAAS,KAClB,CAACA,IACEU,EAAkB3B,uBAAY,WACnB,IAAXiB,GAIJC,EAAUD,EAAS,KAClB,CAACA,IACJ,OAAO,8BACX,YAAC,IAAD,CAAYE,cAAeF,EAAQ1B,QAAQ,cACzC,YAAC,IAAD,CAAUA,QAAQ,YAAlB,iBACA,YAAC,IAAD,CAAUA,QAAQ,YAAlB,iBACA,YAAC,IAAD,CAAUA,QAAQ,YAAlB,kBAEF,YAACiB,EAAA,EAAD,CAAQoB,QAASF,EAAiBnC,QAAQ,UAA1C,sBACA,YAACiB,EAAA,EAAD,CAAQoB,QAASD,EAAiBpC,QAAQ,UAA1C,0BAIA,iBAAQ,CACN,GAAM,4BADR,4BAGA,qBAAG,0BAAYC,WAAW,KAAvB,YAAH,WAA8D,0BAAYA,WAAW,KAAvB,cAA9D,yUAAgL,0BAAYA,WAAW,KAAvB,iBAAhL,iEACA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,s7CAA4WC,QAAS,CACtZP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,cACb,YAAC,EAAD,CAAUsC,eAAa,EAACtC,QAAQ,YAC9B,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,0hBAGA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,kuBAKA,iBAAQ,CACN,GAAM,4BADR,4BAGA,sHACA,sBACE,kBAAIC,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,mFADQ,kBAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,4CADQ,oBAItB,qCAAU,0BAAYA,WAAW,KAAvB,OAAV,uBAAkE,0BAAYA,WAAW,KAAvB,MAAlE,yPACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,idAqBL,YAAC,IAAD,CAAYG,WAAY,GAAIC,OAAQ,0RAA6MC,QAAS,CACxPP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,cACb,YAAC,EAAD,CAAUA,QAAQ,YAChB,YAAC,EAAD,CAAKkB,MAAM,gBAAMqB,GAAG,UAAUvC,QAAQ,OAAtC,6BAGA,YAAC,EAAD,CAAKkB,MAAM,gBAAMqB,GAAG,YAAYvC,QAAQ,OAAxC,6BAGA,YAAC,EAAD,CAAKkB,MAAM,gBAAMqB,GAAG,SAASvC,QAAQ,OAArC,+BAKA,iBAAQ,CACN,GAAM,kCADR,kCAGA,uGACA,YAAC,IAAD,CAAYI,WAAY,GAAIC,OAAQ,4qCAA2nCC,QAAS,CACtqCP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,eACZ,WAAO,IAAD,EACuBQ,oBAAS,WAG/B,IAFA,IAAMgC,EAAQ,GAELC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAME,KAAK,CACTH,GAAIE,EACJvB,MAAM,eAAD,OAAOuB,EAAI,GAChBE,QAAQ,eAAD,OAAOF,EAAI,KAItB,OAAOD,KAZR,mBACMI,EADN,KACYC,EADZ,KA+BD,OAAO,8BACb,YAAC,EAAD,CAAU7C,QAAQ,YACf4C,EAAKE,KAAI,SAAAC,GAAG,OAAI,YAAC,EAAD,CAAKC,IAAKD,EAAIR,GAAIrB,MAAO,uBACnC6B,EAAI7B,MAAM,YAAC,IAAD,CAAUmB,QAAS,SAAAY,GAAK,OAnBb,SAACA,EAAOC,GAC9BD,EAAME,kBACN,IAAMC,EAAUR,EAAKS,QAAO,SAAAN,GAAG,OAAIA,EAAIR,KAAOW,KAC9CL,EAAQO,GAgB+BE,CAAgBL,EAAOF,EAAIR,KAAKvC,QAAQ,cACzEA,QAAQ,OACf+C,EAAIJ,aAGX,YAAC1B,EAAA,EAAD,CAAQK,QAAM,EAACe,QAlBS,WAChB,IAAMkB,EAAQC,KAAKC,IAAL,MAAAD,KAAI,YAAQZ,EAAKE,KAAI,SAAAC,GAAG,OAAIA,EAAIR,OAA5B,SAAkC,KAAK,EACnDa,EAAO,sBAAOR,GAAP,CAAa,CACxBL,GAAIgB,EACJrC,MAAM,eAAD,OAAOqC,EAAQ,GACpBZ,QAAQ,eAAD,OAAOY,EAAQ,MAExBV,EAAQO,IAWmBpD,QAAQ,UAA3C,oBAIE,iBAAQ,CACN,GAAM,4BADR,4BAGA,qBAAG,0BAAYC,WAAW,KAAvB,YAAH,mFAA0E,0BAAYA,WAAW,KAAvB,iBAA1E,sBAA2I,0BAAYA,WAAW,KAAvB,YAA3I,uEAAgN,0BAAYA,WAAW,KAAvB,YAAhN,uHACA,qFAAkB,0BAAYA,WAAW,KAAvB,YAAlB,yFACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,0mBAoBL,YAAC,IAAD,CAAYG,WAAY,GAAIC,OAAQ,8eAA8WC,QAAS,CACzZP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,eACZ,WAAO,IAAD,EACyCQ,mBAAS,GADlD,mBACMoB,EADN,KACqB8B,EADrB,KAED,OAAO,8BACb,gFAAe9B,GACf,YAAC,EAAD,CAAUA,cAAeA,EAAeC,SAAU6B,EAAkB1D,QAAQ,YAC1E,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,8BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,8BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,mCAKA,iBAAQ,CACN,GAAM,8CADR,8CAGA,qBAAG,0BAAYC,WAAW,KAAvB,YAAH,gEAAsE,0BAAYA,WAAW,KAAvB,YAAtE,yCAAsI,0BAAYA,WAAW,KAAvB,SAAtI,4JACA,YAAC,IAAD,CAAYG,WAAY,GAAIC,OAAQ,oPAAiKC,QAAS,CAC5MP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAnB,WACAD,MACAqB,cACAC,kBACAC,eACAC,aACAC,YACCjB,QAAQ,cACb,YAAC,EAAD,CAAU6B,SAAU,SAAA0B,GAAK,OAAc,IAAVA,GAAavD,QAAQ,YAChD,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,6BACA,YAAC,EAAD,CAAKkB,MAAM,gBAAMlB,QAAQ,OAAzB,gC,qKAOJH,EAAW8D,gBAAiB,G,qECxpB5B,yCAiBMC,EAjBN,OAiB0BC,EAAMC,cAC9B,MAGaF,M,gtBC+Cf,SAASG,EAAT,GAYW,IAXTC,EAWQ,EAXRA,UACAnC,EAUQ,EAVRA,SAUQ,IATRD,qBASQ,MATQ,EASR,EARRqC,EAQQ,EARRA,SACAC,EAOQ,EAPRA,MACAC,EAMQ,EANRA,oBACAC,EAKQ,EALRA,UACA9B,EAIQ,EAJRA,cACAlB,EAGQ,EAHRA,sBACAc,EAEQ,EAFRA,WACGmC,EACK,kKACR,OACE,uCAAKL,UAAWM,IAAW,mBAAoBN,IAAgBK,GAC7D,kBAAC,IAAD,CACEzC,cAAeA,EACfsC,MAAOA,EACPrC,SAAUA,EACV0C,aAAcnD,EACdc,WAAYA,GAEX+B,GAEH,kBAAC,IAAD,CACErC,cAAeA,EACfuC,oBAAqBA,EACrBC,UAAWA,EACX9B,cAAeA,GAEd2B,IAST,SAASO,EAAT,GAA+E,IAAD,IAA9CC,oBAA8C,MAA/B,EAA+B,EAA5B5C,EAA4B,EAA5BA,SAAawC,EAAe,6CAClC7D,mBAASiE,GADyB,mBACrE7C,EADqE,KACtD8B,EADsD,KAEtEgB,EAAcC,YAAY9C,GAE1B+C,EAAqCnE,uBACzC,SAACoE,EAAUC,EAAmB7B,GAC5B,IAAM8B,EAAgBL,EAAYM,UAE9BD,IACoD,IAAtDA,EAAcF,EAAUC,EAAmB7B,IAM7CS,EAAiBmB,KAEnB,CAACH,IAEH,OACE,kBAACX,EAAD,iBACMM,EADN,CAEExC,SAAU+C,EACVhD,cAAeA,KAQrB,SAASnC,EAAT,GAAsD,IAAlCmC,EAAiC,EAAjCA,cAAkByC,EAAe,iCAEnD,OADuBY,sBAAyBC,IAAlBtD,GACRoD,QACpB,kBAACR,EAAyBH,GAE1B,kBAACN,EAAD,eAAenC,cAAeA,GAAmByC,IAItC5E,M,sPCnJf,yCAoBM0F,EApBN,OAoByBtB,EAAMC,cAC7B,MAGaqB,M,2RCxBf,kD,6jBA6BA,IAAMC,EAAiBvB,IAAMC,cAA0C,MAExDsB,M,0aCzBf,SAASC,EAAWzD,GAAwB,IAAD,EACHpB,mBAAS,GADN,mBAClC8E,EADkC,KACrBC,EADqB,KAEnCC,EAAiBP,kBAAO,GACxBQ,EAAUR,iBAAiB,IAC3BS,EAAgBT,iBAAiB,IACjCU,EAAeV,iBAAqC,IAC1DS,EAAcV,QAAU,GACxBQ,EAAeR,SAAU,EAEzBY,qBAAU,WACRJ,EAAeR,SAAU,KAM3B,IAAMa,EAAWpF,uBAAY,SAACyC,EAAenD,GAC3C,IAAM+F,EAAaJ,EAAcV,QAC3Be,EAAaD,EAAWE,QAAQ9C,GACtC,GAAIsC,EAAeR,UAA2B,IAAhBe,EAE5B,OADAR,GAAe,SAACU,GAAD,OAAWA,EAAQ,MAC1B,EAUV,IAPoD,IAApCR,EAAQT,QAAQgB,QAAQ9C,KAGtCuC,EAAQT,QAAQtC,KAAKQ,GACrByC,EAAaX,QAAQ9B,GAASnD,IAGZ,IAAhBgG,EACF,OAAOA,EAGT,IAAMG,EAAMJ,EAAWK,OAGvB,OAFAL,EAAWpD,KAAKQ,GAETgD,IACN,IAKGE,EAAa3F,uBAAY,SAACyC,GAC9B,IAAM4C,EAAaJ,EAAcV,QAC3BpC,EAAO6C,EAAQT,QACfkB,EAAMJ,EAAWE,QAAQ9C,GAEzBmD,EAASzD,EAAKoD,QAAQ9C,IACZ,IAAZmD,IACFzD,EAAK0D,OAAOD,EAAQ,UACbV,EAAaX,QAAQ9B,KAGjB,IAATgD,IACFJ,EAAWQ,OAAOJ,EAAK,GAEvBX,GAAe,SAACU,GAAD,OAAWA,EAAQ,QAEnC,IAKGM,EAAU9F,uBAAY,WAC1B,OAAOiF,EAAcV,UACpB,IAKGwB,EAAc/F,uBAAY,SAACyC,GAC/B,OAAOyC,EAAaX,QAAQ9B,KAC3B,IAEH,OAAOuD,mBACL,iBAAO,CACLZ,WACAO,aACAxE,gBACA0D,cACAiB,UACAC,iBAEF,CAACA,EAAaD,EAASV,EAAUP,EAAa1D,EAAewE,IAIlDf,M,4ZCzFf,SAASqB,IAGP,OAFcD,kBAAQE,IAAM,IAKfD,QCHf,SAASE,EAAe7G,GACtB,IAAM8G,EAAUC,qBAAW1B,KACrBlC,EAAQwD,IACRnD,EAAQsD,EAAUA,EAAQhB,SAAS3C,EAAOnD,GAAS,KAAO,EAC1DgH,EAAgBpC,YAAYkC,EAAUA,EAAQT,gBAAalB,GAWjE,OATAU,qBAAU,WACR,IAAMQ,EAAaW,EAAc/B,QAEjC,GAAIoB,EACF,OAAO,kBAAMA,EAAWlD,MAGzB,CAACA,EAAO6D,IAEJ,CAAC7D,EAAOK,G,yLAGFqD,M,+2BCzBf,IAAMI,EAAoBC,IAAOC,IAAV,KAMRF,I,ufCNf,IAAMG,EAAsBF,IAAOC,IAAV,KAWVC,I,wUC2FA,SAASpG,EAAWhB,GAAe,IAE9CiE,EAOEjE,EAPFiE,UACApC,EAME7B,EANF6B,cACAqC,EAKElE,EALFkE,SACAE,EAIEpE,EAJFoE,oBACAC,EAGErE,EAHFqE,UAN6C,EAS3CrE,EAFFuC,qBAP6C,SAQ1C+B,EAR0C,YAS3CtE,EAT2C,4FAUzCqH,EAAiB/B,YAAWzD,GAC5BiF,EAAUJ,mBACd,iBAAO,CACLY,cAAc,EACdlD,sBACAC,eAEF,CAACA,EAAWD,IAERmD,EAAYb,mBAChB,wCAAsB,IAAM7E,EAA5B,kBACA,CAACA,IAGG2F,EAAgBtC,iBAAuB,MAG7C,OAvFF,SACE3C,EACAV,EACA2F,EACAH,GAEA,IAAMI,EAAuBvC,iBAAOrD,GAEpCgE,qBAAU,WACR,IAAMd,EAAoB0C,EAAqBxC,QACzCyC,EAAaF,EAAcvC,QAGjC,GAFAwC,EAAqBxC,QAAUpD,EAE3BkD,IAAsBlD,GAAkB6F,GAAenF,EAA3D,CAIA,IAAMM,EAAOwE,EAAeb,UACtBmB,EAAOD,EAAWE,cAAX,WACP/E,EAAKkC,KAELE,EAAUyC,EAAWE,cAAX,WACV/E,EAAKhB,KAEX8F,EAAKnG,MAAMqG,OAAS,OACpB5C,EAAQzD,MAAMqG,OAAS,GAjBT,IAkBEC,EAAeH,EAAKI,wBAA5BF,OACAA,EAAW5C,EAAQ8C,wBAAnBF,OAERH,EAAWlG,MAAMqG,OAAjB,UAA6BC,EAA7B,MACAJ,EAAWlG,MAAMwG,SAAW,SAE5B,IAAIC,GAAQ,EACNC,EAAQ,WACZD,GAAQ,EACRP,EAAWlG,MAAM2G,WAAa,GAC9BT,EAAWlG,MAAMqG,OAAS,GAC1BH,EAAWlG,MAAMwG,SAAW,GAC5BL,EAAKnG,MAAMqG,OAAS,IAGhBO,EAAQC,uBAAsB,WAClCX,EAAWlG,MAAMqG,OAAjB,UAA6BA,EAA7B,SAGIS,EAAYC,WAAWL,EAAO,KAEpC,OAAO,WACLM,qBAAqBJ,GACrBK,aAAaH,GACRL,GACHC,QAGH,CAAC3F,EAAeV,EAAe2F,EAAeH,IA+BjDqB,CAAiBnG,EAAeV,EAAe2F,EAAeH,GAG5D,kBAAChC,EAAA,EAAesD,SAAhB,CAAyBC,MAAOvB,GAC9B,kBAACxD,EAAA,EAAkB8E,SAAnB,CAA4BC,MAAO9B,GACjC,kBAAC,EAAD,eACE7C,UAAWM,IAAW,qBAAsBN,IACxCK,EAFN,CAGEuE,IAAKrB,IAEL,kBAAC,EAAD,CACEhG,MAAO,CAAE+F,aACTtD,UAAU,yBAETC,M,uhBC/Ib,uDAEelD,MAAf,E,kqBCFa8H,EAAgB,G,kMAEtB,IAAMC,EAAe,G,iMAErB,IAAMC,EAAiB,G,mMAEvB,IAAMC,EAAkB,G,66CCJ/B,IAAMC,EAAWC,YAAH,KAMRC,EAAYD,YAAH,KACJ,SAACnJ,GAAD,OAAWA,EAAMqJ,MAAMC,QAAQhI,QAAQ,QAI5CiI,EAAcJ,YAAH,KAEN,SAACnJ,GAAD,OAAWA,EAAMqJ,MAAMC,QAAQE,KAAKpI,YAQzCqI,EAAuBvC,IAAOC,IAAV,KAWf,SAACnH,GAAD,OAAWA,EAAMqJ,MAAMC,QAAQE,KAAKlI,WAmB3C,SAACtB,GAAD,OAAYA,EAAMoB,UAAY8H,KAC9B,SAAClJ,GAAD,OAAWA,EAAMoB,UAAYmI,KAC7B,SAACvJ,GAAD,OAAWA,EAAM2B,QAAUyH,KAGhBK,I,8XCwCf,SAAS1I,EAAT,GAOW,IANTI,EAMQ,EANRA,MACA8C,EAKQ,EALRA,UACAzC,EAIQ,EAJRA,MACAJ,EAGQ,EAHRA,SACAoB,EAEQ,EAFRA,GACG8B,EACK,6DACF+C,EAAiBN,qBAAW1B,KAC5BqE,EAAmB3C,qBAAW3B,KAF5B,EAGeyB,YAAe,CAAEzF,aAHhC,mBAGD+B,EAHC,KAGMK,EAHN,KAIF3B,EAAgBwF,EAAiBA,EAAexF,eAAiB,EACjE8H,EAAWnG,IAAU3B,EAErB+H,EAAYC,iBAA0B1E,EAAW/D,GAEjD0I,EAAcpJ,uBAClB,SAACwC,GACKwG,GACFA,EAAiB5H,SAAS0B,EAAON,KAGrC,CAACM,EAAOkG,IAGJK,EAAgBrJ,uBACpB,SAACwC,GAAgC,IACvB8G,EAAY9G,EAAZ8G,QACR,GAAI3C,GAAkBqC,EAAkB,CAAC,IAC/BlD,EAAyBa,EAAzBb,QAASC,EAAgBY,EAAhBZ,YACX5D,EAAO2D,IACb,GAAIwD,IAAYhB,GAAkBgB,IAAYf,EAAiB,CAC7D/F,EAAME,kBACNF,EAAM+G,iBACN,IAAMC,EAvFhB,SAASC,EACPtI,EACAgB,EACA4D,GAGA,IADA,IAAI/D,EAAIb,EAAgB,EACjBa,EAAIG,EAAKuD,OAAQ1D,GAAK,EAAG,CAG9B,IADoB+D,EADN5D,EAAKH,IACoBtB,SAErC,OAAOsB,EAIX,OAAIA,IAAMG,EAAKuD,OACN+D,GAAiB,EAAGtH,EAAM4D,GAG5B,EAqEiB0D,CAAgBtI,EAAegB,EAAM4D,GACrDiD,EAAiB5H,SAASoI,EAAShH,QAC9B,GAAI8G,IAAYlB,GAAiBkB,IAAYjB,EAAc,CAChE7F,EAAME,kBACNF,EAAM+G,iBACN,IAAMG,EA/DhB,SAASC,EACPxI,EACAgB,EACA4D,GAGA,IADA,IAAI/D,EAAIb,EAAgB,EACjBa,EAAI,EAAGA,GAAK,EAAG,CAGpB,IADoB+D,EADN5D,EAAKH,IACoBtB,SAErC,OAAOsB,EAIX,OAAsB,IAAlBb,EACKwI,EAAgBxH,EAAKuD,OAAQvD,EAAM4D,GAGrC,EA6CiB4D,CAAgBxI,EAAegB,EAAM4D,GACrDiD,EAAiB5H,SAASsI,EAASlH,OAIzC,CAACrB,EAAe6H,EAAkBrC,IAGpC,OAAe,IAAX7D,EACK,KAIP,kBAAC,EAAD,eACES,UAAWM,IAAW,mBAAoBN,EAAW,CACnD,0BAA2B0F,IAE7BnI,MAAOA,EACPJ,SAAUA,EACVO,OAAQgI,EACRrH,QAASlB,OAAW+D,EAAY2E,EAChCjB,IAAKe,EACLU,cAAA,0BAAgC9G,GAChC+G,KAAK,MACLzF,SAAU6E,EAAW,GAAK,EAC1Ba,gBAAepJ,EACfqJ,gBAAed,EACfe,UAAWtJ,OAAW+D,EAAY4E,EAClCvH,GAAIA,GAAMW,GACNmB,GAEJ,yBAAKL,UAAU,4BAA4B9C,IAKlCJ,M,sRC7Kf,8DAEeA,MAAf,E,mbCGA,SAAS4J,EACPC,GAEA/E,qBAAU,WACR,IAAMgF,EAAUD,EAAW3F,QAC3B,GAAI4F,EAAS,CAAC,IACJ1C,EAAe0C,EAAQrJ,MAAvB2G,WACR0C,EAAQrJ,MAAM2G,WAAa,OAC3B,IAAMC,EAAQC,uBAAsB,WAClCwC,EAAQrJ,MAAM2G,WAAaA,KAG7B,OAAO,kBAAMK,qBAAqBJ,OAGnC,CAACwC,IAGSD,Q,6kCCjBf,IAAMG,EAAY3B,YAAH,KAIT4B,EAAmB7D,IAAOC,IAAV,KAKX,SAACnH,GAAD,OAAWA,EAAMqJ,MAAMC,QAAQE,KAAKlI,WAE3C,SAACtB,GAAD,OAAYA,EAAMmC,YAAc2I,KAyBrBC,I,qfCxCf,IAAMC,EAAS7B,YAAH,KAWN8B,EAAS/D,IAAOC,IAAI+D,MAAM,CAC9BjH,UAAW,kBADEiD,CAAH,KAKR,SAAClH,GAAD,OAAWA,EAAMmL,KAAOH,KAEZ,SAAChL,GAAD,OACZA,EAAMqJ,MAAM+B,YAAYC,OAAO,CAAC,YAAa,aAE3B,SAACrL,GAAD,OAAWA,EAAMqJ,MAAMC,QAAQhI,QAAQ,QAG9C2J,ICTf,SAASK,EAAT,GAAwE,IAA9CpH,EAA6C,EAA7CA,SAAUM,EAAmC,EAAnCA,aAAcrC,EAAqB,EAArBA,WAC1CoJ,EAAarG,iBAAuB,MACpCsG,EAAYtG,iBAAuB,MAmBzC,OAjBAyF,EAA8Ba,GAE9B3F,qBAAU,WACR,IAAM4F,EAASD,EAAUvG,QACnByG,EAAUH,EAAWtG,QAC3B,GAAIwG,GAAUC,EAAS,CACrB,IAAMC,EAAYD,EAAQ9D,cAAc,4BACxC,GAAI+D,EAAW,CAAC,IAAD,EACWA,EAAU5D,wBAA1B6D,EADK,EACLA,MAAOC,EADF,EACEA,KACDC,EAAkBJ,EAAQ3D,wBAAhC8D,KACRJ,EAAOjK,MAAMoK,MAAb,UAAwBA,EAAxB,MACAH,EAAOjK,MAAM+F,UAAb,sBAAwCsE,EACtCC,EADF,sBAOJ,kBAAC,EAAD,CACE7H,UAAU,oBACVsG,KAAK,UACLpI,WAAYA,GAEZ,yBAAK8B,UAAU,8BACb,yBAAKA,UAAU,kBAAkB4E,IAAK0C,GACpC,yBAAKtH,UAAU,qBAAqBC,GACpC,kBAAC,EAAD,CAAQ2E,IAAK2C,EAAWlB,cAAY,YAErC9F,EACC,yBAAKP,UAAU,mCAAmCO,GAChD,O,qMAMG8G,Q,qSClBf,SAASxK,EAAT,GAOW,IANToD,EAMQ,EANRA,SACAC,EAKQ,EALRA,MAKQ,IAJRtC,qBAIQ,MAJQ,EAIR,EAHRC,EAGQ,EAHRA,SACA0C,EAEQ,EAFRA,aACArC,EACQ,EADRA,WAEMuJ,EAAUpG,YAAWzD,GAErB8C,EAAcC,YAAY9C,GAE1BgF,EAAUJ,mBACd,iBAAO,CACLvC,QACArC,SAAU,SACRgD,EACA5B,GAEIyB,EAAYM,SACdN,EAAYM,QAAQH,EAAUjD,EAAeqB,OAInD,CAACiB,EAAOQ,EAAa9C,IAGvB,OACE,kBAACwD,EAAA,EAAesD,SAAhB,CAAyBC,MAAO8C,GAC9B,kBAACtG,EAAA,EAAiBuD,SAAlB,CAA2BC,MAAO9B,GAChC,kBAAC,EAAD,CAAgBtC,aAAcA,EAAcrC,WAAYA,GACrD+B,KAOIpD,M,oQC7Ef,qDAEeA,MAAf,E,40BCAA,IAAMiL,E,4EAAkB7E,EAAOC,IAAV,KAMN4E,I,+WC+GA,SAAS9K,EAASjB,GAAuB,IAEpDkE,EAKElE,EALFkE,SACAD,EAIEjE,EAJFiE,UACA+H,EAGEhM,EAHFgM,mBACA3H,EAEErE,EAFFqE,UACG4H,EANgD,YAOjDjM,EAPiD,6DAQ9B6G,cAR8B,mBAQ9C1D,EAR8C,KAQvCK,EARuC,KAS/CmG,EApDR,SAAqBnG,GACnB,IAAMsD,EAAUC,qBAAW1B,KAG3B,OAAO7B,KAFesD,EAAUA,EAAQjF,cAAgB,GAkDvCqK,CAAY1I,GAEvB2I,EAzER,SAA2BC,EAAsBzC,GAC/C,IAAM0C,EAAoBnH,kBAAO,GAE3BiH,EAAiBxC,GAAayC,GAAeC,EAAkBpH,QAQrE,OANAY,qBAAU,WACJ8D,GAAYyC,IACdC,EAAkBpH,SAAU,MAIzBkH,EA8DgBG,CA7FzB,SAAwBF,GACtB,IAAMG,EAAoBxF,qBAAWlD,KAErC,MAA2B,mBAAhBuI,EACFA,GAGLG,GAA4D,mBAAhCA,EAAkBlI,WACzCkI,EAAkBlI,UAoFPmI,CAAenI,GACmBsF,GAChD8C,EA3CR,SAAiCA,GAC/B,IAAMF,EAAoBxF,qBAAWlD,KAErC,MAAoC,mBAAzB4I,EACFA,IAEAF,GAAqBA,EAAkBnI,oBAqCnBsI,CAAwBV,GAC/CW,EA7BR,SAA8BhD,EAAmBzF,GAC/C,IAAM0I,EAAiB1H,iBAAOhB,GACxByI,EAAoBhD,EAAWzF,EAAW0I,EAAe3H,QAQ/D,OANAY,qBAAU,WACJ8D,IACFiD,EAAe3H,QAAUf,MAItByI,EAmBmBE,CAAqBlD,EAAUzF,GAEzD,OAAe,IAAXV,EACK,KAIP,kBAAC,EAAD,eACE8G,cAAA,oBAA0B9G,GAC1B+G,KAAK,WACLuC,eAAcnD,EACdoD,kBAAiB/M,EAAMmD,MACvBX,GAAIW,GACA8I,EANN,CAOEhI,UAAWM,IACT,mBACA,CACE,0BAA2BoF,EAC3B,2BAA4BA,GAE9B1F,KAGDkI,GAAkBM,EAAuBE,EAAoB,M,kSC3JpE,mDAEe1L,MAAf,E,uXCCA,SAAS+L,IAGP,QAFgBjG,qBAAW3B,KAKd4H,Q,kPCNf,SAASC,IAGP,QAFgBlG,qBAAWlD,KAKdoJ,Q,mSC6Bf,SAASxN,EAAT,GAA6E,IAA9DyE,EAA6D,EAA7DA,SAAU/C,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,SAAUoB,EAAkC,EAAlCA,GAAI4B,EAA8B,EAA9BA,oBACtC8I,EAAgBF,IAChBG,EAAiBF,IAEvB,OAAIC,EACK,kBAAC,IAAD,CAAe/L,MAAOA,EAAOC,SAAUA,EAAUoB,GAAIA,IAG1D2K,EAEA,kBAAC,IAAD,CAAUhK,MAAOX,EAAIwJ,mBAAoB5H,GACtCF,GAKA,KAGMzE,M,yOCzDf,yCAKA,SAASmF,EAAegE,GACtB,IAAMC,EAAM3D,iBAAO0D,GAInB,OAFAC,EAAI5D,QAAU2D,EAEPC,EAGMjE,M,yOCbf,sCAAIwI,EAAQ,EAKZ,SAASxG,IACP,IAAMpE,EAAK4K,EAEX,OADAA,GAAS,EACH,OAAN,OAAc5K,GAMT,SAAS0F,IACdkF,EAAQ,E,sKAGKxG,M","file":"static/js/docs-index.da888e88.js","sourcesContent":["import Tab from './Tab';\n\nexport default Tab;\n","import TabHeader from './components/tab-header';\nimport TabHeaderItem from './components/tab-header-item';\nimport TabContent from './components/tab-content';\nimport TabPanel from './components/tab-panel';\nimport TabGroup from './components/TabGroup';\nimport Tab from './components/tab';\nimport { reset } from './helpers/uuid';\n\nexport {\n  Tab,\n  TabHeader,\n  TabHeaderItem,\n  TabContent,\n  TabPanel,\n  reset as resetIdCounter,\n};\n\nexport default TabGroup;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useState, useCallback } from 'react';\nimport { Playground, Props } from 'docz';\nimport { MdDelete } from 'react-icons/md';\nimport TabGroup, {\n  Tab,\n  TabHeader,\n  TabHeaderItem,\n  TabContent,\n  TabPanel,\n} from '../src';\nimport Button from 'sinoui-components/Button';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst NextIcon = makeShortcode(\"NextIcon\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"tabgroup-标签页\"\n    }}>{`TabGroup 标签页`}</h1>\n    <p>{`选项卡切换组件。`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@sinouiincubator/tab-group\"\n      }}><img alt=\"npm version\" src=\"https://img.shields.io/npm/v/@sinouiincubator/tab-group\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@sinouiincubator/tab-group\"\n      }}><img alt=\"downloads\" src=\"https://img.shields.io/npm/dm/@sinouiincubator/tab-group\" /></a></p>\n    <h2 {...{\n      \"id\": \"安装依赖\"\n    }}>{`安装依赖`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add @sinouiincubator/tab-group\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <p>{`提供平级的区域将大块内容进行收纳和展现，保持界面整洁。TabGroup 提供的是标准线条式页签，用于容器内部的主功能切换，这是最常用的 Tabs。`}</p>\n    <h2 {...{\n      \"id\": \"入门示例\"\n    }}>{`入门示例`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport TabGroup, { Tab } from '@sinouiincubator/tab-group';\n\nfunction Demo() {\n  return (\n    <TabGroup>\n      <Tab title=\"标签1\">标签内容1</Tab>\n      <Tab title=\"标签2\">标签内容2</Tab>\n      <Tab title=\"标签3\">标签内容3</Tab>\n    </TabGroup>\n  );\n}\n`}</code></pre>\n    <Playground __position={0} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"主题切换\"\n    }}>{`主题切换`}</h2>\n    <p>{`TabGroup 组件通过 styled-components 支持主题切换。所以在项目中使用 TabGroup 组件，需要做一些主题初始化工作。`}</p>\n    <p>{`安装依赖：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add styled-components sinoui-components\n`}</code></pre>\n    <p>{`在 `}<inlineCode parentName=\"p\">{`App`}</inlineCode>{` 组件中创建主题上下文：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport defaultTheme from 'sinoui-components/styles/defaultTheme';\n\nfunction App() {\n  return (\n    <ThemeProvider value={defaultTheme}>/* 这里是应用程序内容 */</ThemeProvider>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"禁用\"\n    }}>{`禁用`}</h2>\n    <p>{`禁用某些标签页：`}</p>\n    <Playground __position={1} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n  <Tab title=\\\"标签2\\\" disabled>\\n    标签内容2\\n  </Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n  <Tab title=\\\"标签4\\\" disabled>\\n    标签内容4\\n  </Tab>\\n  <Tab title=\\\"标签5\\\">标签内容5</Tab>\\n  <Tab title=\\\"标签6\\\">标签内容6</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n    <Tab title=\"标签2\" disabled mdxType=\"Tab\">\n      标签内容2\n    </Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n    <Tab title=\"标签4\" disabled mdxType=\"Tab\">\n      标签内容4\n    </Tab>\n    <Tab title=\"标签5\" mdxType=\"Tab\">标签内容5</Tab>\n    <Tab title=\"标签6\" mdxType=\"Tab\">标签内容6</Tab>\n  </TabGroup>\n    </Playground>\n    <p>{`禁用当前标签页：`}</p>\n    <Playground __position={2} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\" disabled>\\n    标签内容1\\n  </Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" disabled mdxType=\"Tab\">\n      标签内容1\n    </Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"嵌套\"\n    }}>{`嵌套`}</h2>\n    <p>{`TabGroup 可以嵌套使用。`}</p>\n    <Playground __position={3} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\">\\n    <TabGroup>\\n      <Tab title=\\\"标签1--二级标签\\\">这是嵌套标签内容1</Tab>\\n      <Tab title=\\\"标签2--二级标签\\\">这是嵌套标签内容2</Tab>\\n      <Tab title=\\\"标签3--二级标签\\\">这是嵌套标签内容3</Tab>\\n    </TabGroup>\\n  </Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">\n      <TabGroup mdxType=\"TabGroup\">\n        <Tab title=\"标签1--二级标签\" mdxType=\"Tab\">这是嵌套标签内容1</Tab>\n        <Tab title=\"标签2--二级标签\" mdxType=\"Tab\">这是嵌套标签内容2</Tab>\n        <Tab title=\"标签3--二级标签\" mdxType=\"Tab\">这是嵌套标签内容3</Tab>\n      </TabGroup>\n    </Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"附件内容\"\n    }}>{`附件内容`}</h2>\n    <p>{`可以在页签右边添加附加操作。`}</p>\n    <Playground __position={4} __code={'<TabGroup\\n  tabHeaderExtraContent={\\n    <div>\\n      <Button primary raised style={{ margin: 0 }}>\\n        提交\\n      </Button>\\n      <Button primary raised style={{ margin: 0, marginLeft: 8 }}>\\n        保存\\n      </Button>\\n    </div>\\n  }\\n>\\n  <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup tabHeaderExtraContent={<div>\n        <Button primary raised style={{\n          margin: 0\n        }} mdxType=\"Button\">\n          提交\n        </Button>\n        <Button primary raised style={{\n          margin: 0,\n          marginLeft: 8\n        }} mdxType=\"Button\">\n          保存\n        </Button>\n      </div>} mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"内容高度自适应\"\n    }}>{`内容高度自适应`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 组件在切换时内容高度是自适应的。`}</p>\n    <Playground __position={5} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\">\\n    人人都忙于自己的欢喜与悲伤，哪有空顾你的孤独。时间是最公平的资源，你浇灌在哪里，哪里就可能长出灿烂的花朵。无论走到哪里，都要鼓励自己，给自己一些肯定，别总把那些挫败当成痛的诉说。\\n  </Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">\\n    将一颗花生投到漏斗里，很快就落下去了，而把一把花生投到漏斗里，花生相互挤在一起，竟然一颗也落不下去了。成功的人之所以成功，是因为将有限的精力专注到一个领域，每天做好一件事，日积月累成就伟业。而把所有事挤在一起，缺乏核心竞争力，则最终会一事无成。\\n  </Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">\n      人人都忙于自己的欢喜与悲伤，哪有空顾你的孤独。时间是最公平的资源，你浇灌在哪里，哪里就可能长出灿烂的花朵。无论走到哪里，都要鼓励自己，给自己一些肯定，别总把那些挫败当成痛的诉说。\n    </Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">\n      将一颗花生投到漏斗里，很快就落下去了，而把一把花生投到漏斗里，花生相互挤在一起，竟然一颗也落不下去了。成功的人之所以成功，是因为将有限的精力专注到一个领域，每天做好一件事，日积月累成就伟业。而把所有事挤在一起，缺乏核心竞争力，则最终会一事无成。\n    </Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"单独使用标签\"\n    }}>{`单独使用标签`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabHeader`}</inlineCode>{` 组件允许我们单独使用标签。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`注意，`}<inlineCode parentName=\"p\">{`TabHeader`}</inlineCode>{` 组件是受控的，所以必须指定 `}<inlineCode parentName=\"p\">{`selectedIndex`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` 属性。`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useState } from 'react';\nimport { TabHeader, TabHeaderItem } from '@sinouiincubator/tab-group';\n\nfunction TabHeaderDemo() {\n  const [active, setActive] = useState(0);\n\n  return (\n    <TabHeader selectedIndex={active} onSelect={setActive}>\n      <TabHeaderItem title=\"标签1\">标签内容1</TabHeaderItem>\n      <Tab title=\"标签2\">标签内容2</Tab>\n      <Tab title=\"标签3\">标签内容3</Tab>\n    </TabHeader>\n  );\n}\n`}</code></pre>\n    <Playground __position={6} __code={'() => {\\n  const [active, setActive] = useState(0)\\n  return (\\n    <TabHeader selectedIndex={active} onSelect={setActive}>\\n      <TabHeaderItem title=\\\"标签1\\\" />\\n      <TabHeaderItem title=\\\"标签2\\\" />\\n      <TabHeaderItem title=\\\"标签3\\\" />\\n    </TabHeader>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [active, setActive] = useState(0);\n        return <TabHeader selectedIndex={active} onSelect={setActive} mdxType=\"TabHeader\">\n  <TabHeaderItem title=\"标签1\" mdxType=\"TabHeaderItem\" />\n  <TabHeaderItem title=\"标签2\" mdxType=\"TabHeaderItem\" />\n  <TabHeaderItem title=\"标签3\" mdxType=\"TabHeaderItem\" />\n        </TabHeader>;\n      }}\n    </Playground>\n    <p>{`可以自定义标签的样式，或者与其它组件组合使用。如下面的示例，在标签之间加上了一个方向分隔符：`}</p>\n    <Playground __position={7} __code={'() => {\\n  const [active, setActive] = useState(0)\\n  const NextIcon = () => (\\n    <div\\n      style={{\\n        display: \\'inline-block\\',\\n        padding: \\'12px 8px 0px 8px\\',\\n        color: \\'rgba(0, 0, 0, 0.54)\\',\\n      }}\\n    >\\n      >\\n    </div>\\n  )\\n  return (\\n    <TabHeader selectedIndex={active} onSelect={setActive} borderless>\\n      <TabHeaderItem title=\\\"标签1\\\" />\\n      <NextIcon />\\n      <TabHeaderItem title=\\\"标签2\\\" />\\n      <NextIcon />\\n      <TabHeaderItem title=\\\"标签3\\\" />\\n    </TabHeader>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [active, setActive] = useState(0);\n\n        const NextIcon = () => <div style={{\n          display: 'inline-block',\n          padding: \"12px 8px 0px 8px\",\n          color: 'rgba(0, 0, 0, 0.54)'\n        }}>></div>;\n\n        return <TabHeader selectedIndex={active} onSelect={setActive} borderless mdxType=\"TabHeader\">\n      <TabHeaderItem title=\"标签1\" mdxType=\"TabHeaderItem\" />\n      <NextIcon mdxType=\"NextIcon\" />\n      <TabHeaderItem title=\"标签2\" mdxType=\"TabHeaderItem\" />\n      <NextIcon mdxType=\"NextIcon\" />\n      <TabHeaderItem title=\"标签3\" mdxType=\"TabHeaderItem\" />\n    </TabHeader>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"单独使用标签内容\"\n    }}>{`单独使用标签内容`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabContent`}</inlineCode>{` 组件允许我们单独使用标签内容。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport Button from 'sinoui-components/Button';\nimport { TabContent, TabPanel } from '@sinouiincubator/tab-group';\n\nfunction TabContentDemo() {\n  const [active, setActive] = useState(0);\n  const handlePrevClick = useCallback(() => {\n    if (active === 0) {\n      return;\n    }\n\n    setActive(active - 1);\n  }, [active]);\n\n  const handleNextClick = useCallback(() => {\n    if (active === 2) {\n      return;\n    }\n    setActive(active + 1);\n  }, [active]);\n\n  return (\n    <>\n      <TabContent selectedIndex={active}>\n        <TabPanel>内容1</TabPanel>\n        <TabPanel>内容2</TabPanel>\n        <TabPanel>内容3</TabPanel>\n      </TabContent>\n      <Button onClick={handlePrevClick}>上一页</Button>\n      <Button onClick={handleNextClick}>下一页</Button>\n    </>\n  );\n}\n`}</code></pre>\n    <Playground __position={8} __code={'() => {\\n  const [active, setActive] = useState(0)\\n  const handlePrevClick = useCallback(() => {\\n    if (active === 0) {\\n      return\\n    }\\n    setActive(active - 1)\\n  }, [active])\\n\\n  const handleNextClick = useCallback(() => {\\n    if (active === 2) {\\n      return\\n    }\\n    setActive(active + 1)\\n  }, [active])\\n\\n  return (\\n    <>\\n      <TabContent selectedIndex={active}>\\n        <TabPanel>内容1</TabPanel>\\n        <TabPanel>内容2</TabPanel>\\n        <TabPanel>内容3</TabPanel>\\n      </TabContent>\\n      <Button onClick={handlePrevClick}>上一页</Button>\\n      <Button onClick={handleNextClick}>下一页</Button>\\n    </>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [active, setActive] = useState(0);\n        const handlePrevClick = useCallback(() => {\n          if (active === 0) {\n            return;\n          }\n\n          setActive(active - 1);\n        }, [active]);\n        const handleNextClick = useCallback(() => {\n          if (active === 2) {\n            return;\n          }\n\n          setActive(active + 1);\n        }, [active]);\n        return <>\n    <TabContent selectedIndex={active} mdxType=\"TabContent\">\n      <TabPanel mdxType=\"TabPanel\">内容1</TabPanel>\n      <TabPanel mdxType=\"TabPanel\">内容2</TabPanel>\n      <TabPanel mdxType=\"TabPanel\">内容3</TabPanel>\n    </TabContent>\n    <Button onClick={handlePrevClick} mdxType=\"Button\">上一页</Button>\n    <Button onClick={handleNextClick} mdxType=\"Button\">下一页</Button>\n  </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"高度动画\"\n    }}>{`高度动画`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`TabContent`}</inlineCode>{` 组件均支持标签切换时内容高度变化的动画。因为高度动画对于页面性能影响较大，所以默认是禁用高度动画的。可以通过 `}<inlineCode parentName=\"p\">{`animateHeight`}</inlineCode>{` 属性启用。如下所示：`}</p>\n    <Playground __position={9} __code={'<TabGroup animateHeight>\\n  <Tab title=\\\"标签1\\\">\\n    人人都忙于自己的欢喜与悲伤，哪有空顾你的孤独。时间是最公平的资源，你浇灌在哪里，哪里就可能长出灿烂的花朵。无论走到哪里，都要鼓励自己，给自己一些肯定，别总把那些挫败当成痛的诉说。\\n  </Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">\\n    将一颗花生投到漏斗里，很快就落下去了，而把一把花生投到漏斗里，花生相互挤在一起，竟然一颗也落不下去了。成功的人之所以成功，是因为将有限的精力专注到一个领域，每天做好一件事，日积月累成就伟业。而把所有事挤在一起，缺乏核心竞争力，则最终会一事无成。\\n  </Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup animateHeight mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">\n      人人都忙于自己的欢喜与悲伤，哪有空顾你的孤独。时间是最公平的资源，你浇灌在哪里，哪里就可能长出灿烂的花朵。无论走到哪里，都要鼓励自己，给自己一些肯定，别总把那些挫败当成痛的诉说。\n    </Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">\n      将一颗花生投到漏斗里，很快就落下去了，而把一把花生投到漏斗里，花生相互挤在一起，竟然一颗也落不下去了。成功的人之所以成功，是因为将有限的精力专注到一个领域，每天做好一件事，日积月累成就伟业。而把所有事挤在一起，缺乏核心竞争力，则最终会一事无成。\n    </Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"可访问性\"\n    }}>{`可访问性`}</h2>\n    <p>{`TabGroup 组件的可访问性实现参考的是：`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Tab_Role\"\n        }}>{`MDN: tab role`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.w3.org/TR/wai-aria-1.1/#tab\"\n        }}>{`ARIA: tab role`}</a></li>\n    </ul>\n    <p>{`通过 `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` 组件的 `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` 属性可以指定标签与标签面板之间的对应关系，进一步实现 TabGroup 组件的可访问性，如下所示：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport TabGroup, { Tab } from '@sinouiincubator/tab-group';\n\nfunction Demo() {\n  return (\n    <TabGroup>\n      <Tab title=\"标签1\" id=\"tab-pad\">\n        标签内容1\n      </Tab>\n      <Tab title=\"标签2\" id=\"tab-phone\">\n        标签内容2\n      </Tab>\n      <Tab title=\"标签3\" id=\"tab-vr\">\n        标签内容3\n      </Tab>\n    </TabGroup>\n  );\n}\n`}</code></pre>\n    <Playground __position={10} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\" id=\\\"tab-pad\\\">\\n    标签内容1\\n  </Tab>\\n  <Tab title=\\\"标签2\\\" id=\\\"tab-phone\\\">\\n    标签内容2\\n  </Tab>\\n  <Tab title=\\\"标签3\\\" id=\\\"tab-vr\\\">\\n    标签内容3\\n  </Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" id=\"tab-pad\" mdxType=\"Tab\">\n      标签内容1\n    </Tab>\n    <Tab title=\"标签2\" id=\"tab-phone\" mdxType=\"Tab\">\n      标签内容2\n    </Tab>\n    <Tab title=\"标签3\" id=\"tab-vr\" mdxType=\"Tab\">\n      标签内容3\n    </Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"维护标签页\"\n    }}>{`维护标签页`}</h2>\n    <p>{`可以动态新增、删除标签页。`}</p>\n    <Playground __position={11} __code={'() => {\\n  const [tabs, setTabs] = useState(() => {\\n    const items = []\\n    for (let i = 0; i < 10; i++) {\\n      items.push({ id: i, title: `标签${i + 1}`, content: `内容${i + 1}` })\\n    }\\n    return items\\n  })\\n  const handleTabRemove = (event, tabId) => {\\n    event.stopPropagation()\\n    const newTabs = tabs.filter(tab => tab.id !== tabId)\\n\\n    setTabs(newTabs)\\n  }\\n\\n  const handleAdd = () => {\\n    const index = Math.max(...tabs.map(tab => tab.id), -1) + 1\\n    const newTabs = [\\n      ...tabs,\\n      { id: index, title: `标签${index + 1}`, content: `内容${index + 1}` },\\n    ]\\n\\n    setTabs(newTabs)\\n  }\\n\\n  return (\\n    <>\\n      <TabGroup>\\n        {tabs.map(tab => (\\n          <Tab\\n            key={tab.id}\\n            title={\\n              <div>\\n                {tab.title}\\n                <MdDelete\\n                  onClick={event => handleTabRemove(event, tab.id)}\\n                ></MdDelete>\\n              </div>\\n            }\\n          >\\n            {tab.content}\\n          </Tab>\\n        ))}\\n      </TabGroup>\\n      <Button raised onClick={handleAdd}>\\n        新增\\n      </Button>\\n    </>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [tabs, setTabs] = useState(() => {\n          const items = [];\n\n          for (let i = 0; i < 10; i++) {\n            items.push({\n              id: i,\n              title: `标签${i + 1}`,\n              content: `内容${i + 1}`\n            });\n          }\n\n          return items;\n        });\n\n        const handleTabRemove = (event, tabId) => {\n          event.stopPropagation();\n          const newTabs = tabs.filter(tab => tab.id !== tabId);\n          setTabs(newTabs);\n        };\n\n        const handleAdd = () => {\n          const index = Math.max(...tabs.map(tab => tab.id), -1) + 1;\n          const newTabs = [...tabs, {\n            id: index,\n            title: `标签${index + 1}`,\n            content: `内容${index + 1}`\n          }];\n          setTabs(newTabs);\n        };\n\n        return <>\n  <TabGroup mdxType=\"TabGroup\">\n    {tabs.map(tab => <Tab key={tab.id} title={<div>\n          {tab.title}<MdDelete onClick={event => handleTabRemove(event, tab.id)} mdxType=\"MdDelete\"></MdDelete>\n        </div>} mdxType=\"Tab\">\n        {tab.content}\n      </Tab>)}\n  </TabGroup>\n  <Button raised onClick={handleAdd} mdxType=\"Button\">新增</Button>\n  </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"受控模式\"\n    }}>{`受控模式`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 支持非受控和受控模式。指定 `}<inlineCode parentName=\"p\">{`selectedIndex`}</inlineCode>{` 属性，`}<inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 则是受控模式，需要指定 `}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` 属性监听标签页切换。否则是非受控模式。`}</p>\n    <p>{`在受控模式下，需要在 `}<inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 组件之外维护状态，如下所示：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useState } from 'react';\nimport TabGroup, { Tab } from '@sinouiincubator/tab-group';\n\nfunction Demo() {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  return (\n    <>\n      <div>当前选中的标签是：{selectedIndex}</div>\n      <TabGroup selectedIndex={selectedIndex} onSelect={setSelectedIndex}>\n        <Tab title=\"标签1\">标签内容1</Tab>\n        <Tab title=\"标签2\">标签内容2</Tab>\n        <Tab title=\"标签3\">标签内容3</Tab>\n      </TabGroup>\n    </>\n  );\n}\n`}</code></pre>\n    <Playground __position={12} __code={'() => {\\n  const [selectedIndex, setSelectedIndex] = useState(0)\\n  return (\\n    <>\\n      <div>当前选中的标签是：{selectedIndex}</div>\\n      <TabGroup selectedIndex={selectedIndex} onSelect={setSelectedIndex}>\\n        <Tab title=\\\"标签1\\\">标签内容 1</Tab>\\n        <Tab title=\\\"标签2\\\">标签内容 2</Tab>\\n        <Tab title=\\\"标签3\\\">标签内容 3</Tab>\\n      </TabGroup>\\n    </>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [selectedIndex, setSelectedIndex] = useState(0);\n        return <>\n  <div>当前选中的标签是：{selectedIndex}</div>\n  <TabGroup selectedIndex={selectedIndex} onSelect={setSelectedIndex} mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容 1</Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容 2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容 3</Tab>\n  </TabGroup>\n  </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"阻止标签页切换\"\n    }}>{`阻止标签页切换`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 组件在非受控模式下，`}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` 函数如果返回 `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`，则不会切换标签页。如下所示，不让切换到“标签 2”：`}</p>\n    <Playground __position={13} __code={'<TabGroup onSelect={index => index !== 1}>\\n  <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup onSelect={index => index !== 1} mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from 'react';\n\ninterface TabContentContextState {\n  inTabContent: boolean;\n  /**\n   * 是否立即渲染所有的标签面板到 DOM 中。\n   */\n  forceRenderTabPanel?: boolean;\n  /**\n   * 设置启动标签面板渲染到 DOM 的缓存特性。\n   */\n  cacheable?: boolean;\n}\n\n/**\n * 标签页内容上下文\n */\nconst TabContentContext = React.createContext<TabContentContextState | null>(\n  null,\n);\n\nexport default TabContentContext;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useRef, useState, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useRefValue from '../helpers/useRefValue';\nimport { TabSelectCallback } from '../types';\nimport TabHeader from './tab-header';\nimport TabContent from './tab-content';\n\ninterface Props {\n  /**\n   * 允许改变在初始渲染时显示第几个标签页的属性。默认为 `0`。这是一个从 `0` 开始的索引，第一个标签页的索引为 `0`，第二个标签页的索引为 `1`，……\n   */\n  defaultIndex?: number;\n  /**\n   * 设置当前选中的标签页。这是一个从 `0` 开始的索引，第一个标签页的索引为 `0`，第二个标签页的索引为 `1`，……\n   *\n   * 默认值为 null。\n   */\n  selectedIndex?: number;\n  /**\n   * 每次标签页切换时调用的事件处理器。这个函数的 `index` 参数是新的选中标签页索引，`lastIndex` 参数是变更之前选中的标签页索引，`event` 参数是引起页签切换的事件，可能是 `keydown` 或者 `click` 事件。如果 `index` 和 `lastIndex` 相同时，表示用户在当前选中的标签页上点击。\n   */\n  onSelect?: (\n    index: number,\n    lastIndex: number,\n    event: React.MouseEvent | React.KeyboardEvent,\n  ) => boolean | undefined | void;\n  /**\n   * 设置标签。可以是多个 `<Tab />` 元素。\n   */\n  children?: React.ReactNode;\n  /**\n   * 给标签页组件根元素指定新的样式名\n   */\n  className?: string;\n  /**\n   * 设置标签页组件根元素的样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 设置标签页在密集模式下展现。\n   */\n  dense?: boolean;\n  /**\n   * 默认情况下只有当前标签面板会渲染到 DOM 中（出于性能考量）。如果设置为 `true`，则所有的标签面板从一开始就会立即渲染到 DOM 中。默认为 `false`。\n   */\n  forceRenderTabPanel?: boolean;\n\n  /**\n   * 设置启动标签面板渲染到 DOM 的缓存特性。当`forceRenderTabPanel` 为 `false` 此配置才有效。默认为 `true`。如果设置为 `false`，则不会缓存标签面板的渲染，标签切换后，销毁该标签面板的DOM。\n   */\n  cacheable?: boolean;\n\n  /**\n   * 设置启用标签面板切换时内容高度过渡动画。默认为 `false`，不启用。设置为 `true`，启用高度过渡动画，但是可能会影响性能。\n   */\n  animateHeight?: boolean;\n  /**\n   * 在标签右侧添加附件内容。\n   */\n  tabHeaderExtraContent?: React.ReactNode;\n\n  /**\n   * 设置不显示标签条底部线条。\n   */\n  borderless?: boolean;\n}\n\nfunction InnerTabGroup({\n  className,\n  onSelect,\n  selectedIndex = 0,\n  children,\n  dense,\n  forceRenderTabPanel,\n  cacheable,\n  animateHeight,\n  tabHeaderExtraContent,\n  borderless,\n  ...rest\n}: Props) {\n  return (\n    <div className={classNames('sinoui-tab-group', className)} {...rest}>\n      <TabHeader\n        selectedIndex={selectedIndex}\n        dense={dense}\n        onSelect={onSelect}\n        extraContent={tabHeaderExtraContent}\n        borderless={borderless}\n      >\n        {children}\n      </TabHeader>\n      <TabContent\n        selectedIndex={selectedIndex}\n        forceRenderTabPanel={forceRenderTabPanel}\n        cacheable={cacheable}\n        animateHeight={animateHeight}\n      >\n        {children}\n      </TabContent>\n    </div>\n  );\n}\n\n/**\n * 受控模式的标签页组件\n */\nfunction UnControlledTabGroup({ defaultIndex = 0, onSelect, ...rest }: Props) {\n  const [selectedIndex, setSelectedIndex] = useState(defaultIndex);\n  const onSelectRef = useRefValue(onSelect);\n\n  const handleTabSelect: TabSelectCallback = useCallback(\n    (tabIndex, prevSelectedIndex, event) => {\n      const onSelectProps = onSelectRef.current;\n      const preventTabChange =\n        !!onSelectProps &&\n        onSelectProps(tabIndex, prevSelectedIndex, event) === false;\n\n      if (preventTabChange) {\n        return;\n      }\n\n      setSelectedIndex(tabIndex);\n    },\n    [onSelectRef],\n  );\n  return (\n    <InnerTabGroup\n      {...rest}\n      onSelect={handleTabSelect}\n      selectedIndex={selectedIndex}\n    />\n  );\n}\n\n/**\n * 多标签页组件\n */\nfunction TabGroup({ selectedIndex, ...rest }: Props) {\n  const isUnControlled = useRef(selectedIndex === undefined);\n  return isUnControlled.current ? (\n    <UnControlledTabGroup {...rest} />\n  ) : (\n    <InnerTabGroup selectedIndex={selectedIndex} {...rest} />\n  );\n}\n\nexport default TabGroup;\n","import React from 'react';\n\ninterface TabHeaderContextState {\n  /**\n   * 是否是密集模式\n   */\n  dense?: boolean;\n\n  /**\n   * 变更当前选项卡\n   */\n  onSelect: (\n    tabIndex: number,\n    event: React.MouseEvent | React.KeyboardEvent,\n  ) => void;\n}\n\n/**\n * 标签头部上下文\n */\nconst TabHeaderContext = React.createContext<TabHeaderContextState | null>(\n  null,\n);\n\nexport default TabHeaderContext;\n","import React from 'react';\n\nexport interface TabProps {\n  disabled?: boolean;\n}\n\nexport interface TabListContextState {\n  /**\n   * 注册标签页\n   */\n  register: (tabId: string, props: TabProps) => number;\n  /**\n   * 取消注册标签页\n   */\n  unregister: (tabId: string) => void;\n  /**\n   * 当前选中标签页的索引。索引从 0 开始。\n   */\n  selectedIndex: number;\n  /**\n   * 获取所有标签页的id\n   */\n  getTabs(): string[];\n  getTabProps(tabId: string): TabProps;\n}\n\n/**\n * 标签列表上下文\n */\nconst TabListContext = React.createContext<TabListContextState | null>(null);\n\nexport default TabListContext;\n","import { useEffect, useState, useRef, useCallback, useMemo } from 'react';\nimport { TabProps } from '../TabListContext';\n\n/**\n * 标签页列表状态管理\n */\nfunction useTabList(selectedIndex: number) {\n  const [renderCount, setRenderCount] = useState(1); // 内部 tab 发生变化引起重绘的次数\n  const isRenderredRef = useRef(false); // 是否已经同步渲染过\n  const tabsRef = useRef<string[]>([]); // 所有包含标签页（无序的）\n  const sortedTabsRef = useRef<string[]>([]); // 包含的有序的标签页\n  const tabsPropsRef = useRef<{ [name: string]: TabProps }>({});\n  sortedTabsRef.current = []; // TODO: current mode 可能会有缺陷，参见： https://github.com/facebook/react/issues/14099\n  isRenderredRef.current = false; // TODO: current mode 可能会有缺陷，参见： https://github.com/facebook/react/issues/14099\n\n  useEffect(() => {\n    isRenderredRef.current = true;\n  });\n\n  /**\n   * 注册标签页\n   */\n  const register = useCallback((tabId: string, props: TabProps) => {\n    const sortedTabs = sortedTabsRef.current;\n    const currentIdx = sortedTabs.indexOf(tabId);\n    if (isRenderredRef.current && currentIdx === -1) {\n      setRenderCount((state) => state + 1);\n      return -1;\n    }\n\n    const isAdded = tabsRef.current.indexOf(tabId) !== -1;\n\n    if (!isAdded) {\n      tabsRef.current.push(tabId);\n      tabsPropsRef.current[tabId] = props;\n    }\n\n    if (currentIdx !== -1) {\n      return currentIdx;\n    }\n\n    const idx = sortedTabs.length;\n    sortedTabs.push(tabId);\n\n    return idx;\n  }, []);\n\n  /**\n   * 取消注册标签页\n   */\n  const unregister = useCallback((tabId: string) => {\n    const sortedTabs = sortedTabsRef.current;\n    const tabs = tabsRef.current;\n    const idx = sortedTabs.indexOf(tabId);\n\n    const tabIdx = tabs.indexOf(tabId);\n    if (tabIdx !== -1) {\n      tabs.splice(tabIdx, 1);\n      delete tabsPropsRef.current[tabId];\n    }\n\n    if (idx !== -1) {\n      sortedTabs.splice(idx, 1);\n\n      setRenderCount((state) => state + 1);\n    }\n  }, []);\n\n  /**\n   * 获取所有标签id\n   */\n  const getTabs = useCallback(() => {\n    return sortedTabsRef.current;\n  }, []);\n\n  /**\n   * 获取指定id的属性\n   */\n  const getTabProps = useCallback((tabId: string) => {\n    return tabsPropsRef.current[tabId];\n  }, []);\n\n  return useMemo(\n    () => ({\n      register,\n      unregister,\n      selectedIndex,\n      renderCount,\n      getTabs,\n      getTabProps,\n    }),\n    [getTabProps, getTabs, register, renderCount, selectedIndex, unregister],\n  );\n}\n\nexport default useTabList;\n","import { useMemo } from 'react';\nimport uuid from '../../helpers/uuid';\n\n/**\n * 生成标签id\n */\nfunction useTabId() {\n  const tabId = useMemo(uuid, []);\n\n  return tabId;\n}\n\nexport default useTabId;\n","import { useContext, useEffect } from 'react';\nimport useRefValue from '../../helpers/useRefValue';\nimport TabListContext, { TabProps } from '../TabListContext';\nimport useTabId from './useTabId';\n\n/**\n * 注册标签页\n */\n\nfunction useTabRegister(props?: TabProps): [string, number] {\n  const context = useContext(TabListContext);\n  const tabId = useTabId();\n  const index = context ? context.register(tabId, props || {}) : -1;\n  const unregisterRef = useRefValue(context ? context.unregister : undefined);\n\n  useEffect(() => {\n    const unregister = unregisterRef.current;\n\n    if (unregister) {\n      return () => unregister(tabId);\n    }\n    return undefined;\n  }, [tabId, unregisterRef]);\n\n  return [tabId, index];\n}\n\nexport default useTabRegister;\n","import styled from 'styled-components';\n\nconst TabContentWrapper = styled.div`\n  overflow-x: hidden;\n\n  transition: height 0.5s cubic-bezier(0.15, 0.3, 0.25, 1) 0s;\n`;\n\nexport default TabContentWrapper;\n","import styled from 'styled-components';\n\nconst TabPanelListWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  transition: transform 0.35s cubic-bezier(0.15, 0.3, 0.25, 1) 0s;\n  will-change: transform;\n\n  & > .sinoui-tab-panel-hidden {\n    height: 0px;\n  }\n`;\n\nexport default TabPanelListWrapper;\n","import React, { useMemo, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport TabContentContext from '../TabContentContext';\nimport TabContentWrapper from './TabContentWrapper';\nimport TabPanelListWrapper from './TabPanelListWrapper';\nimport useTabList from '../commons/useTabList';\nimport TabListContext, { TabListContextState } from '../TabListContext';\n\nexport interface Props {\n  children?: React.ReactNode;\n  /**\n   * 指定自定义样式名\n   */\n  className?: string;\n  /**\n   * 指定自定义样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 设置当前选中的标签页。这是一个从 `0` 开始的索引，第一个标签页的索引为 `0`，第二个标签页的索引为 `1`，……\n   */\n  selectedIndex: number;\n  /**\n   * 默认情况下只有当前标签面板会渲染到 DOM 中（出于性能考量）。如果设置为 `true`，则所有的标签面板从一开始就会立即渲染到 DOM 中。默认为 `false`。\n   */\n  forceRenderTabPanel?: boolean;\n  /**\n   * 设置启动标签面板渲染到 DOM 的缓存特性。当`forceRenderTabPanel` 为 `false` 此配置才有效。默认为 `true`。如果设置为 `false`，则不会缓存标签面板的渲染，标签切换后，销毁该标签面板的DOM。\n   */\n  cacheable?: boolean;\n  /**\n   * 设置启用标签面板切换时内容高度过渡动画。默认为 `false`，不启用。设置为 `true`，启用高度过渡动画，但是可能会影响性能。\n   */\n  animateHeight?: boolean;\n}\n\n/**\n * 应用高度动画的hook。\n *\n * @param animateHeight 是否启用高度动画\n * @param selectedIndex 当前标签的索引位置\n * @param tabContentRef 标签内容容器DOM\n * @param tabListContext 标签列表上下文\n */\nfunction useAnimateHeight(\n  animateHeight: boolean,\n  selectedIndex: number,\n  tabContentRef: React.RefObject<HTMLDivElement>,\n  tabListContext: TabListContextState,\n) {\n  const prevSelectedIndexRef = useRef(selectedIndex);\n\n  useEffect(() => {\n    const prevSelectedIndex = prevSelectedIndexRef.current;\n    const tabContent = tabContentRef.current;\n    prevSelectedIndexRef.current = selectedIndex;\n\n    if (prevSelectedIndex === selectedIndex || !tabContent || !animateHeight) {\n      return undefined;\n    }\n\n    const tabs = tabListContext.getTabs();\n    const prev = tabContent.querySelector(\n      `#${tabs[prevSelectedIndex]}`,\n    ) as HTMLElement;\n    const current = tabContent.querySelector(\n      `#${tabs[selectedIndex]}`,\n    ) as HTMLElement;\n    prev.style.height = 'auto';\n    current.style.height = '';\n    const { height: prevHeight } = prev.getBoundingClientRect();\n    const { height } = current.getBoundingClientRect();\n\n    tabContent.style.height = `${prevHeight}px`;\n    tabContent.style.overflow = 'hidden';\n\n    let isEnd = false;\n    const reset = () => {\n      isEnd = true;\n      tabContent.style.transition = '';\n      tabContent.style.height = '';\n      tabContent.style.overflow = '';\n      prev.style.height = '';\n    };\n\n    const rafId = requestAnimationFrame(() => {\n      tabContent.style.height = `${height}px`;\n    });\n\n    const timeoutId = setTimeout(reset, 500);\n\n    return () => {\n      cancelAnimationFrame(rafId);\n      clearTimeout(timeoutId);\n      if (!isEnd) {\n        reset();\n      }\n    };\n  }, [animateHeight, selectedIndex, tabContentRef, tabListContext]);\n}\n\n/**\n * 选项卡组件的内容组件\n */\nexport default function TabContent(props: Props) {\n  const {\n    className,\n    selectedIndex,\n    children,\n    forceRenderTabPanel,\n    cacheable,\n    animateHeight = false,\n    ...rest\n  } = props;\n  const tabListContext = useTabList(selectedIndex);\n  const context = useMemo(\n    () => ({\n      inTabContent: true,\n      forceRenderTabPanel,\n      cacheable,\n    }),\n    [cacheable, forceRenderTabPanel],\n  );\n  const transform = useMemo(\n    () => `translate3d(-${100 * selectedIndex}%, 0px, 0px)`,\n    [selectedIndex],\n  );\n\n  const tabContentRef = useRef<HTMLDivElement>(null);\n  useAnimateHeight(animateHeight, selectedIndex, tabContentRef, tabListContext);\n\n  return (\n    <TabListContext.Provider value={tabListContext}>\n      <TabContentContext.Provider value={context}>\n        <TabContentWrapper\n          className={classNames('sinoui-tab-content', className)}\n          {...rest}\n          ref={tabContentRef}\n        >\n          <TabPanelListWrapper\n            style={{ transform }}\n            className=\"sinoui-tab-panel-list\"\n          >\n            {children}\n          </TabPanelListWrapper>\n        </TabContentWrapper>\n      </TabContentContext.Provider>\n    </TabListContext.Provider>\n  );\n}\n","import TabContent from './TabContent';\n\nexport default TabContent;\n","export const LEFT_KEY_CODE = 37; // 方向键左\n\nexport const TOP_KEY_CODE = 38; // 方向键上\n\nexport const RIGHT_KEY_CODE = 39; // 方向键右\n\nexport const BOTTOM_KEY_CODE = 40; // 方向键下\n","import styled, { css } from 'styled-components';\n\nconst hoverCss = css`\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst activeCss = css`\n  color: ${(props) => props.theme.palette.primary[500]};\n  opacity: 1;\n`;\n\nconst disabledCss = css`\n  cursor: not-allowed;\n  color: ${(props) => props.theme.palette.text.disabled};\n`;\n\ninterface TabHeaderItemWrapperProps {\n  disabled?: boolean;\n  active?: boolean;\n}\n\nconst TabHeaderItemWrapper = styled.div<TabHeaderItemWrapperProps>`\n  height: 48px;\n  padding: 0 24px;\n  cursor: pointer;\n  box-sizing: border-box;\n  opacity: 0.6;\n  text-align: center;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap; /* 不换行显示 */\n  color: ${(props) => props.theme.palette.text.primary};\n  outline: none;\n  user-select: none;\n\n  letter-spacing: 1.25px;\n  font-weight: 500;\n\n  position: relative;\n\n  transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n    color 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  & > .sinoui-tab-label-content {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    white-space: nowrap;\n  }\n\n  ${(props) => !props.disabled && hoverCss};\n  ${(props) => props.disabled && disabledCss};\n  ${(props) => props.active && activeCss};\n`;\n\nexport default TabHeaderItemWrapper;\n","import React, { useContext, useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useRipple } from '@sinoui/ripple';\nimport {\n  LEFT_KEY_CODE,\n  TOP_KEY_CODE,\n  RIGHT_KEY_CODE,\n  BOTTOM_KEY_CODE,\n} from '../../constants';\nimport TabHeaderItemWrapper from './TabHeaderItemWrapper';\nimport TabListContext from '../TabListContext';\nimport useTabRegister from '../commons/useTabRegister';\nimport TabHeaderContext from '../TabHeaderContext';\n\ninterface Props {\n  /**\n   * 标签标题\n   */\n  title: React.ReactNode;\n  /**\n   * 指定自定义样式名\n   */\n  className?: string;\n  /**\n   * 指定自定义样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 设置为 `true`，则禁用标签。\n   */\n  disabled?: boolean;\n  /**\n   * 指定标签页id\n   */\n  id?: string;\n}\n\n/**\n * 获取下一个可用的tab索引\n *\n * @param {number} selectedIndex\n * @param {string[]} tabs\n * @param {(tabId: string) => { disabled?: boolean }} getTabProps\n * @returns\n */\nfunction getNextTabIndex(\n  selectedIndex: number,\n  tabs: string[],\n  getTabProps: (tabId: string) => { disabled?: boolean },\n): number {\n  let i = selectedIndex + 1;\n  for (; i < tabs.length; i += 1) {\n    const tabId = tabs[i];\n    const tabDisabled = getTabProps(tabId).disabled;\n    if (!tabDisabled) {\n      return i;\n    }\n  }\n\n  if (i === tabs.length) {\n    return getNextTabIndex(-1, tabs, getTabProps);\n  }\n\n  return 0;\n}\n\n/**\n * 获取上一个可用标签页的索引\n *\n * @param {number} selectedIndex\n * @param {string[]} tabs\n * @param {(tabId: string) => { disabled?: boolean }} getTabProps\n * @returns\n */\nfunction getPrevTabIndex(\n  selectedIndex: number,\n  tabs: string[],\n  getTabProps: (tabId: string) => { disabled?: boolean },\n): number {\n  let i = selectedIndex - 1;\n  for (; i > 0; i -= 1) {\n    const tabId = tabs[i];\n    const tabDisabled = getTabProps(tabId).disabled;\n    if (!tabDisabled) {\n      return i;\n    }\n  }\n\n  if (selectedIndex === 0) {\n    return getPrevTabIndex(tabs.length, tabs, getTabProps);\n  }\n\n  return 0;\n}\n\n/**\n * 头部选项卡项组件\n */\nfunction TabHeaderItem({\n  title,\n  className,\n  style,\n  disabled,\n  id,\n  ...rest\n}: Props) {\n  const tabListContext = useContext(TabListContext);\n  const tabHeaderContext = useContext(TabHeaderContext);\n  const [tabId, index] = useTabRegister({ disabled });\n  const selectedIndex = tabListContext ? tabListContext.selectedIndex : -1;\n  const isActive = index === selectedIndex;\n\n  const rippleRef = useRipple<HTMLDivElement>(undefined, disabled);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      if (tabHeaderContext) {\n        tabHeaderContext.onSelect(index, event);\n      }\n    },\n    [index, tabHeaderContext],\n  );\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const { keyCode } = event;\n      if (tabListContext && tabHeaderContext) {\n        const { getTabs, getTabProps } = tabListContext;\n        const tabs = getTabs();\n        if (keyCode === RIGHT_KEY_CODE || keyCode === BOTTOM_KEY_CODE) {\n          event.stopPropagation();\n          event.preventDefault();\n          const nextTab = getNextTabIndex(selectedIndex, tabs, getTabProps);\n          tabHeaderContext.onSelect(nextTab, event);\n        } else if (keyCode === LEFT_KEY_CODE || keyCode === TOP_KEY_CODE) {\n          event.stopPropagation();\n          event.preventDefault();\n          const prevTab = getPrevTabIndex(selectedIndex, tabs, getTabProps);\n          tabHeaderContext.onSelect(prevTab, event);\n        }\n      }\n    },\n    [selectedIndex, tabHeaderContext, tabListContext],\n  );\n\n  if (index === -1) {\n    return null;\n  }\n\n  return (\n    <TabHeaderItemWrapper\n      className={classNames('sinoui-tab-label', className, {\n        'sinoui-tab-label-active': isActive,\n      })}\n      style={style}\n      disabled={disabled}\n      active={isActive}\n      onClick={disabled ? undefined : handleClick}\n      ref={rippleRef}\n      data-testid={`tab-header-item-${index}`}\n      role=\"tab\"\n      tabIndex={isActive ? 0 : -1}\n      aria-disabled={disabled}\n      aria-selected={isActive}\n      onKeyDown={disabled ? undefined : handleKeyDown}\n      id={id || tabId}\n      {...rest}\n    >\n      <div className=\"sinoui-tab-label-content\">{title}</div>\n    </TabHeaderItemWrapper>\n  );\n}\n\nexport default TabHeaderItem;\n","import TabHeaderItem from './TabHeaderItem';\n\nexport default TabHeaderItem;\n","import { useEffect } from 'react';\n\n/**\n * 在组件初次渲染时阻止 transition 动画\n */\nfunction usePreventTransitionWhenMount<T extends HTMLElement>(\n  elementRef: React.RefObject<T>,\n) {\n  useEffect(() => {\n    const element = elementRef.current;\n    if (element) {\n      const { transition } = element.style;\n      element.style.transition = 'none';\n      const rafId = requestAnimationFrame(() => {\n        element.style.transition = transition;\n      });\n\n      return () => cancelAnimationFrame(rafId);\n    }\n    return undefined;\n  }, [elementRef]);\n}\n\nexport default usePreventTransitionWhenMount;\n","import styled, { css } from 'styled-components';\n\ninterface Props {\n  borderless?: boolean;\n}\n\nconst borderCss = css`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n`;\n\nconst TabHeaderWrapper = styled.div<Props>`\n  display: flex;\n  overflow: hidden;\n  flex-shrink: 0;\n  font-size: 1rem;\n  color: ${(props) => props.theme.palette.text.primary};\n\n  ${(props) => !props.borderless && borderCss}\n\n  .sinoui-tab-label-container {\n    display: flex;\n    flex-grow: 1;\n    overflow: hidden;\n    z-index: 1;\n  }\n\n  .sinoui-tab-list {\n    flex-grow: 1;\n    position: relative;\n    transition: transform 0.5s cubic-bezier(0.35, 0, 0.25, 1);\n  }\n\n  .sinoui-tab-labels {\n    display: flex;\n    position: relative;\n  }\n\n  .sinoui-tab-header-extra-content {\n    line-height: 48px;\n  }\n`;\n\nexport default TabHeaderWrapper;\n","import styled, { css } from 'styled-components';\n\nconst topCss = css`\n  top: 0;\n`;\n\ninterface Props {\n  top?: boolean;\n}\n\n/**\n * 选择指示器\n */\nconst InkBar = styled.div.attrs({\n  className: 'sinoui-ink-bar',\n})<Props>`\n  position: absolute;\n  bottom: 0;\n  ${(props) => props.top && topCss};\n  left: 0;\n  transition: ${(props) =>\n    props.theme.transitions.create(['transform', 'width'])};\n  height: 2px;\n  background-color: ${(props) => props.theme.palette.primary[500]};\n`;\n\nexport default InkBar;\n","import React, { useEffect, useRef } from 'react';\nimport usePreventTransitionWhenMount from '../../helpers/usePreventTransitionWhenMount';\nimport TabHeaderWrapper from './TabHeaderWrapper';\nimport InkBar from '../InkBar';\n\ninterface Props {\n  children: React.ReactNode;\n  /**\n   * 在标签右侧添加附件内容。\n   */\n  extraContent?: React.ReactNode;\n  /**\n   * 设置不显示底部线条。默认为 `false`。\n   */\n  borderless?: boolean;\n}\n\nfunction InnerTabHeader({ children, extraContent, borderless }: Props) {\n  const tabListRef = useRef<HTMLDivElement>(null);\n  const inkBarRef = useRef<HTMLDivElement>(null);\n\n  usePreventTransitionWhenMount(inkBarRef);\n\n  useEffect(() => {\n    const inkBar = inkBarRef.current;\n    const tabList = tabListRef.current;\n    if (inkBar && tabList) {\n      const activeTab = tabList.querySelector('.sinoui-tab-label-active');\n      if (activeTab) {\n        const { width, left } = activeTab.getBoundingClientRect();\n        const { left: containerLeft } = tabList.getBoundingClientRect();\n        inkBar.style.width = `${width}px`;\n        inkBar.style.transform = `translate3d(${left -\n          containerLeft}px, 0px, 0px)`;\n      }\n    }\n  });\n\n  return (\n    <TabHeaderWrapper\n      className=\"sinoui-tab-header\"\n      role=\"tablist\"\n      borderless={borderless}\n    >\n      <div className=\"sinoui-tab-label-container\">\n        <div className=\"sinoui-tab-list\" ref={tabListRef}>\n          <div className=\"sinoui-tab-labels\">{children}</div>\n          <InkBar ref={inkBarRef} data-testid=\"inkbar\" />\n        </div>\n        {extraContent ? (\n          <div className=\"sinoui-tab-header-extra-content\">{extraContent}</div>\n        ) : null}\n      </div>\n    </TabHeaderWrapper>\n  );\n}\n\nexport default InnerTabHeader;\n","import React, { useMemo } from 'react';\nimport TabHeaderContext from '../TabHeaderContext';\nimport useRefValue from '../../helpers/useRefValue';\nimport InnerTabHeader from './InnerTabHeader';\nimport TabListContext from '../TabListContext';\nimport useTabList from '../commons/useTabList';\n\ninterface Props {\n  children?: React.ReactNode;\n  /**\n   * 指定在密集模式下使用。\n   */\n  dense?: boolean;\n  /**\n   * 设置当前选中的标签页。这是一个从 `0` 开始的索引，第一个标签页的索引为 `0`，第二个标签页的索引为 `1`，……\n   */\n  selectedIndex: number;\n  /**\n   * 每次标签页切换时调用的事件处理器。这个函数的 `index` 参数是新的选中标签页索引，`lastIndex` 参数是变更之前选中的标签页索引，`event` 参数是引起页签切换的事件，可能是 `keydown` 或者 `click` 事件。如果 `index` 和 `lastIndex` 相同时，表示用户在当前选中的标签页上点击。\n   */\n  onSelect?: (\n    index: number,\n    lastIndex: number,\n    event: React.MouseEvent | React.KeyboardEvent,\n  ) => boolean | undefined | void;\n  /**\n   * 在标签右侧添加附件内容。\n   */\n  extraContent?: React.ReactNode;\n  /**\n   * 设置不显示底部线条。默认为 `false`。\n   */\n  borderless?: boolean;\n}\n\n/**\n * 选项卡头部组件\n *\n */\nfunction TabHeader({\n  children,\n  dense,\n  selectedIndex = 0,\n  onSelect,\n  extraContent,\n  borderless,\n}: Props) {\n  const tabList = useTabList(selectedIndex);\n\n  const onSelectRef = useRefValue(onSelect);\n\n  const context = useMemo(\n    () => ({\n      dense,\n      onSelect: (\n        tabIndex: number,\n        event: React.MouseEvent | React.KeyboardEvent,\n      ) => {\n        if (onSelectRef.current) {\n          onSelectRef.current(tabIndex, selectedIndex, event);\n        }\n      },\n    }),\n    [dense, onSelectRef, selectedIndex],\n  );\n\n  return (\n    <TabListContext.Provider value={tabList}>\n      <TabHeaderContext.Provider value={context}>\n        <InnerTabHeader extraContent={extraContent} borderless={borderless}>\n          {children}\n        </InnerTabHeader>\n      </TabHeaderContext.Provider>\n    </TabListContext.Provider>\n  );\n}\n\nexport default TabHeader;\n","import TabHeader from './TabHeader';\n\nexport default TabHeader;\n","import styled from 'styled-components';\n\nconst TabPanelWrapper = styled.div`\n  width: 100%;\n  flex-shrink: 0;\n  overflow: auto;\n`;\n\nexport default TabPanelWrapper;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useContext, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport TabPanelWrapper from './TabPanelWrapper';\nimport TabListContext from '../TabListContext';\nimport useTabRegister from '../commons/useTabRegister';\nimport TabContentContext from '../TabContentContext';\n\ninterface TabPanelProps {\n  children: React.ReactNode;\n  /**\n   * 指定自定义样式名\n   */\n  className?: string;\n  /**\n   * 指定自定义样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 指定标签 id\n   */\n  tabId?: string;\n  /**\n   * 默认情况下，只有当前标签内容会渲染到 DOM 中。设置为 `true`，会在组件初始化时立即将标签内容渲染到 DOM 中。\n   */\n  forceRenderContent?: boolean;\n  /**\n   * 设置启用标签面板渲染到 DOM 的内容缓存。默认为 `true`。\n   */\n  cacheable?: boolean;\n}\n\n/**\n * 获取是否启用标签渲染缓存特性的hook。\n *\n * @param isCacheable 是否启用缓存特性的属性\n */\nfunction useIsCacheable(isCacheable?: boolean) {\n  const tabContentContext = useContext(TabContentContext);\n\n  if (typeof isCacheable === 'boolean') {\n    return isCacheable;\n  }\n\n  if (tabContentContext && typeof tabContentContext.cacheable === 'boolean') {\n    return tabContentContext.cacheable;\n  }\n\n  return true;\n}\n\n/**\n * 判断是否需要渲染标签面板的hook。\n *\n * @param isCacheable 是否启用了标签面板内容缓存\n * @param isActive 是否是当前标签面板\n */\nfunction useIsNeedRendered(isCacheable: boolean, isActive: boolean) {\n  const isNeedRenderedRef = useRef(false);\n\n  const isNeedRendered = isActive || (isCacheable && isNeedRenderedRef.current);\n\n  useEffect(() => {\n    if (isActive && isCacheable) {\n      isNeedRenderedRef.current = true;\n    }\n  });\n\n  return isNeedRendered;\n}\n\n/**\n * 判断是否是当前面板面板的hook。\n *\n * @param index 标签面板索引位置\n */\nfunction useIsActive(index: number) {\n  const context = useContext(TabListContext);\n  const selectedIndex = context ? context.selectedIndex : 0;\n\n  return index === selectedIndex;\n}\n\n/**\n * 判断是否强制渲染标签面板内容的hook。\n *\n * @param isForceRenderContent 是否强制渲染的属性\n */\nfunction useIsForceRenderContent(isForceRenderContent?: boolean) {\n  const tabContentContext = useContext(TabContentContext);\n\n  if (typeof isForceRenderContent === 'boolean') {\n    return isForceRenderContent;\n  }\n  return !!tabContentContext && tabContentContext.forceRenderTabPanel;\n}\n\n/**\n * 获取即将渲染的标签面板内容\n *\n * @param isActive 是否是当前标签\n * @param children 内容\n */\nfunction useRenderingChildren(isActive: boolean, children?: React.ReactNode) {\n  const activeChildren = useRef(children);\n  const renderingChildren = isActive ? children : activeChildren.current;\n\n  useEffect(() => {\n    if (isActive) {\n      activeChildren.current = children;\n    }\n  });\n\n  return renderingChildren;\n}\n\n/**\n * 标签页面板组件\n */\nexport default function TabPanel(props: TabPanelProps) {\n  const {\n    children,\n    className,\n    forceRenderContent,\n    cacheable,\n    ...other\n  } = props;\n  const [tabId, index] = useTabRegister();\n  const isActive = useIsActive(index);\n  const isCacheable = useIsCacheable(cacheable);\n  const isNeedRendered = useIsNeedRendered(isCacheable, isActive);\n  const isForceRenderContent = useIsForceRenderContent(forceRenderContent);\n  const renderingChildren = useRenderingChildren(isActive, children);\n\n  if (index === -1) {\n    return null;\n  }\n\n  return (\n    <TabPanelWrapper\n      data-testid={`tab-panel-${index}`}\n      role=\"tabpanel\"\n      aria-hidden={!isActive}\n      aria-labelledby={props.tabId}\n      id={tabId}\n      {...other}\n      className={classNames(\n        'sinoui-tab-panel',\n        {\n          'sinoui-tab-panel-active': isActive,\n          'sinoui-tab-panel-hidden': !isActive,\n        },\n        className,\n      )}\n    >\n      {isNeedRendered || isForceRenderContent ? renderingChildren : null}\n    </TabPanelWrapper>\n  );\n}\n","import TabPanel from './TabPanel';\n\nexport default TabPanel;\n","import { useContext } from 'react';\nimport TabHeaderContext from '../TabHeaderContext';\n\nfunction useInTabHeader() {\n  const context = useContext(TabHeaderContext);\n\n  return !!context;\n}\n\nexport default useInTabHeader;\n","import { useContext } from 'react';\nimport TabContentContext from '../TabContentContext';\n\nfunction useInTabContent() {\n  const context = useContext(TabContentContext);\n\n  return !!context;\n}\n\nexport default useInTabContent;\n","import React from 'react';\nimport useInTabHeader from './useInTabHeader';\nimport useInTabContent from './useInTabContent';\nimport TabHeaderItem from '../tab-header-item';\nimport TabPanel from '../tab-panel';\n\ninterface Props {\n  /**\n   * 指定标签页标题。\n   */\n  title: React.ReactNode;\n  /**\n   * 指定标签页内容。\n   */\n  children: React.ReactNode;\n\n  /**\n   * 设置为 `true` 则禁用标签。默认为 `false`。\n   */\n  disabled?: boolean;\n\n  /**\n   * 指定标签id\n   */\n  id?: string;\n\n  /**\n   * 默认情况下，只有当前标签的内容会渲染到 DOM 中。设置为 `true`，则组件初始化时立即渲染标签面板内容到 DOM 中。\n   */\n  forceRenderTabPanel?: boolean;\n}\n\n/**\n * 标签页组件\n *\n * @param {Props} props\n * @returns\n */\nfunction Tab({ children, title, disabled, id, forceRenderTabPanel }: Props) {\n  const isInTabHeader = useInTabHeader();\n  const isInTabContent = useInTabContent();\n\n  if (isInTabHeader) {\n    return <TabHeaderItem title={title} disabled={disabled} id={id} />;\n  }\n\n  if (isInTabContent) {\n    return (\n      <TabPanel tabId={id} forceRenderContent={forceRenderTabPanel}>\n        {children}\n      </TabPanel>\n    );\n  }\n\n  return null;\n}\n\nexport default Tab;\n","import { useRef } from 'react';\n\n/**\n * 使用同步的“变量”\n */\nfunction useRefValue<T>(value: T) {\n  const ref = useRef(value);\n\n  ref.current = value;\n\n  return ref;\n}\n\nexport default useRefValue;\n","let count = 0;\n\n/**\n * 生成新的标签id\n */\nfunction uuid() {\n  const id = count;\n  count += 1;\n  return `tab-${id}`;\n}\n\n/**\n *  重置计数器\n */\nexport function reset() {\n  count = 0;\n}\n\nexport default uuid;\n"],"sourceRoot":""}