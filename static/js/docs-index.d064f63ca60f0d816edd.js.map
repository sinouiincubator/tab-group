{"version":3,"sources":["/Users/sinosoft/Documents/GitHub/tab-group/docs/index.mdx","/Users/sinosoft/Documents/GitHub/tab-group/src/components/commons/useTabId.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/commons/useTabRegister.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/constants.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-header-item/TabHeaderItemWrapper.tsx","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-header-item/TabHeaderItem.tsx","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-header-item/index.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-panel/TabPanelWrapper.tsx","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-panel/TabPanel.tsx","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-panel/index.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab/useInTabHeader.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab/useInTabContent.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab/Tab.tsx","/Users/sinosoft/Documents/GitHub/tab-group/src/helpers/uuid.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab/index.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/index.ts"],"names":["name","layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","alt","src","__position","__code","__scope","this","useState","useCallback","Playground","Props","MdDelete","TabGroup","Tab","TabHeader","TabHeaderItem","TabContent","TabPanel","Button","title","disabled","tabHeaderExtraContent","primary","raised","style","margin","marginLeft","active","setActive","selectedIndex","onSelect","NextIcon","display","padding","color","borderless","handlePrevClick","handleNextClick","onClick","animateHeight","id","items","i","push","content","tabs","setTabs","map","tab","key","event","tabId","stopPropagation","newTabs","filter","handleTabRemove","index","Math","max","setSelectedIndex","isMDXComponent","useTabId","useMemo","uuid","useTabRegister","context","useContext","TabListContext","register","unregisterRef","useRefValue","unregister","undefined","useEffect","current","LEFT_KEY_CODE","TOP_KEY_CODE","RIGHT_KEY_CODE","BOTTOM_KEY_CODE","hoverCss","css","activeCss","theme","palette","disabledCss","text","TabHeaderItemWrapper","styled","div","className","rest","tabListContext","tabHeaderContext","TabHeaderContext","isActive","rippleRef","useRipple","handleClick","handleKeyDown","keyCode","getTabs","getTabProps","preventDefault","nextTab","getNextTabIndex","length","prevTab","getPrevTabIndex","classNames","ref","data-testid","role","tabIndex","aria-disabled","aria-selected","onKeyDown","hiddenCss","TabPanelWrapper","children","forceRenderContent","cacheable","other","useIsActive","isNeedRendered","isCacheable","isNeedRenderedRef","useRef","useIsNeedRendered","tabContentContext","TabContentContext","useIsCacheable","isForceRenderContent","forceRenderTabPanel","useIsForceRenderContent","renderingChildren","activeChildren","useRenderingChildren","aria-hidden","aria-labelledby","useInTabHeader","useInTabContent","isInTabHeader","isInTabContent","count","reset"],"mappings":"6JAiBsBA,E,glBAKhBC,GALgBD,EAIS,WACX,IAGdE,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,+BADR,+BAGA,yEACA,qBAAG,+BAAGC,WAAW,KAAQ,CACrB,KAAQ,6DACP,mBAAKC,IAAI,cAAcC,IAAI,6DAFhC,KAGF,+BAAGF,WAAW,KAAQ,CAChB,KAAQ,6DACP,mBAAKC,IAAI,YAAYC,IAAI,+DAC9B,iBAAQ,CACN,GAAM,4BADR,4BAGA,uBAAK,kCAAMF,WAAW,OAAU,CAC5B,UAAa,mBADZ,0CAIL,iBAAQ,CACN,GAAM,4BADR,4BAGA,yYACA,iBAAQ,CACN,GAAM,4BADR,4BAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,mXAeL,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,oNAAiIC,QAAS,CAC3KP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,cACb,YAAC,IAAD,CAAUA,QAAQ,YAChB,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,+BAGA,iBAAQ,CACN,GAAM,4BADR,4BAGA,iRACA,uDACA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,mBADZ,mDAIL,+BAAS,0BAAYA,WAAW,KAAvB,OAAT,uEACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uTAYL,iBAAQ,CACN,GAAM,gBADR,gBAGA,yEACA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,obAA6QC,QAAS,CACvTP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,cACb,YAAC,IAAD,CAAUA,QAAQ,YAChB,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMC,UAAQ,EAACrB,QAAQ,OAAlC,6BAGA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMC,UAAQ,EAACrB,QAAQ,OAAlC,6BAGA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,+BAGA,yEACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,uOAAoJC,QAAS,CAC9LP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,cACb,YAAC,IAAD,CAAUA,QAAQ,YAChB,YAAC,IAAD,CAAKoB,MAAM,gBAAMC,UAAQ,EAACrB,QAAQ,OAAlC,6BAGA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,+BAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,4EACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,4jBAAiTC,QAAS,CAC3VP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,cACb,YAAC,IAAD,CAAUA,QAAQ,YAChB,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OACvB,YAAC,IAAD,CAAUA,QAAQ,YAChB,YAAC,IAAD,CAAKoB,MAAM,0CAAYpB,QAAQ,OAA/B,qDACA,YAAC,IAAD,CAAKoB,MAAM,0CAAYpB,QAAQ,OAA/B,qDACA,YAAC,IAAD,CAAKoB,MAAM,0CAAYpB,QAAQ,OAA/B,uDAGJ,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,+BAGA,iBAAQ,CACN,GAAM,4BADR,4BAGA,6GACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,odAA6WC,QAAS,CACvZP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,cACb,YAAC,IAAD,CAAUsB,sBAAuB,uBAC3B,YAAC,IAAD,CAAQC,SAAO,EAACC,QAAM,EAACC,MAAO,CAC5BC,OAAQ,GACP1B,QAAQ,UAFX,gBAKA,YAAC,IAAD,CAAQuB,SAAO,EAACC,QAAM,EAACC,MAAO,CAC5BC,OAAQ,EACRC,WAAY,GACX3B,QAAQ,UAHX,iBAMMA,QAAQ,YAClB,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,+BAGA,iBAAQ,CACN,GAAM,8CADR,8CAGA,qBAAG,0BAAYC,WAAW,KAAvB,YAAH,qGACA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,w6CAA8VC,QAAS,CACxYP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,cACb,YAAC,IAAD,CAAUA,QAAQ,YAChB,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,0hBAGA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,kuBAKA,iBAAQ,CACN,GAAM,wCADR,wCAGA,qBAAG,0BAAYC,WAAW,KAAvB,aAAH,mFACA,8BACE,iBAAGA,WAAW,cAAd,qBAAkC,0BAAYA,WAAW,KAAvB,aAAlC,mFAA0G,0BAAYA,WAAW,KAAvB,iBAA1G,WAA0K,0BAAYA,WAAW,KAAvB,YAA1K,wBAEF,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,qgBAiBL,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,qSAA8QC,QAAS,CACxTP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,eACZ,WAAO,IAAD,EAC2BQ,mBAAS,GADpC,mBACMoB,EADN,KACcC,EADd,KAED,OAAO,YAAC,IAAD,CAAWC,cAAeF,EAAQG,SAAUF,EAAW7B,QAAQ,aAC5E,YAAC,IAAD,CAAeoB,MAAM,gBAAMpB,QAAQ,kBACnC,YAAC,IAAD,CAAeoB,MAAM,gBAAMpB,QAAQ,kBACnC,YAAC,IAAD,CAAeoB,MAAM,gBAAMpB,QAAQ,sBAIjC,6SACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,8iBAAuhBC,QAAS,CACjkBP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,eACZ,WAAO,IAAD,EAC2BQ,mBAAS,GADpC,mBACMoB,EADN,KACcC,EADd,KAGKG,EAAW,kBAAM,mBAAKP,MAAO,CACjCQ,QAAS,eACTC,QAAS,mBACTC,MAAO,wBAHc,MAMvB,OAAO,YAAC,IAAD,CAAWL,cAAeF,EAAQG,SAAUF,EAAWO,YAAU,EAACpC,QAAQ,aACnF,YAAC,IAAD,CAAeoB,MAAM,gBAAMpB,QAAQ,kBACnC,YAACgC,EAAD,CAAUhC,QAAQ,aAClB,YAAC,IAAD,CAAeoB,MAAM,gBAAMpB,QAAQ,kBACnC,YAACgC,EAAD,CAAUhC,QAAQ,aAClB,YAAC,IAAD,CAAeoB,MAAM,gBAAMpB,QAAQ,sBAIrC,iBAAQ,CACN,GAAM,oDADR,oDAGA,qBAAG,0BAAYC,WAAW,KAAvB,cAAH,+FACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,g3BAoCL,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,4rBAAioBC,QAAS,CAC3qBP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,eACZ,WAAO,IAAD,EAC2BQ,mBAAS,GADpC,mBACMoB,EADN,KACcC,EADd,KAEKQ,EAAkB5B,uBAAY,WACnB,IAAXmB,GAIJC,EAAUD,EAAS,KAClB,CAACA,IACEU,EAAkB7B,uBAAY,WACnB,IAAXmB,GAIJC,EAAUD,EAAS,KAClB,CAACA,IACJ,OAAO,8BACX,YAAC,IAAD,CAAYE,cAAeF,EAAQ5B,QAAQ,cACzC,YAAC,IAAD,CAAUA,QAAQ,YAAlB,iBACA,YAAC,IAAD,CAAUA,QAAQ,YAAlB,iBACA,YAAC,IAAD,CAAUA,QAAQ,YAAlB,kBAEF,YAAC,IAAD,CAAQuC,QAASF,EAAiBrC,QAAQ,UAA1C,sBACA,YAAC,IAAD,CAAQuC,QAASD,EAAiBtC,QAAQ,UAA1C,0BAIA,iBAAQ,CACN,GAAM,4BADR,4BAGA,qBAAG,0BAAYC,WAAW,KAAvB,YAAH,WAA8D,0BAAYA,WAAW,KAAvB,cAA9D,yUAAgL,0BAAYA,WAAW,KAAvB,iBAAhL,iEACA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,s7CAA4WC,QAAS,CACtZP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,cACb,YAAC,IAAD,CAAUwC,eAAa,EAACxC,QAAQ,YAC9B,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,0hBAGA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,kuBAKA,iBAAQ,CACN,GAAM,4BADR,4BAGA,sHACA,sBACE,kBAAIC,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,mFADQ,kBAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,4CADQ,oBAItB,qCAAU,0BAAYA,WAAW,KAAvB,OAAV,uBAAkE,0BAAYA,WAAW,KAAvB,MAAlE,yPACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,idAqBL,YAAC,IAAD,CAAYG,WAAY,GAAIC,OAAQ,0RAA6MC,QAAS,CACxPP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,cACb,YAAC,IAAD,CAAUA,QAAQ,YAChB,YAAC,IAAD,CAAKoB,MAAM,gBAAMqB,GAAG,UAAUzC,QAAQ,OAAtC,6BAGA,YAAC,IAAD,CAAKoB,MAAM,gBAAMqB,GAAG,YAAYzC,QAAQ,OAAxC,6BAGA,YAAC,IAAD,CAAKoB,MAAM,gBAAMqB,GAAG,SAASzC,QAAQ,OAArC,+BAKA,iBAAQ,CACN,GAAM,kCADR,kCAGA,uGACA,YAAC,IAAD,CAAYI,WAAY,GAAIC,OAAQ,4qCAA2nCC,QAAS,CACtqCP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,eACZ,WAAO,IAAD,EACuBQ,oBAAS,WAG/B,IAFA,IAAMkC,EAAQ,GAELC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAME,KAAK,CACTH,GAAIE,EACJvB,MAAM,eAAD,OAAOuB,EAAI,GAChBE,QAAQ,eAAD,OAAOF,EAAI,KAItB,OAAOD,KAZR,mBACMI,EADN,KACYC,EADZ,KA+BD,OAAO,8BACb,YAAC,IAAD,CAAU/C,QAAQ,YACf8C,EAAKE,KAAI,SAAAC,GAAG,OAAI,YAAC,IAAD,CAAKC,IAAKD,EAAIR,GAAIrB,MAAO,uBACnC6B,EAAI7B,MAAM,YAAC,IAAD,CAAUmB,QAAS,SAAAY,GAAK,OAnBb,SAACA,EAAOC,GAC9BD,EAAME,kBACN,IAAMC,EAAUR,EAAKS,QAAO,SAAAN,GAAG,OAAIA,EAAIR,KAAOW,KAC9CL,EAAQO,GAgB+BE,CAAgBL,EAAOF,EAAIR,KAAKzC,QAAQ,cACzEA,QAAQ,OACfiD,EAAIJ,aAGX,YAAC,IAAD,CAAQrB,QAAM,EAACe,QAlBS,WAChB,IAAMkB,EAAQC,KAAKC,IAAL,MAAAD,KAAI,YAAQZ,EAAKE,KAAI,SAAAC,GAAG,OAAIA,EAAIR,OAA5B,SAAkC,KAAK,EACnDa,EAAO,sBAAOR,GAAP,CAAa,CACxBL,GAAIgB,EACJrC,MAAM,eAAD,OAAOqC,EAAQ,GACpBZ,QAAQ,eAAD,OAAOY,EAAQ,MAExBV,EAAQO,IAWmBtD,QAAQ,UAA3C,oBAIE,iBAAQ,CACN,GAAM,4BADR,4BAGA,qBAAG,0BAAYC,WAAW,KAAvB,YAAH,mFAA0E,0BAAYA,WAAW,KAAvB,iBAA1E,sBAA2I,0BAAYA,WAAW,KAAvB,YAA3I,uEAAgN,0BAAYA,WAAW,KAAvB,YAAhN,uHACA,qFAAkB,0BAAYA,WAAW,KAAvB,YAAlB,yFACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,0mBAoBL,YAAC,IAAD,CAAYG,WAAY,GAAIC,OAAQ,8eAA8WC,QAAS,CACzZP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,eACZ,WAAO,IAAD,EACyCQ,mBAAS,GADlD,mBACMsB,EADN,KACqB8B,EADrB,KAED,OAAO,8BACb,gFAAe9B,GACf,YAAC,IAAD,CAAUA,cAAeA,EAAeC,SAAU6B,EAAkB5D,QAAQ,YAC1E,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,8BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,8BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,mCAKA,iBAAQ,CACN,GAAM,8CADR,8CAGA,qBAAG,0BAAYC,WAAW,KAAvB,YAAH,gEAAsE,0BAAYA,WAAW,KAAvB,YAAtE,yCAAsI,0BAAYA,WAAW,KAAvB,SAAtI,4JACA,YAAC,IAAD,CAAYG,WAAY,GAAIC,OAAQ,oPAAiKC,QAAS,CAC5MP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,oBACAC,0BACAC,eACAC,UACAC,aACAC,aACAC,QACAC,cACAC,kBACAC,eACAC,aACAC,YACCnB,QAAQ,cACb,YAAC,IAAD,CAAU+B,SAAU,SAAA0B,GAAK,OAAc,IAAVA,GAAazD,QAAQ,YAChD,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,6BACA,YAAC,IAAD,CAAKoB,MAAM,gBAAMpB,QAAQ,OAAzB,gC,oKAOJH,EAAWgE,gBAAiB,G,8NClpB5B,SAASC,IAGP,OAFcC,kBAAQC,IAAM,IAKfF,QCHf,SAASG,EAAelE,GACtB,IAAMmE,EAAUC,qBAAWC,KACrBhB,EAAQU,IACRL,EAAQS,EAAUA,EAAQG,SAASjB,EAAOrD,GAAS,KAAO,EAC1DuE,EAAgBC,YAAYL,EAAUA,EAAQM,gBAAaC,GAWjE,OATAC,qBAAU,WACR,IAAMF,EAAaF,EAAcK,QAEjC,GAAIH,EACF,OAAO,kBAAMA,EAAWpB,MAGzB,CAACA,EAAOkB,IAEJ,CAAClB,EAAOK,G,sLAGFQ,M,ooBC3BFW,EAAgB,G,iMAEtB,IAAMC,EAAe,G,gMAErB,IAAMC,EAAiB,G,kMAEvB,IAAMC,EAAkB,G,0zCCJ/B,IAAMC,EAAWC,YAAH,KAMRC,EAAYD,YAAH,KACJ,SAAClF,GAAD,OAAWA,EAAMoF,MAAMC,QAAQ7D,QAAQ,QAI5C8D,EAAcJ,YAAH,KAEN,SAAClF,GAAD,OAAWA,EAAMoF,MAAMC,QAAQE,KAAKjE,YAQzCkE,EAAuBC,IAAOC,IAAV,KAWf,SAAC1F,GAAD,OAAWA,EAAMoF,MAAMC,QAAQE,KAAK/D,WAW3C,SAACxB,GAAD,OAAYA,EAAMsB,UAAY2D,KAC9B,SAACjF,GAAD,OAAWA,EAAMsB,UAAYgE,KAC7B,SAACtF,GAAD,OAAWA,EAAM6B,QAAUsD,KAGhBK,I,2XCgDf,SAASvE,EAAT,GAOW,IANTI,EAMQ,EANRA,MACAsE,EAKQ,EALRA,UACAjE,EAIQ,EAJRA,MACAJ,EAGQ,EAHRA,SACAoB,EAEQ,EAFRA,GACGkD,EACK,6DACFC,EAAiBzB,qBAAWC,KAC5ByB,EAAmB1B,qBAAW2B,KAF5B,EAGe7B,YAAe,CAAE5C,aAHhC,mBAGD+B,EAHC,KAGMK,EAHN,KAIF3B,EAAgB8D,EAAiBA,EAAe9D,eAAiB,EACjEiE,EAAWtC,IAAU3B,EAErBkE,EAAYC,iBAA0BxB,EAAWpD,GAEjD6E,EAAczF,uBAClB,SAAC0C,GACK0C,GACFA,EAAiB9D,SAAS0B,EAAON,KAGrC,CAACM,EAAOoC,IAGJM,EAAgB1F,uBACpB,SAAC0C,GAAgC,IACvBiD,EAAYjD,EAAZiD,QACR,GAAIR,GAAkBC,EAAkB,CAAC,IAC/BQ,EAAyBT,EAAzBS,QAASC,EAAgBV,EAAhBU,YACXxD,EAAOuD,IACb,GAAID,IAAYtB,GAAkBsB,IAAYrB,EAAiB,CAC7D5B,EAAME,kBACNF,EAAMoD,iBACN,IAAMC,EAvFhB,SAASC,EACP3E,EACAgB,EACAwD,GAGA,IADA,IAAI3D,EAAIb,EAAgB,EACjBa,EAAIG,EAAK4D,OAAQ/D,GAAK,EAAG,CAG9B,IADoB2D,EADNxD,EAAKH,IACoBtB,SAErC,OAAOsB,EAIX,OAAIA,IAAMG,EAAK4D,OACND,GAAiB,EAAG3D,EAAMwD,GAG5B,EAqEiBG,CAAgB3E,EAAegB,EAAMwD,GACrDT,EAAiB9D,SAASyE,EAASrD,QAC9B,GAAIiD,IAAYxB,GAAiBwB,IAAYvB,EAAc,CAChE1B,EAAME,kBACNF,EAAMoD,iBACN,IAAMI,EA/DhB,SAASC,EACP9E,EACAgB,EACAwD,GAGA,IADA,IAAI3D,EAAIb,EAAgB,EACjBa,EAAI,EAAGA,GAAK,EAAG,CAGpB,IADoB2D,EADNxD,EAAKH,IACoBtB,SAErC,OAAOsB,EAIX,OAAsB,IAAlBb,EACK8E,EAAgB9D,EAAK4D,OAAQ5D,EAAMwD,GAGrC,EA6CiBM,CAAgB9E,EAAegB,EAAMwD,GACrDT,EAAiB9D,SAAS4E,EAASxD,OAIzC,CAACrB,EAAe+D,EAAkBD,IAGpC,OAAe,IAAXnC,EACK,KAIP,kBAAC,EAAD,eACEiC,UAAWmB,IAAW,aAAcnB,EAAW,CAC7C,qBAAsBK,EACtB,uBAAwB1E,IAE1BI,MAAOA,EACPJ,SAAUA,EACVO,OAAQmE,EACRxD,QAASlB,OAAWoD,EAAYyB,EAChCY,IAAKd,EACLe,cAAA,0BAAgCtD,GAChCuD,KAAK,MACLC,SAAUlB,EAAW,GAAK,EAC1BmB,gBAAe7F,EACf8F,gBAAepB,EACfqB,UAAW/F,OAAWoD,EAAY0B,EAClC1D,GAAIA,GAAMW,GACNuC,GAEHvE,GAKQJ,M,mRC9Kf,8DAEeA,MAAf,E,igCCIA,IAAMqG,EAAYpC,YAAH,KAITqC,EAAkB9B,IAAOC,IAAV,KAKjB,SAAC1F,GAAD,OAAYA,EAAM6B,QAAUyF,KAGjBC,I,4WCqGA,SAASpG,EAASnB,GAAuB,IAEpDwH,EAKExH,EALFwH,SACA7B,EAIE3F,EAJF2F,UACA8B,EAGEzH,EAHFyH,mBACAC,EAEE1H,EAFF0H,UACGC,EANgD,YAOjD3H,EAPiD,6DAQ9BkE,cAR8B,mBAQ9Cb,EAR8C,KAQvCK,EARuC,KAS/CsC,EApDR,SAAqBtC,GACnB,IAAMS,EAAUC,qBAAWC,KAG3B,OAAOX,KAFeS,EAAUA,EAAQpC,cAAgB,GAkDvC6F,CAAYlE,GAEvBmE,EAzER,SAA2BC,EAAsB9B,GAC/C,IAAM+B,EAAoBC,kBAAO,GAE3BH,EAAiB7B,GAAa8B,GAAeC,EAAkBnD,QAQrE,OANAD,qBAAU,WACJqB,GAAY8B,IACdC,EAAkBnD,SAAU,MAIzBiD,EA8DgBI,CA7FzB,SAAwBH,GACtB,IAAMI,EAAoB9D,qBAAW+D,KAErC,MAA2B,mBAAhBL,EACFA,GAGLI,GAA4D,mBAAhCA,EAAkBR,WACzCQ,EAAkBR,UAoFPU,CAAeV,GACmB1B,GAChDqC,EA3CR,SAAiCA,GAC/B,IAAMH,EAAoB9D,qBAAW+D,KAErC,MAAoC,mBAAzBE,EACFA,IAEAH,GAAqBA,EAAkBI,oBAqCnBC,CAAwBd,GAC/Ce,EA7BR,SAA8BxC,EAAmBwB,GAC/C,IAAMiB,EAAiBT,iBAAOR,GACxBgB,EAAoBxC,EAAWwB,EAAWiB,EAAe7D,QAQ/D,OANAD,qBAAU,WACJqB,IACFyC,EAAe7D,QAAU4C,MAItBgB,EAmBmBE,CAAqB1C,EAAUwB,GAEzD,OAAe,IAAX9D,EACK,KAIP,kBAAC,EAAD,eACEsD,cAAA,oBAA0BtD,GAC1BuD,KAAK,WACL0B,eAAc3C,EACd4C,kBAAiB5I,EAAMqD,MACvBX,GAAIW,GACAsE,EANN,CAOEhC,UAAWmB,IACT,mBACA,CACE,2BAA4Bd,GAE9BL,GAEF9D,OAAQmE,IAEP6B,GAAkBQ,EAAuBG,EAAoB,M,+RC3JpE,mDAEerH,MAAf,E,oXCCA,SAAS0H,IAGP,QAFgBzE,qBAAW2B,KAKd8C,Q,+OCNf,SAASC,IAGP,QAFgB1E,qBAAW+D,KAKdW,Q,gSC6Bf,SAAS/H,EAAT,GAA6E,IAA9DyG,EAA6D,EAA7DA,SAAUnG,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,SAAUoB,EAAkC,EAAlCA,GAAI4F,EAA8B,EAA9BA,oBACtCS,EAAgBF,IAChBG,EAAiBF,IAEvB,OAAIC,EACK,kBAAC,IAAD,CAAe1H,MAAOA,EAAOC,SAAUA,EAAUoB,GAAIA,IAG1DsG,EAEA,kBAAC,IAAD,CAAU3F,MAAOX,EAAI+E,mBAAoBa,GACtCd,GAKA,KAGMzG,M,+NCzDf,sCAAIkI,EAAQ,EAKZ,SAAShF,IACP,IAAMvB,EAAKuG,EAEX,OADAA,GAAS,EACH,OAAN,OAAcvG,GAMT,SAASwG,IACdD,EAAQ,E,oKAGKhF,M,odChBAlD,IAAf,E,+OCFA,kL,4oCAiBeD,MAAf,E","file":"static/js/docs-index.0248be01.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useState, useCallback } from 'react';\nimport { Playground, Props } from 'docz';\nimport { MdDelete } from 'react-icons/md';\nimport TabGroup, {\n  Tab,\n  TabHeader,\n  TabHeaderItem,\n  TabContent,\n  TabPanel,\n} from '../src';\nimport Button from 'sinoui-components/Button';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst NextIcon = makeShortcode(\"NextIcon\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"tabgroup-标签页\"\n    }}>{`TabGroup 标签页`}</h1>\n    <p>{`选项卡切换组件。`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@sinouiincubator/tab-group\"\n      }}><img alt=\"npm version\" src=\"https://img.shields.io/npm/v/@sinouiincubator/tab-group\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@sinouiincubator/tab-group\"\n      }}><img alt=\"downloads\" src=\"https://img.shields.io/npm/dm/@sinouiincubator/tab-group\" /></a></p>\n    <h2 {...{\n      \"id\": \"安装依赖\"\n    }}>{`安装依赖`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add @sinouiincubator/tab-group\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <p>{`提供平级的区域将大块内容进行收纳和展现，保持界面整洁。TabGroup 提供的是标准线条式页签，用于容器内部的主功能切换，这是最常用的 Tabs。`}</p>\n    <h2 {...{\n      \"id\": \"入门示例\"\n    }}>{`入门示例`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport TabGroup, { Tab } from '@sinouiincubator/tab-group';\n\nfunction Demo() {\n  return (\n    <TabGroup>\n      <Tab title=\"标签1\">标签内容1</Tab>\n      <Tab title=\"标签2\">标签内容2</Tab>\n      <Tab title=\"标签3\">标签内容3</Tab>\n    </TabGroup>\n  );\n}\n`}</code></pre>\n    <Playground __position={0} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"主题切换\"\n    }}>{`主题切换`}</h2>\n    <p>{`TabGroup 组件通过 styled-components 支持主题切换。所以在项目中使用 TabGroup 组件，需要做一些主题初始化工作。`}</p>\n    <p>{`安装依赖：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add styled-components sinoui-components\n`}</code></pre>\n    <p>{`在 `}<inlineCode parentName=\"p\">{`App`}</inlineCode>{` 组件中创建主题上下文：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport defaultTheme from 'sinoui-components/styles/defaultTheme';\n\nfunction App() {\n  return (\n    <ThemeProvider value={defaultTheme}>/* 这里是应用程序内容 */</ThemeProvider>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"禁用\"\n    }}>{`禁用`}</h2>\n    <p>{`禁用某些标签页：`}</p>\n    <Playground __position={1} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n  <Tab title=\\\"标签2\\\" disabled>\\n    标签内容2\\n  </Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n  <Tab title=\\\"标签4\\\" disabled>\\n    标签内容4\\n  </Tab>\\n  <Tab title=\\\"标签5\\\">标签内容5</Tab>\\n  <Tab title=\\\"标签6\\\">标签内容6</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n    <Tab title=\"标签2\" disabled mdxType=\"Tab\">\n      标签内容2\n    </Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n    <Tab title=\"标签4\" disabled mdxType=\"Tab\">\n      标签内容4\n    </Tab>\n    <Tab title=\"标签5\" mdxType=\"Tab\">标签内容5</Tab>\n    <Tab title=\"标签6\" mdxType=\"Tab\">标签内容6</Tab>\n  </TabGroup>\n    </Playground>\n    <p>{`禁用当前标签页：`}</p>\n    <Playground __position={2} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\" disabled>\\n    标签内容1\\n  </Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" disabled mdxType=\"Tab\">\n      标签内容1\n    </Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"嵌套\"\n    }}>{`嵌套`}</h2>\n    <p>{`TabGroup 可以嵌套使用。`}</p>\n    <Playground __position={3} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\">\\n    <TabGroup>\\n      <Tab title=\\\"标签1--二级标签\\\">这是嵌套标签内容1</Tab>\\n      <Tab title=\\\"标签2--二级标签\\\">这是嵌套标签内容2</Tab>\\n      <Tab title=\\\"标签3--二级标签\\\">这是嵌套标签内容3</Tab>\\n    </TabGroup>\\n  </Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">\n      <TabGroup mdxType=\"TabGroup\">\n        <Tab title=\"标签1--二级标签\" mdxType=\"Tab\">这是嵌套标签内容1</Tab>\n        <Tab title=\"标签2--二级标签\" mdxType=\"Tab\">这是嵌套标签内容2</Tab>\n        <Tab title=\"标签3--二级标签\" mdxType=\"Tab\">这是嵌套标签内容3</Tab>\n      </TabGroup>\n    </Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"附加内容\"\n    }}>{`附加内容`}</h2>\n    <p>{`可以在页签右边添加附加操作。`}</p>\n    <Playground __position={4} __code={'<TabGroup\\n  tabHeaderExtraContent={\\n    <div>\\n      <Button primary raised style={{ margin: 0 }}>\\n        提交\\n      </Button>\\n      <Button primary raised style={{ margin: 0, marginLeft: 8 }}>\\n        保存\\n      </Button>\\n    </div>\\n  }\\n>\\n  <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup tabHeaderExtraContent={<div>\n        <Button primary raised style={{\n          margin: 0\n        }} mdxType=\"Button\">\n          提交\n        </Button>\n        <Button primary raised style={{\n          margin: 0,\n          marginLeft: 8\n        }} mdxType=\"Button\">\n          保存\n        </Button>\n      </div>} mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"内容高度自适应\"\n    }}>{`内容高度自适应`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 组件在切换时内容高度是自适应的。`}</p>\n    <Playground __position={5} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\">\\n    人人都忙于自己的欢喜与悲伤，哪有空顾你的孤独。时间是最公平的资源，你浇灌在哪里，哪里就可能长出灿烂的花朵。无论走到哪里，都要鼓励自己，给自己一些肯定，别总把那些挫败当成痛的诉说。\\n  </Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">\\n    将一颗花生投到漏斗里，很快就落下去了，而把一把花生投到漏斗里，花生相互挤在一起，竟然一颗也落不下去了。成功的人之所以成功，是因为将有限的精力专注到一个领域，每天做好一件事，日积月累成就伟业。而把所有事挤在一起，缺乏核心竞争力，则最终会一事无成。\\n  </Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">\n      人人都忙于自己的欢喜与悲伤，哪有空顾你的孤独。时间是最公平的资源，你浇灌在哪里，哪里就可能长出灿烂的花朵。无论走到哪里，都要鼓励自己，给自己一些肯定，别总把那些挫败当成痛的诉说。\n    </Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">\n      将一颗花生投到漏斗里，很快就落下去了，而把一把花生投到漏斗里，花生相互挤在一起，竟然一颗也落不下去了。成功的人之所以成功，是因为将有限的精力专注到一个领域，每天做好一件事，日积月累成就伟业。而把所有事挤在一起，缺乏核心竞争力，则最终会一事无成。\n    </Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"单独使用标签\"\n    }}>{`单独使用标签`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabHeader`}</inlineCode>{` 组件允许我们单独使用标签。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`注意，`}<inlineCode parentName=\"p\">{`TabHeader`}</inlineCode>{` 组件是受控的，所以必须指定 `}<inlineCode parentName=\"p\">{`selectedIndex`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` 属性。`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useState } from 'react';\nimport { TabHeader, TabHeaderItem } from '@sinouiincubator/tab-group';\n\nfunction TabHeaderDemo() {\n  const [active, setActive] = useState(0);\n\n  return (\n    <TabHeader selectedIndex={active} onSelect={setActive}>\n      <TabHeaderItem title=\"标签1\">标签内容1</TabHeaderItem>\n      <Tab title=\"标签2\">标签内容2</Tab>\n      <Tab title=\"标签3\">标签内容3</Tab>\n    </TabHeader>\n  );\n}\n`}</code></pre>\n    <Playground __position={6} __code={'() => {\\n  const [active, setActive] = useState(0)\\n  return (\\n    <TabHeader selectedIndex={active} onSelect={setActive}>\\n      <TabHeaderItem title=\\\"标签1\\\" />\\n      <TabHeaderItem title=\\\"标签2\\\" />\\n      <TabHeaderItem title=\\\"标签3\\\" />\\n    </TabHeader>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [active, setActive] = useState(0);\n        return <TabHeader selectedIndex={active} onSelect={setActive} mdxType=\"TabHeader\">\n  <TabHeaderItem title=\"标签1\" mdxType=\"TabHeaderItem\" />\n  <TabHeaderItem title=\"标签2\" mdxType=\"TabHeaderItem\" />\n  <TabHeaderItem title=\"标签3\" mdxType=\"TabHeaderItem\" />\n        </TabHeader>;\n      }}\n    </Playground>\n    <p>{`可以自定义标签的样式，或者与其它组件组合使用。如下面的示例，在标签之间加上了一个方向分隔符：`}</p>\n    <Playground __position={7} __code={'() => {\\n  const [active, setActive] = useState(0)\\n  const NextIcon = () => (\\n    <div\\n      style={{\\n        display: \\'inline-block\\',\\n        padding: \\'12px 8px 0px 8px\\',\\n        color: \\'rgba(0, 0, 0, 0.54)\\',\\n      }}\\n    >\\n      >\\n    </div>\\n  )\\n  return (\\n    <TabHeader selectedIndex={active} onSelect={setActive} borderless>\\n      <TabHeaderItem title=\\\"标签1\\\" />\\n      <NextIcon />\\n      <TabHeaderItem title=\\\"标签2\\\" />\\n      <NextIcon />\\n      <TabHeaderItem title=\\\"标签3\\\" />\\n    </TabHeader>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [active, setActive] = useState(0);\n\n        const NextIcon = () => <div style={{\n          display: 'inline-block',\n          padding: \"12px 8px 0px 8px\",\n          color: 'rgba(0, 0, 0, 0.54)'\n        }}>></div>;\n\n        return <TabHeader selectedIndex={active} onSelect={setActive} borderless mdxType=\"TabHeader\">\n      <TabHeaderItem title=\"标签1\" mdxType=\"TabHeaderItem\" />\n      <NextIcon mdxType=\"NextIcon\" />\n      <TabHeaderItem title=\"标签2\" mdxType=\"TabHeaderItem\" />\n      <NextIcon mdxType=\"NextIcon\" />\n      <TabHeaderItem title=\"标签3\" mdxType=\"TabHeaderItem\" />\n    </TabHeader>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"单独使用标签内容\"\n    }}>{`单独使用标签内容`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabContent`}</inlineCode>{` 组件允许我们单独使用标签内容。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport Button from 'sinoui-components/Button';\nimport { TabContent, TabPanel } from '@sinouiincubator/tab-group';\n\nfunction TabContentDemo() {\n  const [active, setActive] = useState(0);\n  const handlePrevClick = useCallback(() => {\n    if (active === 0) {\n      return;\n    }\n\n    setActive(active - 1);\n  }, [active]);\n\n  const handleNextClick = useCallback(() => {\n    if (active === 2) {\n      return;\n    }\n    setActive(active + 1);\n  }, [active]);\n\n  return (\n    <>\n      <TabContent selectedIndex={active}>\n        <TabPanel>内容1</TabPanel>\n        <TabPanel>内容2</TabPanel>\n        <TabPanel>内容3</TabPanel>\n      </TabContent>\n      <Button onClick={handlePrevClick}>上一页</Button>\n      <Button onClick={handleNextClick}>下一页</Button>\n    </>\n  );\n}\n`}</code></pre>\n    <Playground __position={8} __code={'() => {\\n  const [active, setActive] = useState(0)\\n  const handlePrevClick = useCallback(() => {\\n    if (active === 0) {\\n      return\\n    }\\n    setActive(active - 1)\\n  }, [active])\\n\\n  const handleNextClick = useCallback(() => {\\n    if (active === 2) {\\n      return\\n    }\\n    setActive(active + 1)\\n  }, [active])\\n\\n  return (\\n    <>\\n      <TabContent selectedIndex={active}>\\n        <TabPanel>内容1</TabPanel>\\n        <TabPanel>内容2</TabPanel>\\n        <TabPanel>内容3</TabPanel>\\n      </TabContent>\\n      <Button onClick={handlePrevClick}>上一页</Button>\\n      <Button onClick={handleNextClick}>下一页</Button>\\n    </>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [active, setActive] = useState(0);\n        const handlePrevClick = useCallback(() => {\n          if (active === 0) {\n            return;\n          }\n\n          setActive(active - 1);\n        }, [active]);\n        const handleNextClick = useCallback(() => {\n          if (active === 2) {\n            return;\n          }\n\n          setActive(active + 1);\n        }, [active]);\n        return <>\n    <TabContent selectedIndex={active} mdxType=\"TabContent\">\n      <TabPanel mdxType=\"TabPanel\">内容1</TabPanel>\n      <TabPanel mdxType=\"TabPanel\">内容2</TabPanel>\n      <TabPanel mdxType=\"TabPanel\">内容3</TabPanel>\n    </TabContent>\n    <Button onClick={handlePrevClick} mdxType=\"Button\">上一页</Button>\n    <Button onClick={handleNextClick} mdxType=\"Button\">下一页</Button>\n  </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"高度动画\"\n    }}>{`高度动画`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`TabContent`}</inlineCode>{` 组件均支持标签切换时内容高度变化的动画。因为高度动画对于页面性能影响较大，所以默认是禁用高度动画的。可以通过 `}<inlineCode parentName=\"p\">{`animateHeight`}</inlineCode>{` 属性启用。如下所示：`}</p>\n    <Playground __position={9} __code={'<TabGroup animateHeight>\\n  <Tab title=\\\"标签1\\\">\\n    人人都忙于自己的欢喜与悲伤，哪有空顾你的孤独。时间是最公平的资源，你浇灌在哪里，哪里就可能长出灿烂的花朵。无论走到哪里，都要鼓励自己，给自己一些肯定，别总把那些挫败当成痛的诉说。\\n  </Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">\\n    将一颗花生投到漏斗里，很快就落下去了，而把一把花生投到漏斗里，花生相互挤在一起，竟然一颗也落不下去了。成功的人之所以成功，是因为将有限的精力专注到一个领域，每天做好一件事，日积月累成就伟业。而把所有事挤在一起，缺乏核心竞争力，则最终会一事无成。\\n  </Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup animateHeight mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">\n      人人都忙于自己的欢喜与悲伤，哪有空顾你的孤独。时间是最公平的资源，你浇灌在哪里，哪里就可能长出灿烂的花朵。无论走到哪里，都要鼓励自己，给自己一些肯定，别总把那些挫败当成痛的诉说。\n    </Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">\n      将一颗花生投到漏斗里，很快就落下去了，而把一把花生投到漏斗里，花生相互挤在一起，竟然一颗也落不下去了。成功的人之所以成功，是因为将有限的精力专注到一个领域，每天做好一件事，日积月累成就伟业。而把所有事挤在一起，缺乏核心竞争力，则最终会一事无成。\n    </Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"可访问性\"\n    }}>{`可访问性`}</h2>\n    <p>{`TabGroup 组件的可访问性实现参考的是：`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Tab_Role\"\n        }}>{`MDN: tab role`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.w3.org/TR/wai-aria-1.1/#tab\"\n        }}>{`ARIA: tab role`}</a></li>\n    </ul>\n    <p>{`通过 `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` 组件的 `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` 属性可以指定标签与标签面板之间的对应关系，进一步实现 TabGroup 组件的可访问性，如下所示：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport TabGroup, { Tab } from '@sinouiincubator/tab-group';\n\nfunction Demo() {\n  return (\n    <TabGroup>\n      <Tab title=\"标签1\" id=\"tab-pad\">\n        标签内容1\n      </Tab>\n      <Tab title=\"标签2\" id=\"tab-phone\">\n        标签内容2\n      </Tab>\n      <Tab title=\"标签3\" id=\"tab-vr\">\n        标签内容3\n      </Tab>\n    </TabGroup>\n  );\n}\n`}</code></pre>\n    <Playground __position={10} __code={'<TabGroup>\\n  <Tab title=\\\"标签1\\\" id=\\\"tab-pad\\\">\\n    标签内容1\\n  </Tab>\\n  <Tab title=\\\"标签2\\\" id=\\\"tab-phone\\\">\\n    标签内容2\\n  </Tab>\\n  <Tab title=\\\"标签3\\\" id=\\\"tab-vr\\\">\\n    标签内容3\\n  </Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" id=\"tab-pad\" mdxType=\"Tab\">\n      标签内容1\n    </Tab>\n    <Tab title=\"标签2\" id=\"tab-phone\" mdxType=\"Tab\">\n      标签内容2\n    </Tab>\n    <Tab title=\"标签3\" id=\"tab-vr\" mdxType=\"Tab\">\n      标签内容3\n    </Tab>\n  </TabGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"维护标签页\"\n    }}>{`维护标签页`}</h2>\n    <p>{`可以动态新增、删除标签页。`}</p>\n    <Playground __position={11} __code={'() => {\\n  const [tabs, setTabs] = useState(() => {\\n    const items = []\\n    for (let i = 0; i < 10; i++) {\\n      items.push({ id: i, title: `标签${i + 1}`, content: `内容${i + 1}` })\\n    }\\n    return items\\n  })\\n  const handleTabRemove = (event, tabId) => {\\n    event.stopPropagation()\\n    const newTabs = tabs.filter(tab => tab.id !== tabId)\\n\\n    setTabs(newTabs)\\n  }\\n\\n  const handleAdd = () => {\\n    const index = Math.max(...tabs.map(tab => tab.id), -1) + 1\\n    const newTabs = [\\n      ...tabs,\\n      { id: index, title: `标签${index + 1}`, content: `内容${index + 1}` },\\n    ]\\n\\n    setTabs(newTabs)\\n  }\\n\\n  return (\\n    <>\\n      <TabGroup>\\n        {tabs.map(tab => (\\n          <Tab\\n            key={tab.id}\\n            title={\\n              <div>\\n                {tab.title}\\n                <MdDelete\\n                  onClick={event => handleTabRemove(event, tab.id)}\\n                ></MdDelete>\\n              </div>\\n            }\\n          >\\n            {tab.content}\\n          </Tab>\\n        ))}\\n      </TabGroup>\\n      <Button raised onClick={handleAdd}>\\n        新增\\n      </Button>\\n    </>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [tabs, setTabs] = useState(() => {\n          const items = [];\n\n          for (let i = 0; i < 10; i++) {\n            items.push({\n              id: i,\n              title: `标签${i + 1}`,\n              content: `内容${i + 1}`\n            });\n          }\n\n          return items;\n        });\n\n        const handleTabRemove = (event, tabId) => {\n          event.stopPropagation();\n          const newTabs = tabs.filter(tab => tab.id !== tabId);\n          setTabs(newTabs);\n        };\n\n        const handleAdd = () => {\n          const index = Math.max(...tabs.map(tab => tab.id), -1) + 1;\n          const newTabs = [...tabs, {\n            id: index,\n            title: `标签${index + 1}`,\n            content: `内容${index + 1}`\n          }];\n          setTabs(newTabs);\n        };\n\n        return <>\n  <TabGroup mdxType=\"TabGroup\">\n    {tabs.map(tab => <Tab key={tab.id} title={<div>\n          {tab.title}<MdDelete onClick={event => handleTabRemove(event, tab.id)} mdxType=\"MdDelete\"></MdDelete>\n        </div>} mdxType=\"Tab\">\n        {tab.content}\n      </Tab>)}\n  </TabGroup>\n  <Button raised onClick={handleAdd} mdxType=\"Button\">新增</Button>\n  </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"受控模式\"\n    }}>{`受控模式`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 支持非受控和受控模式。指定 `}<inlineCode parentName=\"p\">{`selectedIndex`}</inlineCode>{` 属性，`}<inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 则是受控模式，需要指定 `}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` 属性监听标签页切换。否则是非受控模式。`}</p>\n    <p>{`在受控模式下，需要在 `}<inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 组件之外维护状态，如下所示：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useState } from 'react';\nimport TabGroup, { Tab } from '@sinouiincubator/tab-group';\n\nfunction Demo() {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  return (\n    <>\n      <div>当前选中的标签是：{selectedIndex}</div>\n      <TabGroup selectedIndex={selectedIndex} onSelect={setSelectedIndex}>\n        <Tab title=\"标签1\">标签内容1</Tab>\n        <Tab title=\"标签2\">标签内容2</Tab>\n        <Tab title=\"标签3\">标签内容3</Tab>\n      </TabGroup>\n    </>\n  );\n}\n`}</code></pre>\n    <Playground __position={12} __code={'() => {\\n  const [selectedIndex, setSelectedIndex] = useState(0)\\n  return (\\n    <>\\n      <div>当前选中的标签是：{selectedIndex}</div>\\n      <TabGroup selectedIndex={selectedIndex} onSelect={setSelectedIndex}>\\n        <Tab title=\\\"标签1\\\">标签内容 1</Tab>\\n        <Tab title=\\\"标签2\\\">标签内容 2</Tab>\\n        <Tab title=\\\"标签3\\\">标签内容 3</Tab>\\n      </TabGroup>\\n    </>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [selectedIndex, setSelectedIndex] = useState(0);\n        return <>\n  <div>当前选中的标签是：{selectedIndex}</div>\n  <TabGroup selectedIndex={selectedIndex} onSelect={setSelectedIndex} mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容 1</Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容 2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容 3</Tab>\n  </TabGroup>\n  </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"阻止标签页切换\"\n    }}>{`阻止标签页切换`}</h2>\n    <p><inlineCode parentName=\"p\">{`TabGroup`}</inlineCode>{` 组件在非受控模式下，`}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` 函数如果返回 `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`，则不会切换标签页。如下所示，不让切换到“标签 2”：`}</p>\n    <Playground __position={13} __code={'<TabGroup onSelect={index => index !== 1}>\\n  <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      Props,\n      MdDelete,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabHeaderItem,\n      TabContent,\n      TabPanel,\n      Button\n    }} mdxType=\"Playground\">\n  <TabGroup onSelect={index => index !== 1} mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import { useMemo } from 'react';\nimport uuid from '../../helpers/uuid';\n\n/**\n * 生成标签id\n */\nfunction useTabId() {\n  const tabId = useMemo(uuid, []);\n\n  return tabId;\n}\n\nexport default useTabId;\n","import { useContext, useEffect } from 'react';\nimport useRefValue from '../../helpers/useRefValue';\nimport TabListContext, { TabProps } from '../TabListContext';\nimport useTabId from './useTabId';\n\n/**\n * 注册标签页\n */\n\nfunction useTabRegister(props?: TabProps): [string, number] {\n  const context = useContext(TabListContext);\n  const tabId = useTabId();\n  const index = context ? context.register(tabId, props || {}) : -1;\n  const unregisterRef = useRefValue(context ? context.unregister : undefined);\n\n  useEffect(() => {\n    const unregister = unregisterRef.current;\n\n    if (unregister) {\n      return () => unregister(tabId);\n    }\n    return undefined;\n  }, [tabId, unregisterRef]);\n\n  return [tabId, index];\n}\n\nexport default useTabRegister;\n","export const LEFT_KEY_CODE = 37; // 方向键左\n\nexport const TOP_KEY_CODE = 38; // 方向键上\n\nexport const RIGHT_KEY_CODE = 39; // 方向键右\n\nexport const BOTTOM_KEY_CODE = 40; // 方向键下\n","import styled, { css } from 'styled-components';\n\nconst hoverCss = css`\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst activeCss = css`\n  color: ${(props) => props.theme.palette.primary[500]};\n  opacity: 1;\n`;\n\nconst disabledCss = css`\n  cursor: not-allowed;\n  color: ${(props) => props.theme.palette.text.disabled};\n`;\n\ninterface TabHeaderItemWrapperProps {\n  disabled?: boolean;\n  active?: boolean;\n}\n\nconst TabHeaderItemWrapper = styled.div<TabHeaderItemWrapperProps>`\n  height: 48px;\n  padding: 0 24px;\n  cursor: pointer;\n  box-sizing: border-box;\n  opacity: 0.6;\n  text-align: center;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap; /* 不换行显示 */\n  color: ${(props) => props.theme.palette.text.primary};\n  outline: none;\n  user-select: none;\n  flex-shrink: 0;\n  letter-spacing: 1.25px;\n  font-weight: 500;\n  position: relative;\n  white-space: nowrap;\n  transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n    color 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${(props) => !props.disabled && hoverCss};\n  ${(props) => props.disabled && disabledCss};\n  ${(props) => props.active && activeCss};\n`;\n\nexport default TabHeaderItemWrapper;\n","import React, { useContext, useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useRipple } from '@sinoui/ripple';\nimport {\n  LEFT_KEY_CODE,\n  TOP_KEY_CODE,\n  RIGHT_KEY_CODE,\n  BOTTOM_KEY_CODE,\n} from '../../constants';\nimport TabHeaderItemWrapper from './TabHeaderItemWrapper';\nimport TabListContext from '../TabListContext';\nimport useTabRegister from '../commons/useTabRegister';\nimport TabHeaderContext from '../TabHeaderContext';\n\ninterface Props {\n  /**\n   * 标签标题\n   */\n  title: React.ReactNode;\n  /**\n   * 指定自定义样式名\n   */\n  className?: string;\n  /**\n   * 指定自定义样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 设置为 `true`，则禁用标签。\n   */\n  disabled?: boolean;\n  /**\n   * 指定标签页id\n   */\n  id?: string;\n}\n\n/**\n * 获取下一个可用的tab索引\n *\n * @param {number} selectedIndex\n * @param {string[]} tabs\n * @param {(tabId: string) => { disabled?: boolean }} getTabProps\n * @returns\n */\nfunction getNextTabIndex(\n  selectedIndex: number,\n  tabs: string[],\n  getTabProps: (tabId: string) => { disabled?: boolean },\n): number {\n  let i = selectedIndex + 1;\n  for (; i < tabs.length; i += 1) {\n    const tabId = tabs[i];\n    const tabDisabled = getTabProps(tabId).disabled;\n    if (!tabDisabled) {\n      return i;\n    }\n  }\n\n  if (i === tabs.length) {\n    return getNextTabIndex(-1, tabs, getTabProps);\n  }\n\n  return 0;\n}\n\n/**\n * 获取上一个可用标签页的索引\n *\n * @param {number} selectedIndex\n * @param {string[]} tabs\n * @param {(tabId: string) => { disabled?: boolean }} getTabProps\n * @returns\n */\nfunction getPrevTabIndex(\n  selectedIndex: number,\n  tabs: string[],\n  getTabProps: (tabId: string) => { disabled?: boolean },\n): number {\n  let i = selectedIndex - 1;\n  for (; i > 0; i -= 1) {\n    const tabId = tabs[i];\n    const tabDisabled = getTabProps(tabId).disabled;\n    if (!tabDisabled) {\n      return i;\n    }\n  }\n\n  if (selectedIndex === 0) {\n    return getPrevTabIndex(tabs.length, tabs, getTabProps);\n  }\n\n  return 0;\n}\n\n/**\n * 头部选项卡项组件\n */\nfunction TabHeaderItem({\n  title,\n  className,\n  style,\n  disabled,\n  id,\n  ...rest\n}: Props) {\n  const tabListContext = useContext(TabListContext);\n  const tabHeaderContext = useContext(TabHeaderContext);\n  const [tabId, index] = useTabRegister({ disabled });\n  const selectedIndex = tabListContext ? tabListContext.selectedIndex : -1;\n  const isActive = index === selectedIndex;\n\n  const rippleRef = useRipple<HTMLDivElement>(undefined, disabled);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      if (tabHeaderContext) {\n        tabHeaderContext.onSelect(index, event);\n      }\n    },\n    [index, tabHeaderContext],\n  );\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const { keyCode } = event;\n      if (tabListContext && tabHeaderContext) {\n        const { getTabs, getTabProps } = tabListContext;\n        const tabs = getTabs();\n        if (keyCode === RIGHT_KEY_CODE || keyCode === BOTTOM_KEY_CODE) {\n          event.stopPropagation();\n          event.preventDefault();\n          const nextTab = getNextTabIndex(selectedIndex, tabs, getTabProps);\n          tabHeaderContext.onSelect(nextTab, event);\n        } else if (keyCode === LEFT_KEY_CODE || keyCode === TOP_KEY_CODE) {\n          event.stopPropagation();\n          event.preventDefault();\n          const prevTab = getPrevTabIndex(selectedIndex, tabs, getTabProps);\n          tabHeaderContext.onSelect(prevTab, event);\n        }\n      }\n    },\n    [selectedIndex, tabHeaderContext, tabListContext],\n  );\n\n  if (index === -1) {\n    return null;\n  }\n\n  return (\n    <TabHeaderItemWrapper\n      className={classNames('sinoui-tab', className, {\n        'sinoui-tab--active': isActive,\n        'sinoui-tab--disabled': disabled,\n      })}\n      style={style}\n      disabled={disabled}\n      active={isActive}\n      onClick={disabled ? undefined : handleClick}\n      ref={rippleRef}\n      data-testid={`tab-header-item-${index}`}\n      role=\"tab\"\n      tabIndex={isActive ? 0 : -1}\n      aria-disabled={disabled}\n      aria-selected={isActive}\n      onKeyDown={disabled ? undefined : handleKeyDown}\n      id={id || tabId}\n      {...rest}\n    >\n      {title}\n    </TabHeaderItemWrapper>\n  );\n}\n\nexport default TabHeaderItem;\n","import TabHeaderItem from './TabHeaderItem';\n\nexport default TabHeaderItem;\n","import styled, { css } from 'styled-components';\n\ninterface Props {\n  active: boolean;\n}\n\nconst hiddenCss = css`\n  height: 0px;\n`;\n\nconst TabPanelWrapper = styled.div<Props>`\n  width: 100%;\n  flex-shrink: 0;\n  overflow: auto;\n\n  ${(props) => !props.active && hiddenCss};\n`;\n\nexport default TabPanelWrapper;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useContext, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport TabPanelWrapper from './TabPanelWrapper';\nimport TabListContext from '../TabListContext';\nimport useTabRegister from '../commons/useTabRegister';\nimport TabContentContext from '../TabContentContext';\n\ninterface TabPanelProps {\n  children: React.ReactNode;\n  /**\n   * 指定自定义样式名\n   */\n  className?: string;\n  /**\n   * 指定自定义样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 指定标签 id\n   */\n  tabId?: string;\n  /**\n   * 默认情况下，只有当前标签内容会渲染到 DOM 中。设置为 `true`，会在组件初始化时立即将标签内容渲染到 DOM 中。\n   */\n  forceRenderContent?: boolean;\n  /**\n   * 设置启用标签面板渲染到 DOM 的内容缓存。默认为 `true`。\n   */\n  cacheable?: boolean;\n}\n\n/**\n * 获取是否启用标签渲染缓存特性的hook。\n *\n * @param isCacheable 是否启用缓存特性的属性\n */\nfunction useIsCacheable(isCacheable?: boolean) {\n  const tabContentContext = useContext(TabContentContext);\n\n  if (typeof isCacheable === 'boolean') {\n    return isCacheable;\n  }\n\n  if (tabContentContext && typeof tabContentContext.cacheable === 'boolean') {\n    return tabContentContext.cacheable;\n  }\n\n  return true;\n}\n\n/**\n * 判断是否需要渲染标签面板的hook。\n *\n * @param isCacheable 是否启用了标签面板内容缓存\n * @param isActive 是否是当前标签面板\n */\nfunction useIsNeedRendered(isCacheable: boolean, isActive: boolean) {\n  const isNeedRenderedRef = useRef(false);\n\n  const isNeedRendered = isActive || (isCacheable && isNeedRenderedRef.current);\n\n  useEffect(() => {\n    if (isActive && isCacheable) {\n      isNeedRenderedRef.current = true;\n    }\n  });\n\n  return isNeedRendered;\n}\n\n/**\n * 判断是否是当前面板面板的hook。\n *\n * @param index 标签面板索引位置\n */\nfunction useIsActive(index: number) {\n  const context = useContext(TabListContext);\n  const selectedIndex = context ? context.selectedIndex : 0;\n\n  return index === selectedIndex;\n}\n\n/**\n * 判断是否强制渲染标签面板内容的hook。\n *\n * @param isForceRenderContent 是否强制渲染的属性\n */\nfunction useIsForceRenderContent(isForceRenderContent?: boolean) {\n  const tabContentContext = useContext(TabContentContext);\n\n  if (typeof isForceRenderContent === 'boolean') {\n    return isForceRenderContent;\n  }\n  return !!tabContentContext && tabContentContext.forceRenderTabPanel;\n}\n\n/**\n * 获取即将渲染的标签面板内容\n *\n * @param isActive 是否是当前标签\n * @param children 内容\n */\nfunction useRenderingChildren(isActive: boolean, children?: React.ReactNode) {\n  const activeChildren = useRef(children);\n  const renderingChildren = isActive ? children : activeChildren.current;\n\n  useEffect(() => {\n    if (isActive) {\n      activeChildren.current = children;\n    }\n  });\n\n  return renderingChildren;\n}\n\n/**\n * 标签页面板组件\n */\nexport default function TabPanel(props: TabPanelProps) {\n  const {\n    children,\n    className,\n    forceRenderContent,\n    cacheable,\n    ...other\n  } = props;\n  const [tabId, index] = useTabRegister();\n  const isActive = useIsActive(index);\n  const isCacheable = useIsCacheable(cacheable);\n  const isNeedRendered = useIsNeedRendered(isCacheable, isActive);\n  const isForceRenderContent = useIsForceRenderContent(forceRenderContent);\n  const renderingChildren = useRenderingChildren(isActive, children);\n\n  if (index === -1) {\n    return null;\n  }\n\n  return (\n    <TabPanelWrapper\n      data-testid={`tab-panel-${index}`}\n      role=\"tabpanel\"\n      aria-hidden={!isActive}\n      aria-labelledby={props.tabId}\n      id={tabId}\n      {...other}\n      className={classNames(\n        'sinoui-tab-panel',\n        {\n          'sinoui-tab-panel--active': isActive,\n        },\n        className,\n      )}\n      active={isActive}\n    >\n      {isNeedRendered || isForceRenderContent ? renderingChildren : null}\n    </TabPanelWrapper>\n  );\n}\n","import TabPanel from './TabPanel';\n\nexport default TabPanel;\n","import { useContext } from 'react';\nimport TabHeaderContext from '../TabHeaderContext';\n\nfunction useInTabHeader() {\n  const context = useContext(TabHeaderContext);\n\n  return !!context;\n}\n\nexport default useInTabHeader;\n","import { useContext } from 'react';\nimport TabContentContext from '../TabContentContext';\n\nfunction useInTabContent() {\n  const context = useContext(TabContentContext);\n\n  return !!context;\n}\n\nexport default useInTabContent;\n","import React from 'react';\nimport useInTabHeader from './useInTabHeader';\nimport useInTabContent from './useInTabContent';\nimport TabHeaderItem from '../tab-header-item';\nimport TabPanel from '../tab-panel';\n\ninterface Props {\n  /**\n   * 指定标签页标题。\n   */\n  title: React.ReactNode;\n  /**\n   * 指定标签页内容。\n   */\n  children: React.ReactNode;\n\n  /**\n   * 设置为 `true` 则禁用标签。默认为 `false`。\n   */\n  disabled?: boolean;\n\n  /**\n   * 指定标签id\n   */\n  id?: string;\n\n  /**\n   * 默认情况下，只有当前标签的内容会渲染到 DOM 中。设置为 `true`，则组件初始化时立即渲染标签面板内容到 DOM 中。\n   */\n  forceRenderTabPanel?: boolean;\n}\n\n/**\n * 标签页组件\n *\n * @param {Props} props\n * @returns\n */\nfunction Tab({ children, title, disabled, id, forceRenderTabPanel }: Props) {\n  const isInTabHeader = useInTabHeader();\n  const isInTabContent = useInTabContent();\n\n  if (isInTabHeader) {\n    return <TabHeaderItem title={title} disabled={disabled} id={id} />;\n  }\n\n  if (isInTabContent) {\n    return (\n      <TabPanel tabId={id} forceRenderContent={forceRenderTabPanel}>\n        {children}\n      </TabPanel>\n    );\n  }\n\n  return null;\n}\n\nexport default Tab;\n","let count = 0;\n\n/**\n * 生成新的标签id\n */\nfunction uuid() {\n  const id = count;\n  count += 1;\n  return `tab-${id}`;\n}\n\n/**\n *  重置计数器\n */\nexport function reset() {\n  count = 0;\n}\n\nexport default uuid;\n","import Tab from './Tab';\n\nexport default Tab;\n","import TabHeader from './components/tab-header';\nimport TabHeaderItem from './components/tab-header-item';\nimport TabContent from './components/tab-content';\nimport TabPanel from './components/tab-panel';\nimport TabGroup from './components/TabGroup';\nimport Tab from './components/tab';\nimport { reset } from './helpers/uuid';\n\nexport {\n  Tab,\n  TabHeader,\n  TabHeaderItem,\n  TabContent,\n  TabPanel,\n  reset as resetIdCounter,\n};\n\nexport default TabGroup;\n"],"sourceRoot":""}