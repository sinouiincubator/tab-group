{"version":3,"sources":["E:/workspaces/tab-group/docs/apis/TabHeaderItem.mdx","E:/workspaces/tab-group/src/components/TabHeaderContext.ts","E:/workspaces/tab-group/src/components/TabListContext.ts","E:/workspaces/tab-group/src/components/commons/useTabId.ts","E:/workspaces/tab-group/src/components/commons/useTabRegister.ts","E:/workspaces/tab-group/src/components/tab-header-item/TabHeaderItemWrapper.tsx","E:/workspaces/tab-group/src/components/tab-header-item/TabHeaderItem.tsx","E:/workspaces/tab-group/src/constants.ts","E:/workspaces/tab-group/src/helpers/getNextTabIndex.ts","E:/workspaces/tab-group/src/helpers/getPrevTabIndex.ts","E:/workspaces/tab-group/src/helpers/useRefValue.ts","E:/workspaces/tab-group/src/helpers/uuid.ts"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","of","TabHeaderItem","isMDXComponent","TabHeaderContext","React","createContext","TabListContext","useTabId","useMemo","uuid","useTabRegister","context","useContext","tabId","index","register","unregisterRef","useRefValue","unregister","undefined","useEffect","current","hoverCss","css","activeCss","disabledCss","TabHeaderItemWrapper","styled","div","disabled","active","color","getColorFromTheme","theme","palette","primary","text","getTextColor","title","className","style","id","rest","tabListContext","tabHeaderContext","selectedIndex","isActive","rippleRef","useRipple","handleClick","useCallback","event","onSelect","handleKeyDown","keyCode","getTabs","getTabProps","tabs","RIGHT_KEY_CODE","BOTTOM_KEY_CODE","stopPropagation","preventDefault","nextTab","getNextTabIndex","LEFT_KEY_CODE","TOP_KEY_CODE","prevTab","getPrevTabIndex","classNames","onClick","ref","data-testid","role","tabIndex","aria-disabled","aria-selected","onKeyDown","textColor","DEBOUNCE_WAIT","i","length","value","useRef","count","reset"],"mappings":"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","file":"static/js/docs-apis-tab-header-item.c759c0aa.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport TabHeaderItem from '../../src/components/tab-header-item/TabHeaderItem';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"tabheaderitem\"\n    }}>{`TabHeaderItem`}</h1>\n    <Props of={TabHeaderItem} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from 'react';\n\ninterface TabHeaderContextState {\n  /**\n   * 是否是密集模式\n   */\n  dense?: boolean;\n\n  /**\n   * 变更当前选项卡\n   */\n  onSelect: (\n    tabIndex: number,\n    event: React.MouseEvent | React.KeyboardEvent,\n  ) => void;\n  /**\n   * 标签文本颜色\n   */\n  textColor?: string;\n}\n\n/**\n * 标签头部上下文\n */\nconst TabHeaderContext = React.createContext<TabHeaderContextState | null>(\n  null,\n);\n\nexport default TabHeaderContext;\n","import React from 'react';\n\nexport interface TabProps {\n  disabled?: boolean;\n}\n\nexport interface TabListContextState {\n  /**\n   * 注册标签页\n   */\n  register: (tabId: string, props: TabProps) => number;\n  /**\n   * 取消注册标签页\n   */\n  unregister: (tabId: string) => void;\n  /**\n   * 当前选中标签页的索引。索引从 0 开始。\n   */\n  selectedIndex: number;\n  /**\n   * 获取所有标签页的id\n   */\n  getTabs(): string[];\n  getTabProps(tabId: string): TabProps;\n}\n\n/**\n * 标签列表上下文\n */\nconst TabListContext = React.createContext<TabListContextState | null>(null);\n\nexport default TabListContext;\n","import { useMemo } from 'react';\nimport uuid from '../../helpers/uuid';\n\n/**\n * 生成标签id\n */\nfunction useTabId() {\n  const tabId = useMemo(uuid, []);\n\n  return tabId;\n}\n\nexport default useTabId;\n","import { useContext, useEffect } from 'react';\nimport useRefValue from '../../helpers/useRefValue';\nimport TabListContext, { TabProps } from '../TabListContext';\nimport useTabId from './useTabId';\n\n/**\n * 注册标签页\n */\n\nfunction useTabRegister(props?: TabProps): [string, number] {\n  const context = useContext(TabListContext);\n  const tabId = useTabId();\n  const index = context ? context.register(tabId, props || {}) : -1;\n  const unregisterRef = useRefValue(context ? context.unregister : undefined);\n\n  useEffect(() => {\n    const unregister = unregisterRef.current;\n\n    if (unregister) {\n      return () => unregister(tabId);\n    }\n    return undefined;\n  }, [tabId, unregisterRef]);\n\n  return [tabId, index];\n}\n\nexport default useTabRegister;\n","import styled, { css } from 'styled-components';\nimport { getColorFromTheme } from 'sinoui-components/utils/colors';\nimport { Theme } from '@sinoui/theme';\n\ninterface TabHeaderItemWrapperProps {\n  disabled?: boolean;\n  active?: boolean;\n  color?: string;\n  theme: Theme;\n}\n\nconst getTextColor = (props: TabHeaderItemWrapperProps) => {\n  const { disabled, active, color } = props;\n\n  if (color === 'inherit') {\n    return color;\n  }\n  if (active) {\n    return getColorFromTheme(props, props.theme.palette.primary[500]);\n  }\n\n  if (disabled) {\n    return props.theme.palette.text.disabled;\n  }\n\n  return props.theme.palette.text.primary;\n};\n\nconst hoverCss = css`\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst activeCss = css`\n  opacity: 1;\n`;\n\nconst disabledCss = css`\n  cursor: not-allowed;\n`;\n\nconst TabHeaderItemWrapper = styled.div<TabHeaderItemWrapperProps>`\n  height: 48px;\n  padding: 0 24px;\n  cursor: pointer;\n  box-sizing: border-box;\n  opacity: 0.6;\n  text-align: center;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap; /* 不换行显示 */\n  color: ${(props) => getTextColor(props)};\n  outline: none;\n  user-select: none;\n  flex-shrink: 0;\n  letter-spacing: 1.25px;\n  font-weight: 500;\n  position: relative;\n  white-space: nowrap;\n  transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n    color 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${(props) => !props.disabled && hoverCss};\n  ${(props) => props.disabled && disabledCss};\n  ${(props) => props.active && activeCss};\n`;\n\nexport default TabHeaderItemWrapper;\n","import React, { useContext, useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useRipple } from '@sinoui/ripple';\nimport getNextTabIndex from '../../helpers/getNextTabIndex';\nimport getPrevTabIndex from '../../helpers/getPrevTabIndex';\nimport {\n  LEFT_KEY_CODE,\n  TOP_KEY_CODE,\n  RIGHT_KEY_CODE,\n  BOTTOM_KEY_CODE,\n} from '../../constants';\nimport TabHeaderItemWrapper from './TabHeaderItemWrapper';\nimport TabListContext from '../TabListContext';\nimport useTabRegister from '../commons/useTabRegister';\nimport TabHeaderContext from '../TabHeaderContext';\n\ninterface Props {\n  /**\n   * 标签标题\n   */\n  title: React.ReactNode;\n  /**\n   * 指定自定义样式名\n   */\n  className?: string;\n  /**\n   * 指定自定义样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 设置为 `true`，则禁用标签。\n   */\n  disabled?: boolean;\n  /**\n   * 指定标签页id\n   */\n  id?: string;\n}\n\n/**\n * 头部选项卡项组件\n */\nfunction TabHeaderItem({\n  title,\n  className,\n  style,\n  disabled,\n  id,\n  ...rest\n}: Props) {\n  const tabListContext = useContext(TabListContext);\n  const tabHeaderContext = useContext(TabHeaderContext);\n  const [tabId, index] = useTabRegister({ disabled });\n  const selectedIndex = tabListContext ? tabListContext.selectedIndex : -1;\n  const isActive = index === selectedIndex;\n\n  const rippleRef = useRipple<HTMLDivElement>(undefined, disabled);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      if (tabHeaderContext) {\n        tabHeaderContext.onSelect(index, event);\n      }\n    },\n    [index, tabHeaderContext],\n  );\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const { keyCode } = event;\n      if (tabListContext && tabHeaderContext) {\n        const { getTabs, getTabProps } = tabListContext;\n        const tabs = getTabs();\n        if (keyCode === RIGHT_KEY_CODE || keyCode === BOTTOM_KEY_CODE) {\n          event.stopPropagation();\n          event.preventDefault();\n          const nextTab = getNextTabIndex(selectedIndex, tabs, getTabProps);\n          tabHeaderContext.onSelect(nextTab, event);\n        } else if (keyCode === LEFT_KEY_CODE || keyCode === TOP_KEY_CODE) {\n          event.stopPropagation();\n          event.preventDefault();\n          const prevTab = getPrevTabIndex(selectedIndex, tabs, getTabProps);\n          tabHeaderContext.onSelect(prevTab, event);\n        }\n      }\n    },\n    [selectedIndex, tabHeaderContext, tabListContext],\n  );\n\n  if (index === -1) {\n    return null;\n  }\n\n  return (\n    <TabHeaderItemWrapper\n      className={classNames('sinoui-tab', className, {\n        'sinoui-tab--active': isActive,\n        'sinoui-tab--disabled': disabled,\n      })}\n      style={style}\n      disabled={disabled}\n      active={isActive}\n      onClick={disabled ? undefined : handleClick}\n      ref={rippleRef}\n      data-testid={`tab-header-item-${index}`}\n      role=\"tab\"\n      tabIndex={isActive ? 0 : -1}\n      aria-disabled={disabled}\n      aria-selected={isActive}\n      onKeyDown={disabled ? undefined : handleKeyDown}\n      color={tabHeaderContext ? tabHeaderContext.textColor : undefined}\n      id={id || tabId}\n      {...rest}\n    >\n      {title}\n    </TabHeaderItemWrapper>\n  );\n}\n\nexport default TabHeaderItem;\n","export const LEFT_KEY_CODE = 37; // 方向键左\n\nexport const TOP_KEY_CODE = 38; // 方向键上\n\nexport const RIGHT_KEY_CODE = 39; // 方向键右\n\nexport const BOTTOM_KEY_CODE = 40; // 方向键下\n\n/**\n * 防抖函数的延时时长\n */\nexport const DEBOUNCE_WAIT = 166; // 10 帧，166 毫秒\n","/**\n * 获取下一个可用的tab索引\n *\n * @param {number} selectedIndex\n * @param {string[]} tabs\n * @param {(tabId: string) => { disabled?: boolean }} getTabProps\n * @returns\n */\nexport default function getNextTabIndex(\n  selectedIndex: number,\n  tabs: string[],\n  getTabProps: (tabId: string) => { disabled?: boolean },\n): number {\n  let i = selectedIndex + 1;\n  for (; i < tabs.length; i += 1) {\n    const tabId = tabs[i];\n    const tabDisabled = getTabProps(tabId).disabled;\n    if (!tabDisabled) {\n      return i;\n    }\n  }\n\n  if (i === tabs.length) {\n    return getNextTabIndex(-1, tabs, getTabProps);\n  }\n\n  return 0;\n}\n","/**\n * 获取上一个可用标签页的索引\n *\n * @param {number} selectedIndex\n * @param {string[]} tabs\n * @param {(tabId: string) => { disabled?: boolean }} getTabProps\n * @returns\n */\nexport default function getPrevTabIndex(\n  selectedIndex: number,\n  tabs: string[],\n  getTabProps: (tabId: string) => { disabled?: boolean },\n): number {\n  let i = selectedIndex - 1;\n  for (; i > 0; i -= 1) {\n    const tabId = tabs[i];\n    const tabDisabled = getTabProps(tabId).disabled;\n    if (!tabDisabled) {\n      return i;\n    }\n  }\n\n  if (selectedIndex === 0) {\n    return getPrevTabIndex(tabs.length, tabs, getTabProps);\n  }\n\n  return 0;\n}\n","import { useRef } from 'react';\n\n/**\n * 使用同步的“变量”\n */\nfunction useRefValue<T>(value: T) {\n  const ref = useRef(value);\n\n  ref.current = value;\n\n  return ref;\n}\n\nexport default useRefValue;\n","let count = 0;\n\n/**\n * 生成新的标签id\n */\nfunction uuid() {\n  const id = count;\n  count += 1;\n  return `tab-${id}`;\n}\n\n/**\n *  重置计数器\n */\nexport function reset() {\n  count = 0;\n}\n\nexport default uuid;\n"],"sourceRoot":""}