{"version":3,"sources":["E:/workspaces/tab-group/docs/custom-style.mdx","E:/workspaces/tab-group/src/components/TabPanelContext.ts","E:/workspaces/tab-group/src/components/commons/useTabId.ts","E:/workspaces/tab-group/src/components/commons/useTabRegister.ts","E:/workspaces/tab-group/src/components/commons/useTabState.ts","E:/workspaces/tab-group/src/components/tab-header-item/TabHeaderItemWrapper.tsx","E:/workspaces/tab-group/src/components/tab-header-item/TabHeaderItem.tsx","E:/workspaces/tab-group/src/components/tab-header-item/index.ts","E:/workspaces/tab-group/src/components/tab-panel/TabPanelWrapper.tsx","E:/workspaces/tab-group/src/components/tab-panel/TabPanel.tsx","E:/workspaces/tab-group/src/components/tab-panel/index.ts","E:/workspaces/tab-group/src/components/tab/useInTabHeader.ts","E:/workspaces/tab-group/src/components/tab/useInTabContent.ts","E:/workspaces/tab-group/src/components/tab/Tab.tsx","E:/workspaces/tab-group/src/helpers/getNextTabIndex.ts","E:/workspaces/tab-group/src/helpers/getPrevTabIndex.ts","E:/workspaces/tab-group/src/helpers/uuid.ts","E:/workspaces/tab-group/src/components/tab/index.ts","E:/workspaces/tab-group/src/index.ts"],"names":["name","layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","useState","useCallback","Playground","styled","AppBar","TabGroup","Tab","TabHeader","TabContent","TabHeaderItem","TabPanel","CustomTabGroup","background","minHeight","alignItems","paddingLeft","paddingRight","display","color","borderTopLeftRadius","borderTopRightRadius","overflow","opacity","content","position","left","height","width","zIndex","marginTop","backgroundColor","borderless","title","justifyContent","theme","palette","primary","textColor","inkBarColor","active","setActive","simple","selectedIndex","onSelect","style","isMDXComponent","TabPanelContext","React","createContext","useTabId","useMemo","uuid","useTabRegister","context","useContext","TabListContext","tabId","index","register","unregisterRef","useRefValue","unregister","undefined","useEffect","current","useTabState","tabListContext","tabContentContext","TabContentContext","isFirst","setIsFirst","isLast","setIsLast","tabs","getTabs","isFirstState","isLastState","length","next","event","getTabProps","nextTab","getNextTabIndex","prev","prevTab","getPrevTabIndex","hoverCss","css","activeCss","disabledCss","TabHeaderItemWrapper","div","disabled","getColorFromTheme","text","getTextColor","className","id","rest","tabHeaderContext","TabHeaderContext","isActive","rippleRef","useRipple","handleClick","handleKeyDown","keyCode","RIGHT_KEY_CODE","BOTTOM_KEY_CODE","stopPropagation","preventDefault","LEFT_KEY_CODE","TOP_KEY_CODE","classNames","onClick","ref","data-testid","role","tabIndex","aria-disabled","aria-selected","onKeyDown","hiddenCss","TabPanelWrapper","children","forceRenderContent","cacheable","other","useIsActive","isNeedRendered","isCacheable","isNeedRenderedRef","useRef","useIsNeedRendered","useIsCacheable","isForceRenderContent","forceRenderTabPanel","useIsForceRenderContent","renderingChildren","activeChildren","useRenderingChildren","Provider","value","aria-hidden","aria-labelledby","useInTabHeader","useInTabContent","isInTabHeader","isInTabContent","i","count","reset"],"mappings":"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","file":"static/js/docs-custom-style.91debc83.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useState, useCallback } from 'react';\nimport { Playground } from 'docz';\nimport styled from 'styled-components';\nimport AppBar from 'sinoui-components/AppBar';\nimport TabGroup, {\n  Tab,\n  TabHeader,\n  TabContent,\n  TabHeaderItem,\n  TabPanel,\n} from '../src';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst CustomTabGroup = makeShortcode(\"CustomTabGroup\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"样式定制\"\n    }}>{`样式定制`}</h1>\n    <p>{`TabGroup 采用 `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.styled-components.com/\"\n      }}>{`styled-components`}</a>{` 封装的组件样式，并且有完整的 css class。我们可以采取几乎任何主流方式来定制 TabGroup 的样式。`}</p>\n    <p>{`要想定制样式，先了解一下组件的 DOM 结构和对应的 css class。`}</p>\n    <h2 {...{\n      \"id\": \"dom-结构与-css-class\"\n    }}>{`DOM 结构与 css class`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"sinoui-tab-group\">\n  <div class=\"sinoui-tab-header\">\n    <!--向前滚动按钮-->\n    <div class=\"sinoui-tab-header-scroll-button\"></div>\n\n    <div class=\"sinoui-tab-list\">\n      <div class=\"sinoui-tab sinoui-tab--active\">\n        <div class=\"sinoui-tab__content\">\n          标签标题1\n        </div>\n      </div>\n      <div class=\"sinoui-tab sinoui-tab--disabled\">\n        <div class=\"sinoui-tab__content\">\n          标签标题2\n        </div>\n      </div>\n      <div class=\"sinoui-tab\">\n        <div class=\"sinoui-tab__content\">\n          标签标题3\n        </div>\n      </div>\n      <!--...-->\n\n      <!--当前标签选项指示器-->\n      <div class=\"sinoui-ink-bar\"></div>\n    </div>\n\n    <!--向后滚动按钮-->\n    <div class=\"sinoui-tab-header-scroll-button\"></div>\n\n    <!--附加内容-->\n    <div class=\"sinoui-tab-header-extra-content\"></div>\n  </div>\n  <div class=\"sinoui-tab-content\">\n    <div class=\"sinoui-tab-panel-list\">\n      <div class=\"sinoui-tab-panel sinoui-tab-panel--active\">标签内容1</div>\n      <div class=\"sinoui-tab-panel\">标签内容2</div>\n      <div class=\"sinoui-tab-panel\">标签内容3</div>\n      <!--...-->\n    </div>\n  </div>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"定制标签样式（chrome-tabs）\"\n    }}>{`定制标签样式（Chrome Tabs）`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport styled from 'styled-components';\nimport TabGroup, { Tab } from '../src';\n\nconst CustomTabGroup = styled(TabGroup)\\`\n  .sinoui-tab-header {\n    background: rgb(230, 232, 235);\n    min-height: 64px;\n    align-items: flex-end;\n  }\n\n  .sinoui-tab-list {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n\n  .sinoui-ink-bar {\n    display: none;\n  }\n\n  .sinoui-tab {\n    color: rgba(0, 0, 0, 0.87);\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    overflow: hidden;\n\n    &:not(:first-of-type) {\n      &::before {\n        content: ' ';\n        position: absolute;\n        left: 0;\n        display: block;\n        height: 20px;\n        width: 1px;\n        zindex: 1;\n        margintop: 4px;\n        background-color: rgb(158, 158, 158);\n      }\n    }\n\n    &:hover {\n      background: 'rgb(242,242,242)';\n\n      &::before {\n        opacity: 0;\n      }\n\n      & + .sinoui-tab::before {\n        opacity: 0;\n      }\n    }\n  }\n\n  .sinoui-tab--active {\n    background: white;\n\n    &::before {\n      opacity: 0;\n    }\n\n    &:hover {\n      background: white;\n    }\n\n    & + .sinoui-tab::before {\n      opacity: 0;\n    }\n  }\n\n  .sinoui-ripple-layout {\n    display: none;\n  }\n\\`;\n\nfunction CustomInkbarDemo() {\n  return (\n    <CustomTabGroup>\n      <Tab title=\"标签1\">标签内容1</Tab>\n      <Tab title=\"标签2\">标签内容2</Tab>\n      <Tab title=\"标签3\">标签内容3</Tab>\n      <Tab title=\"标签4\">标签内容4</Tab>\n      <Tab title=\"标签5\">标签内容5</Tab>\n      <Tab title=\"标签6\">标签内容6</Tab>\n    </CustomTabGroup>\n  );\n}\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const CustomTabGroup = styled(TabGroup)(props => ({\\n    \\'.sinoui-tab-header\\': {\\n      background: \\'rgb(230, 232, 235)\\',\\n      minHeight: 64,\\n      alignItems: \\'flex-end\\',\\n    },\\n    \\'.sinoui-tab-list\\': {\\n      paddingLeft: 24,\\n      paddingRight: 24,\\n    },\\n    \\'.sinoui-ink-bar\\': {\\n      display: \\'none\\',\\n    },\\n    \\'.sinoui-tab\\': {\\n      color: \\'rgba(0,0,0,0.87)\\',\\n      borderTopLeftRadius: 8,\\n      borderTopRightRadius: 8,\\n      overflow: \\'hidden\\',\\n      \\'&:hover\\': {\\n        background: \\'rgb(242,242,242)\\',\\n\\n        \\'&::before\\': {\\n          opacity: 0,\\n        },\\n\\n        \\'& + .sinoui-tab::before\\': {\\n          opacity: 0,\\n        },\\n      },\\n    },\\n    \\'.sinoui-tab--active\\': {\\n      background: \\'white\\',\\n\\n      \\'&::before\\': {\\n        opacity: 0,\\n      },\\n\\n      \\'&:hover\\': {\\n        background: \\'white\\',\\n      },\\n\\n      \\'& + .sinoui-tab::before\\': {\\n        opacity: 0,\\n      },\\n    },\\n    \\'.sinoui-tab:not(:first-of-type)\\': {\\n      \\'&::before\\': {\\n        content: \\'\\\" \\\"\\',\\n        position: \\'absolute\\',\\n        left: 0,\\n        display: \\'block\\',\\n        height: 20,\\n        width: 1,\\n        zIndex: 1,\\n        marginTop: 4,\\n        backgroundColor: \\'rgb(158, 158, 158)\\',\\n      },\\n    },\\n    \\'.sinoui-ripple-layout\\': {\\n      display: \\'none\\',\\n    },\\n  }))\\n\\n  return (\\n    <CustomTabGroup borderless>\\n      <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n      <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n      <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n      <Tab title=\\\"标签4\\\">标签内容4</Tab>\\n      <Tab title=\\\"标签5\\\">标签内容5</Tab>\\n      <Tab title=\\\"标签6\\\">标签内容6</Tab>\\n    </CustomTabGroup>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      styled,\n      AppBar,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabContent,\n      TabHeaderItem,\n      TabPanel\n    }} mdxType=\"Playground\">\n  {() => {\n        const CustomTabGroup = styled(TabGroup)(props => ({\n          '.sinoui-tab-header': {\n            background: 'rgb(230, 232, 235)',\n            minHeight: 64,\n            alignItems: 'flex-end'\n          },\n          '.sinoui-tab-list': {\n            paddingLeft: 24,\n            paddingRight: 24\n          },\n          \".sinoui-ink-bar\": {\n            display: 'none'\n          },\n          \".sinoui-tab\": {\n            color: 'rgba(0,0,0,0.87)',\n            borderTopLeftRadius: 8,\n            borderTopRightRadius: 8,\n            overflow: 'hidden',\n            \"&:hover\": {\n              background: 'rgb(242,242,242)',\n              \"&::before\": {\n                opacity: 0\n              },\n              \"& + .sinoui-tab::before\": {\n                opacity: 0\n              }\n            }\n          },\n          \".sinoui-tab--active\": {\n            background: 'white',\n            \"&::before\": {\n              opacity: 0\n            },\n            \"&:hover\": {\n              background: 'white'\n            },\n            \"& + .sinoui-tab::before\": {\n              opacity: 0\n            }\n          },\n          \".sinoui-tab:not(:first-of-type)\": {\n            \"&::before\": {\n              content: '\" \"',\n              position: \"absolute\",\n              left: 0,\n              display: \"block\",\n              height: 20,\n              width: 1,\n              zIndex: 1,\n              marginTop: 4,\n              backgroundColor: 'rgb(158, 158, 158)'\n            }\n          },\n          \".sinoui-ripple-layout\": {\n            display: 'none'\n          }\n        }));\n        return <CustomTabGroup borderless mdxType=\"CustomTabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n    <Tab title=\"标签4\" mdxType=\"Tab\">标签内容4</Tab>\n    <Tab title=\"标签5\" mdxType=\"Tab\">标签内容5</Tab>\n    <Tab title=\"标签6\" mdxType=\"Tab\">标签内容6</Tab>\n  </CustomTabGroup>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"定制指示器样式\"\n    }}>{`定制指示器样式`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport styled from 'styled-components';\nimport TabGroup, { Tab } from '../src';\n\nconst CustomTabGroup = styled(TabGroup)\\`\n  .sinoui-ink-bar {\n    background: transparent;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    ::after {\n      content: '';\n      display: block;\n      width: 30px;\n      height: 2px;\n      background: \\${(props) => props.theme.palette.primary[500]};\n    }\n  }\n\\`;\n\nfunction CustomInkbarDemo() {\n  return (\n    <CustomTabGroup>\n      <Tab title=\"标签1\">标签内容1</Tab>\n      <Tab title=\"标签2\">标签内容2</Tab>\n      <Tab title=\"标签3\">标签内容3</Tab>\n    </CustomTabGroup>\n  );\n}\n`}</code></pre>\n    <Playground __position={1} __code={'() => {\\n  const CustomTabGroup = styled(TabGroup)(props => ({\\n    \\'.sinoui-ink-bar\\': {\\n      background: \\'transparent\\',\\n      display: \\'flex\\',\\n      justifyContent: \\'center\\',\\n      alignItems: \\'center\\',\\n      \\'::after\\': {\\n        content: \\'\\\"\\\"\\',\\n        display: \\'block\\',\\n        width: 30,\\n        height: 2,\\n        background: props.theme.palette.primary[500],\\n      },\\n    },\\n  }))\\n  return (\\n    <CustomTabGroup>\\n      <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n      <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n      <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n    </CustomTabGroup>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      styled,\n      AppBar,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabContent,\n      TabHeaderItem,\n      TabPanel\n    }} mdxType=\"Playground\">\n  {() => {\n        const CustomTabGroup = styled(TabGroup)(props => ({\n          '.sinoui-ink-bar': {\n            background: 'transparent',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '::after': {\n              content: '\"\"',\n              display: 'block',\n              width: 30,\n              height: 2,\n              background: props.theme.palette.primary[500]\n            }\n          }\n        }));\n        return <CustomTabGroup mdxType=\"CustomTabGroup\">\n  <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n  <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n  <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n        </CustomTabGroup>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"定制文本和指示条颜色\"\n    }}>{`定制文本和指示条颜色`}</h2>\n    <Playground __position={2} __code={'<TabGroup textColor=\\\"accent\\\" inkBarColor=\\\"warning\\\">\\n  <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n  <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n  <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n</TabGroup>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      styled,\n      AppBar,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabContent,\n      TabHeaderItem,\n      TabPanel\n    }} mdxType=\"Playground\">\n  <TabGroup textColor=\"accent\" inkBarColor=\"warning\" mdxType=\"TabGroup\">\n    <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n    <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n    <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n  </TabGroup>\n    </Playground>\n    <Playground __position={3} __code={'() => {\\n  const [active, setActive] = useState(0)\\n  return (\\n    <TabGroup simple>\\n      <AppBar position=\\\"static\\\">\\n        <TabHeader\\n          selectedIndex={active}\\n          onSelect={setActive}\\n          style={{ width: \\'100%\\' }}\\n          inkBarColor=\\\"accent\\\"\\n          textColor=\\\"inherit\\\"\\n          borderless\\n        >\\n          <TabHeaderItem title=\\\"标签1\\\" />\\n          <TabHeaderItem title=\\\"标签2\\\" />\\n          <TabHeaderItem title=\\\"标签3\\\" />\\n        </TabHeader>\\n      </AppBar>\\n      <TabContent selectedIndex={active}>\\n        <TabPanel>标签内容1</TabPanel>\\n        <TabPanel>标签内容2</TabPanel>\\n        <TabPanel>标签内容3</TabPanel>\\n      </TabContent>\\n    </TabGroup>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useCallback,\n      Playground,\n      styled,\n      AppBar,\n      TabGroup,\n      Tab,\n      TabHeader,\n      TabContent,\n      TabHeaderItem,\n      TabPanel\n    }} mdxType=\"Playground\">\n  {() => {\n        const [active, setActive] = useState(0);\n        return <TabGroup simple mdxType=\"TabGroup\">\n        <AppBar position=\"static\" mdxType=\"AppBar\">\n          <TabHeader selectedIndex={active} onSelect={setActive} style={{\n              width: '100%'\n            }} inkBarColor=\"accent\" textColor=\"inherit\" borderless mdxType=\"TabHeader\">\n            <TabHeaderItem title=\"标签1\" mdxType=\"TabHeaderItem\" />\n            <TabHeaderItem title=\"标签2\" mdxType=\"TabHeaderItem\" />\n            <TabHeaderItem title=\"标签3\" mdxType=\"TabHeaderItem\" />\n          </TabHeader>\n        </AppBar>\n        <TabContent selectedIndex={active} mdxType=\"TabContent\">\n          <TabPanel mdxType=\"TabPanel\">标签内容1</TabPanel>\n          <TabPanel mdxType=\"TabPanel\">标签内容2</TabPanel>\n          <TabPanel mdxType=\"TabPanel\">标签内容3</TabPanel>\n        </TabContent>\n      </TabGroup>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"从教培项目中的-tabgroup-迁移样式\"\n    }}>{`从教培项目中的 TabGroup 迁移样式`}</h2>\n    <p>{`教培项目中的 TabGroup 的 DOM 结构如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"sinoui-tab-group\">\n  <div class=\"sinoui-tab-header\">\n    <div class=\"sinoui-tab-label-container\">\n      <div class=\"sinoui-tab-list\">\n        <div class=\"sinoui-tab-labels\">\n          <div class=\"sinoui-tab-label sinoui-tab-label-active\">\n            <div class=\"sinoui-tab-label-content\">标签1</div>\n          </div>\n          <div class=\"sinoui-tab-label sinoui-tab-label-disabled\">\n            <div class=\"sinoui-tab-label-content\">标签2</div>\n          </div>\n          <div class=\"sinoui-tab-label\">\n            <div class=\"sinoui-tab-label-content\">标签3</div>\n          </div>\n        </div>\n        <div class=\"sinoui-ink-bar\"></div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"sinoui-tab-group-actions\"></div>\n\n  <div class=\"sinoui-tab-group-actions-swiper\">\n    <div class=\"sinoui-tab-content\">标签内容1</div>\n    <div class=\"sinoui-tab-content\">标签内容2</div>\n    <div class=\"sinoui-tab-content\">标签内容3</div>\n  </div>\n</div>\n`}</code></pre>\n    <p>{`变化：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`去掉了 `}<inlineCode parentName=\"li\">{`div.sinoui-tab-label-container`}</inlineCode>{` 这一层`}</li>\n      <li parentName=\"ul\">{`去掉了 `}<inlineCode parentName=\"li\">{`div.sinoui-tab-labels`}</inlineCode>{` 这一层`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-label`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-label-active`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab--active`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-label-disabled`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab--disabled`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-group-actions`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab-header-extra-content`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-group-actions-swiper`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab-content`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-content`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab-panel`}</inlineCode></li>\n    </ul>\n    <p>{`教培团队的同事可以按照上面的变化来调整自定义样式。`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from 'react';\n\n/**\n * 内容区域上下文\n */\nconst TabPanelContext = React.createContext<string>('');\n\nexport default TabPanelContext;\n","import { useMemo } from 'react';\nimport uuid from '../../helpers/uuid';\n\n/**\n * 生成标签id\n */\nfunction useTabId() {\n  const tabId = useMemo(uuid, []);\n\n  return tabId;\n}\n\nexport default useTabId;\n","import { useContext, useEffect } from 'react';\nimport useRefValue from '../../helpers/useRefValue';\nimport TabListContext, { TabProps } from '../TabListContext';\nimport useTabId from './useTabId';\n\n/**\n * 注册标签页\n */\n\nfunction useTabRegister(props?: TabProps): [string, number] {\n  const context = useContext(TabListContext);\n  const tabId = useTabId();\n  const index = context ? context.register(tabId, props || {}) : -1;\n  const unregisterRef = useRefValue(context ? context.unregister : undefined);\n\n  useEffect(() => {\n    const unregister = unregisterRef.current;\n\n    if (unregister) {\n      return () => unregister(tabId);\n    }\n    return undefined;\n  }, [tabId, unregisterRef]);\n\n  return [tabId, index];\n}\n\nexport default useTabRegister;\n","import { useContext, useState, useEffect, useCallback } from 'react';\nimport getNextTabIndex from '../../helpers/getNextTabIndex';\nimport getPrevTabIndex from '../../helpers/getPrevTabIndex';\nimport TabPanelContext from '../TabPanelContext';\nimport TabListContext from '../TabListContext';\nimport TabContentContext from '../TabContentContext';\n\nexport interface TabState {\n  /**\n   * 是否是第一个标签页\n   */\n  isFirst: boolean;\n  /**\n   * 是否是最后一个标签页\n   */\n  isLast: boolean;\n  /**\n   * 跳转到上一页\n   *\n   * @param event 触发事件\n   */\n  prev(event?: React.MouseEvent): void;\n  /**\n   * 调整到下一页\n   * @param event 触发事件\n   */\n  next(event?: React.MouseEvent): void;\n}\n\n/**\n * 使用标签页状态\n */\nexport default function useTabState(): TabState {\n  const tabId = useContext(TabPanelContext);\n  const tabListContext = useContext(TabListContext);\n  const tabContentContext = useContext(TabContentContext);\n  const selectedIndex = tabListContext ? tabListContext.selectedIndex : -1;\n\n  const [isFirst, setIsFirst] = useState(false);\n  const [isLast, setIsLast] = useState(false);\n\n  useEffect(() => {\n    if (tabListContext) {\n      const tabs = tabListContext.getTabs();\n      const isFirstState = tabs[0] === tabId;\n      const isLastState = tabs[tabs.length - 1] === tabId;\n      setIsFirst(isFirstState);\n      setIsLast(isLastState);\n    }\n  }, [tabId, tabListContext]);\n\n  const next = useCallback(\n    (event) => {\n      if (tabListContext && tabContentContext) {\n        const { getTabs, getTabProps } = tabListContext;\n        const tabs = getTabs();\n        const nextTab = getNextTabIndex(selectedIndex, tabs, getTabProps);\n        tabContentContext.onSelect(nextTab, event);\n      }\n    },\n    [selectedIndex, tabContentContext, tabListContext],\n  );\n\n  const prev = useCallback(\n    (event) => {\n      if (tabListContext && tabContentContext) {\n        const { getTabs, getTabProps } = tabListContext;\n        const tabs = getTabs();\n        const prevTab = getPrevTabIndex(selectedIndex, tabs, getTabProps);\n        tabContentContext.onSelect(prevTab, event);\n      }\n    },\n    [selectedIndex, tabContentContext, tabListContext],\n  );\n\n  return { isFirst, isLast, next, prev };\n}\n","import styled, { css } from 'styled-components';\nimport { getColorFromTheme } from 'sinoui-components/utils/colors';\nimport { Theme } from '@sinoui/theme';\n\ninterface TabHeaderItemWrapperProps {\n  disabled?: boolean;\n  active?: boolean;\n  color?: string;\n  theme: Theme;\n}\n\nconst getTextColor = (props: TabHeaderItemWrapperProps) => {\n  const { disabled, active, color } = props;\n\n  if (color === 'inherit') {\n    return color;\n  }\n  if (active) {\n    return getColorFromTheme(props, props.theme.palette.primary[500]);\n  }\n\n  if (disabled) {\n    return props.theme.palette.text.disabled;\n  }\n\n  return props.theme.palette.text.primary;\n};\n\nconst hoverCss = css`\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst activeCss = css`\n  opacity: 1;\n`;\n\nconst disabledCss = css`\n  cursor: not-allowed;\n`;\n\nconst TabHeaderItemWrapper = styled.div<TabHeaderItemWrapperProps>`\n  height: 48px;\n  padding: 0 24px;\n  cursor: pointer;\n  box-sizing: border-box;\n  opacity: 0.6;\n  text-align: center;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap; /* 不换行显示 */\n  color: ${(props) => getTextColor(props)};\n  outline: none;\n  user-select: none;\n  flex-shrink: 0;\n  letter-spacing: 1.25px;\n  font-weight: 500;\n  position: relative;\n  white-space: nowrap;\n  transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n    color 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  -webkit-tap-highlight-color: transparent;\n\n  ${(props) => !props.disabled && hoverCss};\n  ${(props) => props.disabled && disabledCss};\n  ${(props) => props.active && activeCss};\n`;\n\nexport default TabHeaderItemWrapper;\n","import React, { useContext, useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useRipple } from '@sinoui/ripple';\nimport getNextTabIndex from '../../helpers/getNextTabIndex';\nimport getPrevTabIndex from '../../helpers/getPrevTabIndex';\nimport {\n  LEFT_KEY_CODE,\n  TOP_KEY_CODE,\n  RIGHT_KEY_CODE,\n  BOTTOM_KEY_CODE,\n} from '../../constants';\nimport TabHeaderItemWrapper from './TabHeaderItemWrapper';\nimport TabListContext from '../TabListContext';\nimport useTabRegister from '../commons/useTabRegister';\nimport TabHeaderContext from '../TabHeaderContext';\n\ninterface Props {\n  /**\n   * 标签标题\n   */\n  title: React.ReactNode;\n  /**\n   * 指定自定义样式名\n   */\n  className?: string;\n  /**\n   * 指定自定义样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 设置为 `true`，则禁用标签。\n   */\n  disabled?: boolean;\n  /**\n   * 指定标签页id\n   */\n  id?: string;\n}\n\n/**\n * 头部选项卡项组件\n */\nfunction TabHeaderItem({\n  title,\n  className,\n  style,\n  disabled,\n  id,\n  ...rest\n}: Props) {\n  const tabListContext = useContext(TabListContext);\n  const tabHeaderContext = useContext(TabHeaderContext);\n  const [tabId, index] = useTabRegister({ disabled });\n  const selectedIndex = tabListContext ? tabListContext.selectedIndex : -1;\n  const isActive = index === selectedIndex;\n\n  const rippleRef = useRipple<HTMLDivElement>(undefined, disabled);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      if (tabHeaderContext) {\n        tabHeaderContext.onSelect(index, event);\n      }\n    },\n    [index, tabHeaderContext],\n  );\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const { keyCode } = event;\n      if (tabListContext && tabHeaderContext) {\n        const { getTabs, getTabProps } = tabListContext;\n        const tabs = getTabs();\n        if (keyCode === RIGHT_KEY_CODE || keyCode === BOTTOM_KEY_CODE) {\n          event.stopPropagation();\n          event.preventDefault();\n          const nextTab = getNextTabIndex(selectedIndex, tabs, getTabProps);\n          tabHeaderContext.onSelect(nextTab, event);\n        } else if (keyCode === LEFT_KEY_CODE || keyCode === TOP_KEY_CODE) {\n          event.stopPropagation();\n          event.preventDefault();\n          const prevTab = getPrevTabIndex(selectedIndex, tabs, getTabProps);\n          tabHeaderContext.onSelect(prevTab, event);\n        }\n      }\n    },\n    [selectedIndex, tabHeaderContext, tabListContext],\n  );\n\n  if (index === -1) {\n    return null;\n  }\n\n  return (\n    <TabHeaderItemWrapper\n      className={classNames('sinoui-tab', className, {\n        'sinoui-tab--active': isActive,\n        'sinoui-tab--disabled': disabled,\n      })}\n      style={style}\n      disabled={disabled}\n      active={isActive}\n      onClick={disabled ? undefined : handleClick}\n      ref={rippleRef}\n      data-testid={`tab-header-item-${index}`}\n      role=\"tab\"\n      tabIndex={isActive ? 0 : -1}\n      aria-disabled={disabled}\n      aria-selected={isActive}\n      onKeyDown={disabled ? undefined : handleKeyDown}\n      color={tabHeaderContext ? tabHeaderContext.textColor : undefined}\n      id={id || tabId}\n      {...rest}\n    >\n      {title}\n    </TabHeaderItemWrapper>\n  );\n}\n\nexport default TabHeaderItem;\n","import TabHeaderItem from './TabHeaderItem';\n\nexport default TabHeaderItem;\n","import styled, { css } from 'styled-components';\n\ninterface Props {\n  active: boolean;\n}\n\nconst hiddenCss = css`\n  height: 0px;\n`;\n\nconst TabPanelWrapper = styled.div<Props>`\n  width: 100%;\n  flex-shrink: 0;\n  overflow: auto;\n\n  ${(props) => !props.active && hiddenCss};\n`;\n\nexport default TabPanelWrapper;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useContext, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport TabPanelWrapper from './TabPanelWrapper';\nimport TabListContext from '../TabListContext';\nimport useTabRegister from '../commons/useTabRegister';\nimport TabContentContext from '../TabContentContext';\nimport TabPanelContext from '../TabPanelContext';\n\ninterface TabPanelProps {\n  children: React.ReactNode;\n  /**\n   * 指定自定义样式名\n   */\n  className?: string;\n  /**\n   * 指定自定义样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 指定标签 id\n   */\n  tabId?: string;\n  /**\n   * 默认情况下，只有当前标签内容会渲染到 DOM 中。设置为 `true`，会在组件初始化时立即将标签内容渲染到 DOM 中。\n   */\n  forceRenderContent?: boolean;\n  /**\n   * 设置启用标签面板渲染到 DOM 的内容缓存。默认为 `true`。\n   */\n  cacheable?: boolean;\n}\n\n/**\n * 获取是否启用标签渲染缓存特性的hook。\n *\n * @param isCacheable 是否启用缓存特性的属性\n */\nfunction useIsCacheable(isCacheable?: boolean) {\n  const tabContentContext = useContext(TabContentContext);\n\n  if (typeof isCacheable === 'boolean') {\n    return isCacheable;\n  }\n\n  if (tabContentContext && typeof tabContentContext.cacheable === 'boolean') {\n    return tabContentContext.cacheable;\n  }\n\n  return true;\n}\n\n/**\n * 判断是否需要渲染标签面板的hook。\n *\n * @param isCacheable 是否启用了标签面板内容缓存\n * @param isActive 是否是当前标签面板\n */\nfunction useIsNeedRendered(isCacheable: boolean, isActive: boolean) {\n  const isNeedRenderedRef = useRef(false);\n\n  const isNeedRendered = isActive || (isCacheable && isNeedRenderedRef.current);\n\n  useEffect(() => {\n    if (isActive && isCacheable) {\n      isNeedRenderedRef.current = true;\n    }\n  });\n\n  return isNeedRendered;\n}\n\n/**\n * 判断是否是当前面板面板的hook。\n *\n * @param index 标签面板索引位置\n */\nfunction useIsActive(index: number) {\n  const context = useContext(TabListContext);\n  const selectedIndex = context ? context.selectedIndex : 0;\n\n  return index === selectedIndex;\n}\n\n/**\n * 判断是否强制渲染标签面板内容的hook。\n *\n * @param isForceRenderContent 是否强制渲染的属性\n */\nfunction useIsForceRenderContent(isForceRenderContent?: boolean) {\n  const tabContentContext = useContext(TabContentContext);\n\n  if (typeof isForceRenderContent === 'boolean') {\n    return isForceRenderContent;\n  }\n  return !!tabContentContext && tabContentContext.forceRenderTabPanel;\n}\n\n/**\n * 获取即将渲染的标签面板内容\n *\n * @param isActive 是否是当前标签\n * @param children 内容\n */\nfunction useRenderingChildren(isActive: boolean, children?: React.ReactNode) {\n  const activeChildren = useRef(children);\n  const renderingChildren = isActive ? children : activeChildren.current;\n\n  useEffect(() => {\n    if (isActive) {\n      activeChildren.current = children;\n    }\n  });\n\n  return renderingChildren;\n}\n\n/**\n * 标签页面板组件\n */\nexport default function TabPanel(props: TabPanelProps) {\n  const {\n    children,\n    className,\n    forceRenderContent,\n    cacheable,\n    ...other\n  } = props;\n  const [tabId, index] = useTabRegister();\n  const isActive = useIsActive(index);\n  const isCacheable = useIsCacheable(cacheable);\n  const isNeedRendered = useIsNeedRendered(isCacheable, isActive);\n  const isForceRenderContent = useIsForceRenderContent(forceRenderContent);\n  const renderingChildren = useRenderingChildren(isActive, children);\n\n  if (index === -1) {\n    return null;\n  }\n\n  return (\n    <TabPanelContext.Provider value={tabId}>\n      <TabPanelWrapper\n        data-testid={`tab-panel-${index}`}\n        role=\"tabpanel\"\n        aria-hidden={!isActive}\n        aria-labelledby={props.tabId}\n        id={tabId}\n        {...other}\n        className={classNames(\n          'sinoui-tab-panel',\n          {\n            'sinoui-tab-panel--active': isActive,\n          },\n          className,\n        )}\n        active={isActive}\n      >\n        {isNeedRendered || isForceRenderContent ? renderingChildren : null}\n      </TabPanelWrapper>\n    </TabPanelContext.Provider>\n  );\n}\n","import TabPanel from './TabPanel';\n\nexport default TabPanel;\n","import { useContext } from 'react';\nimport TabHeaderContext from '../TabHeaderContext';\n\nfunction useInTabHeader() {\n  const context = useContext(TabHeaderContext);\n\n  return !!context;\n}\n\nexport default useInTabHeader;\n","import { useContext } from 'react';\nimport TabContentContext from '../TabContentContext';\n\nfunction useInTabContent() {\n  const context = useContext(TabContentContext);\n\n  return !!context;\n}\n\nexport default useInTabContent;\n","import React from 'react';\nimport useInTabHeader from './useInTabHeader';\nimport useInTabContent from './useInTabContent';\nimport TabHeaderItem from '../tab-header-item';\nimport TabPanel from '../tab-panel';\n\ninterface Props {\n  /**\n   * 指定标签页标题。\n   */\n  title: React.ReactNode;\n  /**\n   * 指定标签页内容。\n   */\n  children: React.ReactNode;\n\n  /**\n   * 设置为 `true` 则禁用标签。默认为 `false`。\n   */\n  disabled?: boolean;\n\n  /**\n   * 指定标签id\n   */\n  id?: string;\n\n  /**\n   * 默认情况下，只有当前标签的内容会渲染到 DOM 中。设置为 `true`，则组件初始化时立即渲染标签面板内容到 DOM 中。\n   */\n  forceRenderTabPanel?: boolean;\n}\n\n/**\n * 标签页组件\n *\n * @param {Props} props\n * @returns\n */\nfunction Tab({ children, title, disabled, id, forceRenderTabPanel }: Props) {\n  const isInTabHeader = useInTabHeader();\n  const isInTabContent = useInTabContent();\n\n  if (isInTabHeader) {\n    return <TabHeaderItem title={title} disabled={disabled} id={id} />;\n  }\n\n  if (isInTabContent) {\n    return (\n      <TabPanel tabId={id} forceRenderContent={forceRenderTabPanel}>\n        {children}\n      </TabPanel>\n    );\n  }\n\n  return null;\n}\n\nexport default Tab;\n","/**\n * 获取下一个可用的tab索引\n *\n * @param {number} selectedIndex\n * @param {string[]} tabs\n * @param {(tabId: string) => { disabled?: boolean }} getTabProps\n * @returns\n */\nexport default function getNextTabIndex(\n  selectedIndex: number,\n  tabs: string[],\n  getTabProps: (tabId: string) => { disabled?: boolean },\n): number {\n  let i = selectedIndex + 1;\n  for (; i < tabs.length; i += 1) {\n    const tabId = tabs[i];\n    const tabDisabled = getTabProps(tabId).disabled;\n    if (!tabDisabled) {\n      return i;\n    }\n  }\n\n  if (i === tabs.length) {\n    return getNextTabIndex(-1, tabs, getTabProps);\n  }\n\n  return 0;\n}\n","/**\n * 获取上一个可用标签页的索引\n *\n * @param {number} selectedIndex\n * @param {string[]} tabs\n * @param {(tabId: string) => { disabled?: boolean }} getTabProps\n * @returns\n */\nexport default function getPrevTabIndex(\n  selectedIndex: number,\n  tabs: string[],\n  getTabProps: (tabId: string) => { disabled?: boolean },\n): number {\n  let i = selectedIndex - 1;\n  for (; i > 0; i -= 1) {\n    const tabId = tabs[i];\n    const tabDisabled = getTabProps(tabId).disabled;\n    if (!tabDisabled) {\n      return i;\n    }\n  }\n\n  if (selectedIndex === 0) {\n    return getPrevTabIndex(tabs.length, tabs, getTabProps);\n  }\n\n  return 0;\n}\n","let count = 0;\n\n/**\n * 生成新的标签id\n */\nfunction uuid() {\n  const id = count;\n  count += 1;\n  return `tab-${id}`;\n}\n\n/**\n *  重置计数器\n */\nexport function reset() {\n  count = 0;\n}\n\nexport default uuid;\n","import Tab from './Tab';\n\nexport default Tab;\n","import TabHeader from './components/tab-header';\nimport TabHeaderItem from './components/tab-header-item';\nimport TabContent from './components/tab-content';\nimport TabPanel from './components/tab-panel';\nimport TabGroup from './components/TabGroup';\nimport Tab from './components/tab';\nimport { reset } from './helpers/uuid';\nimport useTabState from './components/commons/useTabState';\n\nexport {\n  Tab,\n  TabHeader,\n  TabHeaderItem,\n  TabContent,\n  TabPanel,\n  reset as resetIdCounter,\n  useTabState,\n};\n\nexport default TabGroup;\n"],"sourceRoot":""}