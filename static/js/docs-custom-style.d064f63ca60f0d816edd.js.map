{"version":3,"sources":["/Users/sinosoft/Documents/GitHub/tab-group/docs/custom-style.mdx","/Users/sinosoft/Documents/GitHub/tab-group/src/components/commons/useTabId.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/commons/useTabRegister.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/constants.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-header-item/TabHeaderItemWrapper.tsx","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-header-item/TabHeaderItem.tsx","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-header-item/index.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-panel/TabPanelWrapper.tsx","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-panel/TabPanel.tsx","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab-panel/index.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab/useInTabHeader.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab/useInTabContent.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab/Tab.tsx","/Users/sinosoft/Documents/GitHub/tab-group/src/helpers/uuid.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/components/tab/index.ts","/Users/sinosoft/Documents/GitHub/tab-group/src/index.ts"],"names":["name","layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","Playground","styled","TabGroup","Tab","CustomTabGroup","background","display","justifyContent","alignItems","content","width","height","theme","palette","primary","title","isMDXComponent","useTabId","useMemo","uuid","useTabRegister","context","useContext","TabListContext","tabId","index","register","unregisterRef","useRefValue","unregister","undefined","useEffect","current","LEFT_KEY_CODE","TOP_KEY_CODE","RIGHT_KEY_CODE","BOTTOM_KEY_CODE","hoverCss","css","activeCss","disabledCss","text","disabled","TabHeaderItemWrapper","div","active","TabHeaderItem","className","style","id","rest","tabListContext","tabHeaderContext","TabHeaderContext","selectedIndex","isActive","rippleRef","useRipple","handleClick","useCallback","event","onSelect","handleKeyDown","keyCode","getTabs","getTabProps","tabs","stopPropagation","preventDefault","nextTab","getNextTabIndex","i","length","prevTab","getPrevTabIndex","classNames","onClick","ref","data-testid","role","tabIndex","aria-disabled","aria-selected","onKeyDown","hiddenCss","TabPanelWrapper","TabPanel","children","forceRenderContent","cacheable","other","useIsActive","isNeedRendered","isCacheable","isNeedRenderedRef","useRef","useIsNeedRendered","tabContentContext","TabContentContext","useIsCacheable","isForceRenderContent","forceRenderTabPanel","useIsForceRenderContent","renderingChildren","activeChildren","useRenderingChildren","aria-hidden","aria-labelledby","useInTabHeader","useInTabContent","isInTabHeader","isInTabContent","count","reset"],"mappings":"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","file":"static/js/docs-custom-style.22df74b9.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz';\nimport styled from 'styled-components';\nimport TabGroup, { Tab } from '../src';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst CustomTabGroup = makeShortcode(\"CustomTabGroup\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"样式定制\"\n    }}>{`样式定制`}</h1>\n    <p>{`TabGroup 采用 `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.styled-components.com/\"\n      }}>{`styled-components`}</a>{` 封装的组件样式，并且有完整的 css class。我们可以采取几乎任何主流方式来定制 TabGroup 的样式。`}</p>\n    <p>{`要想定制样式，先了解一下组件的 DOM 结构和对应的 css class。`}</p>\n    <h2 {...{\n      \"id\": \"dom-结构与-css-class\"\n    }}>{`DOM 结构与 css class`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"sinoui-tab-group\">\n  <div class=\"sinoui-tab-header\">\n    <!--向前滚动按钮-->\n    <div class=\"sinoui-tab-header-scroll-button\"></div>\n\n    <div class=\"sinoui-tab-list\">\n      <div class=\"sinoui-tab sinoui-tab--active\">\n        <div class=\"sinoui-tab__content\">\n          标签标题1\n        </div>\n      </div>\n      <div class=\"sinoui-tab sinoui-tab--disabled\">\n        <div class=\"sinoui-tab__content\">\n          标签标题2\n        </div>\n      </div>\n      <div class=\"sinoui-tab\">\n        <div class=\"sinoui-tab__content\">\n          标签标题3\n        </div>\n      </div>\n      <!--...-->\n\n      <!--当前标签选项指示器-->\n      <div class=\"sinoui-ink-bar\"></div>\n    </div>\n\n    <!--向后滚动按钮-->\n    <div class=\"sinoui-tab-header-scroll-button\"></div>\n\n    <!--附加内容-->\n    <div class=\"sinoui-tab-header-extra-content\"></div>\n  </div>\n  <div class=\"sinoui-tab-content\">\n    <div class=\"sinoui-tab-panel-list\">\n      <div class=\"sinoui-tab-panel sinoui-tab-panel--active\">标签内容1</div>\n      <div class=\"sinoui-tab-panel\">标签内容2</div>\n      <div class=\"sinoui-tab-panel\">标签内容3</div>\n      <!--...-->\n    </div>\n  </div>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"定制指示器样式\"\n    }}>{`定制指示器样式`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport styled from 'styled-components';\nimport TabGroup, { Tab } from '../src';\n\nconst CustomTabGroup = styled(TabGroup)\\`\n  .sinoui-ink-bar {\n    background: transparent;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    ::after {\n      content: '';\n      display: block;\n      width: 30px;\n      height: 2px;\n      background: \\${(props) => props.theme.palette.primary[500]};\n    }\n  }\n\\`;\n\nfunction CustomInkbarDemo() {\n  return (\n    <CustomTabGroup>\n      <Tab title=\"标签1\">标签内容1</Tab>\n      <Tab title=\"标签2\">标签内容2</Tab>\n      <Tab title=\"标签3\">标签内容3</Tab>\n    </CustomTabGroup>\n  );\n}\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const CustomTabGroup = styled(TabGroup)(props => ({\\n    \\'.sinoui-ink-bar\\': {\\n      background: \\'transparent\\',\\n      display: \\'flex\\',\\n      justifyContent: \\'center\\',\\n      alignItems: \\'center\\',\\n      \\'::after\\': {\\n        content: \\'\\\"\\\"\\',\\n        display: \\'block\\',\\n        width: 30,\\n        height: 2,\\n        background: props.theme.palette.primary[500],\\n      },\\n    },\\n  }))\\n  return (\\n    <CustomTabGroup>\\n      <Tab title=\\\"标签1\\\">标签内容1</Tab>\\n      <Tab title=\\\"标签2\\\">标签内容2</Tab>\\n      <Tab title=\\\"标签3\\\">标签内容3</Tab>\\n    </CustomTabGroup>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      styled,\n      TabGroup,\n      Tab\n    }} mdxType=\"Playground\">\n  {() => {\n        const CustomTabGroup = styled(TabGroup)(props => ({\n          '.sinoui-ink-bar': {\n            background: 'transparent',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '::after': {\n              content: '\"\"',\n              display: 'block',\n              width: 30,\n              height: 2,\n              background: props.theme.palette.primary[500]\n            }\n          }\n        }));\n        return <CustomTabGroup mdxType=\"CustomTabGroup\">\n  <Tab title=\"标签1\" mdxType=\"Tab\">标签内容1</Tab>\n  <Tab title=\"标签2\" mdxType=\"Tab\">标签内容2</Tab>\n  <Tab title=\"标签3\" mdxType=\"Tab\">标签内容3</Tab>\n        </CustomTabGroup>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"从教培项目中的-tabgroup-迁移样式\"\n    }}>{`从教培项目中的 TabGroup 迁移样式`}</h2>\n    <p>{`教培项目中的 TabGroup 的 DOM 结构如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"sinoui-tab-group\">\n  <div class=\"sinoui-tab-header\">\n    <div class=\"sinoui-tab-label-container\">\n      <div class=\"sinoui-tab-list\">\n        <div class=\"sinoui-tab-labels\">\n          <div class=\"sinoui-tab-label sinoui-tab-label-active\">\n            <div class=\"sinoui-tab-label-content\">标签1</div>\n          </div>\n          <div class=\"sinoui-tab-label sinoui-tab-label-disabled\">\n            <div class=\"sinoui-tab-label-content\">标签2</div>\n          </div>\n          <div class=\"sinoui-tab-label\">\n            <div class=\"sinoui-tab-label-content\">标签3</div>\n          </div>\n        </div>\n        <div class=\"sinoui-ink-bar\"></div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"sinoui-tab-group-actions\"></div>\n\n  <div class=\"sinoui-tab-group-actions-swiper\">\n    <div class=\"sinoui-tab-content\">标签内容1</div>\n    <div class=\"sinoui-tab-content\">标签内容2</div>\n    <div class=\"sinoui-tab-content\">标签内容3</div>\n  </div>\n</div>\n`}</code></pre>\n    <p>{`变化：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`去掉了 `}<inlineCode parentName=\"li\">{`div.sinoui-tab-label-container`}</inlineCode>{` 这一层`}</li>\n      <li parentName=\"ul\">{`去掉了 `}<inlineCode parentName=\"li\">{`div.sinoui-tab-labels`}</inlineCode>{` 这一层`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-label`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-label-active`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab--active`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-label-disabled`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab--disabled`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-group-actions`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab-header-extra-content`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-group-actions-swiper`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab-content`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.sinoui-tab-content`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`.sinoui-tab-panel`}</inlineCode></li>\n    </ul>\n    <p>{`教培团队的同事可以按照上面的变化来调整自定义样式。`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import { useMemo } from 'react';\nimport uuid from '../../helpers/uuid';\n\n/**\n * 生成标签id\n */\nfunction useTabId() {\n  const tabId = useMemo(uuid, []);\n\n  return tabId;\n}\n\nexport default useTabId;\n","import { useContext, useEffect } from 'react';\nimport useRefValue from '../../helpers/useRefValue';\nimport TabListContext, { TabProps } from '../TabListContext';\nimport useTabId from './useTabId';\n\n/**\n * 注册标签页\n */\n\nfunction useTabRegister(props?: TabProps): [string, number] {\n  const context = useContext(TabListContext);\n  const tabId = useTabId();\n  const index = context ? context.register(tabId, props || {}) : -1;\n  const unregisterRef = useRefValue(context ? context.unregister : undefined);\n\n  useEffect(() => {\n    const unregister = unregisterRef.current;\n\n    if (unregister) {\n      return () => unregister(tabId);\n    }\n    return undefined;\n  }, [tabId, unregisterRef]);\n\n  return [tabId, index];\n}\n\nexport default useTabRegister;\n","export const LEFT_KEY_CODE = 37; // 方向键左\n\nexport const TOP_KEY_CODE = 38; // 方向键上\n\nexport const RIGHT_KEY_CODE = 39; // 方向键右\n\nexport const BOTTOM_KEY_CODE = 40; // 方向键下\n","import styled, { css } from 'styled-components';\n\nconst hoverCss = css`\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst activeCss = css`\n  color: ${(props) => props.theme.palette.primary[500]};\n  opacity: 1;\n`;\n\nconst disabledCss = css`\n  cursor: not-allowed;\n  color: ${(props) => props.theme.palette.text.disabled};\n`;\n\ninterface TabHeaderItemWrapperProps {\n  disabled?: boolean;\n  active?: boolean;\n}\n\nconst TabHeaderItemWrapper = styled.div<TabHeaderItemWrapperProps>`\n  height: 48px;\n  padding: 0 24px;\n  cursor: pointer;\n  box-sizing: border-box;\n  opacity: 0.6;\n  text-align: center;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap; /* 不换行显示 */\n  color: ${(props) => props.theme.palette.text.primary};\n  outline: none;\n  user-select: none;\n  flex-shrink: 0;\n  letter-spacing: 1.25px;\n  font-weight: 500;\n  position: relative;\n  white-space: nowrap;\n  transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n    color 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${(props) => !props.disabled && hoverCss};\n  ${(props) => props.disabled && disabledCss};\n  ${(props) => props.active && activeCss};\n`;\n\nexport default TabHeaderItemWrapper;\n","import React, { useContext, useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useRipple } from '@sinoui/ripple';\nimport {\n  LEFT_KEY_CODE,\n  TOP_KEY_CODE,\n  RIGHT_KEY_CODE,\n  BOTTOM_KEY_CODE,\n} from '../../constants';\nimport TabHeaderItemWrapper from './TabHeaderItemWrapper';\nimport TabListContext from '../TabListContext';\nimport useTabRegister from '../commons/useTabRegister';\nimport TabHeaderContext from '../TabHeaderContext';\n\ninterface Props {\n  /**\n   * 标签标题\n   */\n  title: React.ReactNode;\n  /**\n   * 指定自定义样式名\n   */\n  className?: string;\n  /**\n   * 指定自定义样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 设置为 `true`，则禁用标签。\n   */\n  disabled?: boolean;\n  /**\n   * 指定标签页id\n   */\n  id?: string;\n}\n\n/**\n * 获取下一个可用的tab索引\n *\n * @param {number} selectedIndex\n * @param {string[]} tabs\n * @param {(tabId: string) => { disabled?: boolean }} getTabProps\n * @returns\n */\nfunction getNextTabIndex(\n  selectedIndex: number,\n  tabs: string[],\n  getTabProps: (tabId: string) => { disabled?: boolean },\n): number {\n  let i = selectedIndex + 1;\n  for (; i < tabs.length; i += 1) {\n    const tabId = tabs[i];\n    const tabDisabled = getTabProps(tabId).disabled;\n    if (!tabDisabled) {\n      return i;\n    }\n  }\n\n  if (i === tabs.length) {\n    return getNextTabIndex(-1, tabs, getTabProps);\n  }\n\n  return 0;\n}\n\n/**\n * 获取上一个可用标签页的索引\n *\n * @param {number} selectedIndex\n * @param {string[]} tabs\n * @param {(tabId: string) => { disabled?: boolean }} getTabProps\n * @returns\n */\nfunction getPrevTabIndex(\n  selectedIndex: number,\n  tabs: string[],\n  getTabProps: (tabId: string) => { disabled?: boolean },\n): number {\n  let i = selectedIndex - 1;\n  for (; i > 0; i -= 1) {\n    const tabId = tabs[i];\n    const tabDisabled = getTabProps(tabId).disabled;\n    if (!tabDisabled) {\n      return i;\n    }\n  }\n\n  if (selectedIndex === 0) {\n    return getPrevTabIndex(tabs.length, tabs, getTabProps);\n  }\n\n  return 0;\n}\n\n/**\n * 头部选项卡项组件\n */\nfunction TabHeaderItem({\n  title,\n  className,\n  style,\n  disabled,\n  id,\n  ...rest\n}: Props) {\n  const tabListContext = useContext(TabListContext);\n  const tabHeaderContext = useContext(TabHeaderContext);\n  const [tabId, index] = useTabRegister({ disabled });\n  const selectedIndex = tabListContext ? tabListContext.selectedIndex : -1;\n  const isActive = index === selectedIndex;\n\n  const rippleRef = useRipple<HTMLDivElement>(undefined, disabled);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      if (tabHeaderContext) {\n        tabHeaderContext.onSelect(index, event);\n      }\n    },\n    [index, tabHeaderContext],\n  );\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const { keyCode } = event;\n      if (tabListContext && tabHeaderContext) {\n        const { getTabs, getTabProps } = tabListContext;\n        const tabs = getTabs();\n        if (keyCode === RIGHT_KEY_CODE || keyCode === BOTTOM_KEY_CODE) {\n          event.stopPropagation();\n          event.preventDefault();\n          const nextTab = getNextTabIndex(selectedIndex, tabs, getTabProps);\n          tabHeaderContext.onSelect(nextTab, event);\n        } else if (keyCode === LEFT_KEY_CODE || keyCode === TOP_KEY_CODE) {\n          event.stopPropagation();\n          event.preventDefault();\n          const prevTab = getPrevTabIndex(selectedIndex, tabs, getTabProps);\n          tabHeaderContext.onSelect(prevTab, event);\n        }\n      }\n    },\n    [selectedIndex, tabHeaderContext, tabListContext],\n  );\n\n  if (index === -1) {\n    return null;\n  }\n\n  return (\n    <TabHeaderItemWrapper\n      className={classNames('sinoui-tab', className, {\n        'sinoui-tab--active': isActive,\n        'sinoui-tab--disabled': disabled,\n      })}\n      style={style}\n      disabled={disabled}\n      active={isActive}\n      onClick={disabled ? undefined : handleClick}\n      ref={rippleRef}\n      data-testid={`tab-header-item-${index}`}\n      role=\"tab\"\n      tabIndex={isActive ? 0 : -1}\n      aria-disabled={disabled}\n      aria-selected={isActive}\n      onKeyDown={disabled ? undefined : handleKeyDown}\n      id={id || tabId}\n      {...rest}\n    >\n      {title}\n    </TabHeaderItemWrapper>\n  );\n}\n\nexport default TabHeaderItem;\n","import TabHeaderItem from './TabHeaderItem';\n\nexport default TabHeaderItem;\n","import styled, { css } from 'styled-components';\n\ninterface Props {\n  active: boolean;\n}\n\nconst hiddenCss = css`\n  height: 0px;\n`;\n\nconst TabPanelWrapper = styled.div<Props>`\n  width: 100%;\n  flex-shrink: 0;\n  overflow: auto;\n\n  ${(props) => !props.active && hiddenCss};\n`;\n\nexport default TabPanelWrapper;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useContext, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport TabPanelWrapper from './TabPanelWrapper';\nimport TabListContext from '../TabListContext';\nimport useTabRegister from '../commons/useTabRegister';\nimport TabContentContext from '../TabContentContext';\n\ninterface TabPanelProps {\n  children: React.ReactNode;\n  /**\n   * 指定自定义样式名\n   */\n  className?: string;\n  /**\n   * 指定自定义样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 指定标签 id\n   */\n  tabId?: string;\n  /**\n   * 默认情况下，只有当前标签内容会渲染到 DOM 中。设置为 `true`，会在组件初始化时立即将标签内容渲染到 DOM 中。\n   */\n  forceRenderContent?: boolean;\n  /**\n   * 设置启用标签面板渲染到 DOM 的内容缓存。默认为 `true`。\n   */\n  cacheable?: boolean;\n}\n\n/**\n * 获取是否启用标签渲染缓存特性的hook。\n *\n * @param isCacheable 是否启用缓存特性的属性\n */\nfunction useIsCacheable(isCacheable?: boolean) {\n  const tabContentContext = useContext(TabContentContext);\n\n  if (typeof isCacheable === 'boolean') {\n    return isCacheable;\n  }\n\n  if (tabContentContext && typeof tabContentContext.cacheable === 'boolean') {\n    return tabContentContext.cacheable;\n  }\n\n  return true;\n}\n\n/**\n * 判断是否需要渲染标签面板的hook。\n *\n * @param isCacheable 是否启用了标签面板内容缓存\n * @param isActive 是否是当前标签面板\n */\nfunction useIsNeedRendered(isCacheable: boolean, isActive: boolean) {\n  const isNeedRenderedRef = useRef(false);\n\n  const isNeedRendered = isActive || (isCacheable && isNeedRenderedRef.current);\n\n  useEffect(() => {\n    if (isActive && isCacheable) {\n      isNeedRenderedRef.current = true;\n    }\n  });\n\n  return isNeedRendered;\n}\n\n/**\n * 判断是否是当前面板面板的hook。\n *\n * @param index 标签面板索引位置\n */\nfunction useIsActive(index: number) {\n  const context = useContext(TabListContext);\n  const selectedIndex = context ? context.selectedIndex : 0;\n\n  return index === selectedIndex;\n}\n\n/**\n * 判断是否强制渲染标签面板内容的hook。\n *\n * @param isForceRenderContent 是否强制渲染的属性\n */\nfunction useIsForceRenderContent(isForceRenderContent?: boolean) {\n  const tabContentContext = useContext(TabContentContext);\n\n  if (typeof isForceRenderContent === 'boolean') {\n    return isForceRenderContent;\n  }\n  return !!tabContentContext && tabContentContext.forceRenderTabPanel;\n}\n\n/**\n * 获取即将渲染的标签面板内容\n *\n * @param isActive 是否是当前标签\n * @param children 内容\n */\nfunction useRenderingChildren(isActive: boolean, children?: React.ReactNode) {\n  const activeChildren = useRef(children);\n  const renderingChildren = isActive ? children : activeChildren.current;\n\n  useEffect(() => {\n    if (isActive) {\n      activeChildren.current = children;\n    }\n  });\n\n  return renderingChildren;\n}\n\n/**\n * 标签页面板组件\n */\nexport default function TabPanel(props: TabPanelProps) {\n  const {\n    children,\n    className,\n    forceRenderContent,\n    cacheable,\n    ...other\n  } = props;\n  const [tabId, index] = useTabRegister();\n  const isActive = useIsActive(index);\n  const isCacheable = useIsCacheable(cacheable);\n  const isNeedRendered = useIsNeedRendered(isCacheable, isActive);\n  const isForceRenderContent = useIsForceRenderContent(forceRenderContent);\n  const renderingChildren = useRenderingChildren(isActive, children);\n\n  if (index === -1) {\n    return null;\n  }\n\n  return (\n    <TabPanelWrapper\n      data-testid={`tab-panel-${index}`}\n      role=\"tabpanel\"\n      aria-hidden={!isActive}\n      aria-labelledby={props.tabId}\n      id={tabId}\n      {...other}\n      className={classNames(\n        'sinoui-tab-panel',\n        {\n          'sinoui-tab-panel--active': isActive,\n        },\n        className,\n      )}\n      active={isActive}\n    >\n      {isNeedRendered || isForceRenderContent ? renderingChildren : null}\n    </TabPanelWrapper>\n  );\n}\n","import TabPanel from './TabPanel';\n\nexport default TabPanel;\n","import { useContext } from 'react';\nimport TabHeaderContext from '../TabHeaderContext';\n\nfunction useInTabHeader() {\n  const context = useContext(TabHeaderContext);\n\n  return !!context;\n}\n\nexport default useInTabHeader;\n","import { useContext } from 'react';\nimport TabContentContext from '../TabContentContext';\n\nfunction useInTabContent() {\n  const context = useContext(TabContentContext);\n\n  return !!context;\n}\n\nexport default useInTabContent;\n","import React from 'react';\nimport useInTabHeader from './useInTabHeader';\nimport useInTabContent from './useInTabContent';\nimport TabHeaderItem from '../tab-header-item';\nimport TabPanel from '../tab-panel';\n\ninterface Props {\n  /**\n   * 指定标签页标题。\n   */\n  title: React.ReactNode;\n  /**\n   * 指定标签页内容。\n   */\n  children: React.ReactNode;\n\n  /**\n   * 设置为 `true` 则禁用标签。默认为 `false`。\n   */\n  disabled?: boolean;\n\n  /**\n   * 指定标签id\n   */\n  id?: string;\n\n  /**\n   * 默认情况下，只有当前标签的内容会渲染到 DOM 中。设置为 `true`，则组件初始化时立即渲染标签面板内容到 DOM 中。\n   */\n  forceRenderTabPanel?: boolean;\n}\n\n/**\n * 标签页组件\n *\n * @param {Props} props\n * @returns\n */\nfunction Tab({ children, title, disabled, id, forceRenderTabPanel }: Props) {\n  const isInTabHeader = useInTabHeader();\n  const isInTabContent = useInTabContent();\n\n  if (isInTabHeader) {\n    return <TabHeaderItem title={title} disabled={disabled} id={id} />;\n  }\n\n  if (isInTabContent) {\n    return (\n      <TabPanel tabId={id} forceRenderContent={forceRenderTabPanel}>\n        {children}\n      </TabPanel>\n    );\n  }\n\n  return null;\n}\n\nexport default Tab;\n","let count = 0;\n\n/**\n * 生成新的标签id\n */\nfunction uuid() {\n  const id = count;\n  count += 1;\n  return `tab-${id}`;\n}\n\n/**\n *  重置计数器\n */\nexport function reset() {\n  count = 0;\n}\n\nexport default uuid;\n","import Tab from './Tab';\n\nexport default Tab;\n","import TabHeader from './components/tab-header';\nimport TabHeaderItem from './components/tab-header-item';\nimport TabContent from './components/tab-content';\nimport TabPanel from './components/tab-panel';\nimport TabGroup from './components/TabGroup';\nimport Tab from './components/tab';\nimport { reset } from './helpers/uuid';\n\nexport {\n  Tab,\n  TabHeader,\n  TabHeaderItem,\n  TabContent,\n  TabPanel,\n  reset as resetIdCounter,\n};\n\nexport default TabGroup;\n"],"sourceRoot":""}